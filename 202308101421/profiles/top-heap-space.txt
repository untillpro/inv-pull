File: airs-bp
Type: alloc_space
Time: Aug 10, 2023 at 2:24pm (UTC)
Showing nodes accounting for 537.34MB, 82.93% of 647.94MB total
Dropped 360 nodes (cum <= 3.24MB)
      flat  flat%   sum%        cum   cum%
  105.29MB 16.25% 16.25%   115.79MB 17.87%  encoding/json.(*decodeState).objectInterface
   64.02MB  9.88% 26.13%    84.52MB 13.04%  github.com/untillpro/dynobuffers.glob..func1
   54.20MB  8.36% 34.49%    54.20MB  8.36%  io.ReadAll
   30.50MB  4.71% 39.20%    30.50MB  4.71%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   23.54MB  3.63% 42.84%    23.54MB  3.63%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
   20.50MB  3.16% 46.00%    20.50MB  3.16%  github.com/google/flatbuffers/go.NewBuilder (inline)
   14.50MB  2.24% 48.24%    35.01MB  5.40%  github.com/voedger/voedger/pkg/istructsmem.newValue
      12MB  1.85% 50.09%    49.01MB  7.56%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
    9.72MB  1.50% 51.59%     9.72MB  1.50%  github.com/alecthomas/participle/v2/lexer.Upgrade
    9.50MB  1.47% 53.06%     9.50MB  1.47%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
    9.01MB  1.39% 54.45%     9.01MB  1.39%  github.com/gocql/gocql.(*framer).writeBytes (inline)
       9MB  1.39% 55.84%        9MB  1.39%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
    8.50MB  1.31% 57.15%        9MB  1.39%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
    8.50MB  1.31% 58.46%    16.01MB  2.47%  bytes.(*Buffer).grow
       8MB  1.23% 59.70%        8MB  1.23%  github.com/gocql/gocql.newFramer (inline)
       8MB  1.23% 60.93%        8MB  1.23%  time.NewTimer
    7.51MB  1.16% 62.09%     7.51MB  1.16%  bytes.growSlice
    7.50MB  1.16% 63.25%     7.50MB  1.16%  reflect.mapassign_faststr
    7.50MB  1.16% 64.40%     7.50MB  1.16%  encoding/json.unquote (inline)
       7MB  1.08% 65.48%    39.51MB  6.10%  github.com/voedger/voedger/pkg/istructsmem.newKey
       7MB  1.08% 66.57%        7MB  1.08%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
    6.50MB  1.00% 67.57%     6.50MB  1.00%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
    6.50MB  1.00% 68.57%    29.55MB  4.56%  github.com/gocql/gocql.(*Conn).exec
       6MB  0.93% 69.50%    25.04MB  3.86%  github.com/gocql/gocql.(*Conn).executeBatch
    5.50MB  0.85% 70.35%     5.50MB  0.85%  github.com/gocql/gocql.(*Session).NewBatch
       5MB  0.77% 71.12%        5MB  0.77%  reflect.New
    4.51MB   0.7% 71.81%     4.51MB   0.7%  github.com/alecthomas/participle/v2.newTagLexer
    4.50MB  0.69% 72.51%     4.50MB  0.69%  strings.(*Builder).grow (inline)
    4.50MB  0.69% 73.20%     4.50MB  0.69%  net/textproto.(*Reader).ReadMIMEHeader
    4.50MB  0.69% 73.90%    30.51MB  4.71%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
       4MB  0.62% 74.52%    32.01MB  4.94%  github.com/alecthomas/participle/v2.(*sequence).Parse
       4MB  0.62% 75.13%        4MB  0.62%  encoding/base64.(*Encoding).DecodeString
    3.50MB  0.54% 75.67%     3.50MB  0.54%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
    3.50MB  0.54% 76.21%       23MB  3.55%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
       3MB  0.46% 76.68%       10MB  1.54%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
       3MB  0.46% 77.14%     8.50MB  1.31%  github.com/untillpro/ibusmem.(*bus).SendRequest2
       3MB  0.46% 77.60%        4MB  0.62%  github.com/gocql/gocql.(*framer).parseResultFrame
       3MB  0.46% 78.07%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
       2MB  0.31% 78.38%   123.79MB 19.10%  encoding/json.Unmarshal
       2MB  0.31% 78.68%     9.03MB  1.39%  github.com/gocql/gocql.(*Conn).recv
       2MB  0.31% 78.99%       12MB  1.85%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
    1.50MB  0.23% 79.22%    40.50MB  6.25%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
    1.50MB  0.23% 79.46%    32.51MB  5.02%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
    1.50MB  0.23% 79.69%    32.01MB  4.94%  github.com/alecthomas/participle/v2.(*capture).Parse
    1.50MB  0.23% 79.92%    39.04MB  6.02%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
    1.01MB  0.16% 80.07%     3.54MB  0.55%  github.com/voedger/voedger/pkg/istructsmem/internal/qnames.(*QNames).store
       1MB  0.15% 80.23%     7.50MB  1.16%  net/http.readRequest
       1MB  0.15% 80.38%    20.01MB  3.09%  github.com/gocql/gocql.(*Conn).executeQuery
       1MB  0.15% 80.54%    26.50MB  4.09%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
       1MB  0.15% 80.69%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey
       1MB  0.15% 80.85%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewPartKey
       1MB  0.15% 81.00%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
       1MB  0.15% 81.15%   125.29MB 19.34%  encoding/json.(*decodeState).object
       1MB  0.15% 81.31%       25MB  3.86%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
       1MB  0.15% 81.46%     3.50MB  0.54%  github.com/voedger/voedger/pkg/processors/command.(*opSendResponse).DoSync
    0.50MB 0.077% 81.54%    32.01MB  4.94%  github.com/alecthomas/participle/v2.(*group).Parse
    0.50MB 0.077% 81.62%    22.02MB  3.40%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
    0.50MB 0.077% 81.70%     8.50MB  1.31%  net/http.(*conn).readRequest
    0.50MB 0.077% 81.77%     5.50MB  0.85%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
    0.50MB 0.077% 81.85%       39MB  6.02%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
    0.50MB 0.077% 81.93%    67.70MB 10.45%  github.com/voedger/voedger/pkg/router.requestHandler.func1
    0.50MB 0.077% 82.00%    78.51MB 12.12%  github.com/voedger/voedger/pkg/pipeline.puller_async
    0.50MB 0.077% 82.08%     4.50MB   0.7%  github.com/alecthomas/participle/v2.(*structLexer).Peek
    0.50MB 0.077% 82.16%    19.51MB  3.01%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
    0.50MB 0.077% 82.24%    19.01MB  2.93%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
    0.50MB 0.077% 82.31%    75.36MB 11.63%  github.com/gorilla/mux.(*Router).ServeHTTP
    0.50MB 0.077% 82.39%    30.51MB  4.71%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
    0.50MB 0.077% 82.47%     7.50MB  1.16%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
    0.50MB 0.077% 82.54%   104.77MB 16.17%  encoding/json.(*decodeState).arrayInterface
    0.50MB 0.077% 82.62%     5.51MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.storeRow
    0.50MB 0.077% 82.70%    11.50MB  1.78%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
    0.50MB 0.077% 82.78%    21.51MB  3.32%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
    0.50MB 0.077% 82.85%    11.02MB  1.70%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
    0.50MB 0.077% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0% 82.93%    14.51MB  2.24%  bytes.(*Buffer).Write
         0     0% 82.93%     6.50MB  1.00%  encoding/json.(*Decoder).Decode
         0     0% 82.93%     7.52MB  1.16%  encoding/json.(*decodeState).array
         0     0% 82.93%   125.29MB 19.34%  encoding/json.(*decodeState).unmarshal
         0     0% 82.93%   125.29MB 19.34%  encoding/json.(*decodeState).value
         0     0% 82.93%   104.77MB 16.17%  encoding/json.(*decodeState).valueInterface
         0     0% 82.93%        7MB  1.08%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 82.93%    27.01MB  4.17%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 82.93%    32.73MB  5.05%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 82.93%    34.23MB  5.28%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 82.93%    27.01MB  4.17%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 82.93%    27.01MB  4.17%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 82.93%    32.01MB  4.94%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 82.93%     7.01MB  1.08%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
         0     0% 82.93%    32.01MB  4.94%  github.com/alecthomas/participle/v2.(*strct).Parse
         0     0% 82.93%    25.04MB  3.86%  github.com/gocql/gocql.(*Batch).execute
         0     0% 82.93%     9.03MB  1.39%  github.com/gocql/gocql.(*Conn).serve
         0     0% 82.93%    21.51MB  3.32%  github.com/gocql/gocql.(*Query).Exec
         0     0% 82.93%    21.51MB  3.32%  github.com/gocql/gocql.(*Query).Iter
         0     0% 82.93%    19.51MB  3.01%  github.com/gocql/gocql.(*Query).execute
         0     0% 82.93%    28.54MB  4.40%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 82.93%    28.54MB  4.40%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 82.93%    21.51MB  3.32%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 82.93%     5.50MB  0.85%  github.com/gocql/gocql.(*framer).parseFrame
         0     0% 82.93%     9.51MB  1.47%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 82.93%     9.51MB  1.47%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 82.93%    47.05MB  7.26%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 82.93%    47.05MB  7.26%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 82.93%    50.05MB  7.72%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 82.93%     9.51MB  1.47%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 82.93%       14MB  2.16%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0% 82.93%     3.50MB  0.54%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 82.93%    19.51MB  3.01%  github.com/golang-jwt/jwt.Parse
         0     0% 82.93%       12MB  1.85%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 82.93%        6MB  0.93%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 82.93%    30.50MB  4.71%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 82.93%     8.50MB  1.31%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 82.93%    10.50MB  1.62%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 82.93%       12MB  1.85%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 82.93%        6MB  0.93%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 82.93%    29.81MB  4.60%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 82.93%    26.73MB  4.12%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 82.93%     5.50MB  0.85%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 82.93%        4MB  0.62%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 82.93%     5.50MB  0.85%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0% 82.93%        5MB  0.77%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 82.93%    27.50MB  4.24%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0% 82.93%    12.01MB  1.85%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 82.93%    17.02MB  2.63%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 82.93%     5.50MB  0.85%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0% 82.93%        5MB  0.77%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0% 82.93%     4.50MB  0.69%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
         0     0% 82.93%     4.50MB  0.69%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0% 82.93%       11MB  1.70%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 82.93%        8MB  1.23%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 82.93%    30.01MB  4.63%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 82.93%       20MB  3.09%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 82.93%    26.23MB  4.05%  github.com/untillpro/airs-bp3/packages/untill.Provide
         0     0% 82.93%     9.52MB  1.47%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 82.93%    23.54MB  3.63%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 82.93%    37.01MB  5.71%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 82.93%    37.01MB  5.71%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 82.93%    37.01MB  5.71%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 82.93%     6.50MB  1.00%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0% 82.93%    23.54MB  3.63%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 82.93%    84.52MB 13.04%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 82.93%       16MB  2.47%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 82.93%    84.52MB 13.04%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 82.93%        9MB  1.39%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 82.93%    41.51MB  6.41%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0% 82.93%     7.50MB  1.16%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 82.93%    21.51MB  3.32%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 82.93%    39.04MB  6.02%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 82.93%     7.51MB  1.16%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 82.93%     4.50MB  0.69%  github.com/voedger/voedger/pkg/istorageimpl.(*implIAppStorageProvider).AppStorage
         0     0% 82.93%     4.50MB  0.69%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.appStorageProviderType.Init
         0     0% 82.93%     5.07MB  0.78%  github.com/voedger/voedger/pkg/istructsmem.(*AppConfigType).prepare
         0     0% 82.93%    19.01MB  2.93%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 82.93%    10.01MB  1.54%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 82.93%    11.50MB  1.78%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 82.93%    11.50MB  1.78%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 82.93%        8MB  1.23%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 82.93%     8.50MB  1.31%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 82.93%    10.50MB  1.62%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 82.93%    11.08MB  1.71%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 82.93%    39.51MB  6.10%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 82.93%    19.50MB  3.01%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 82.93%    11.50MB  1.77%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 82.93%    29.03MB  4.48%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 82.93%     6.50MB  1.00%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 82.93%    38.51MB  5.94%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 82.93%       17MB  2.62%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 82.93%     5.50MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 82.93%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0% 82.93%    16.50MB  2.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 82.93%    16.50MB  2.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 82.93%    16.50MB  2.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 82.93%        9MB  1.39%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 82.93%    38.51MB  5.94%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 82.93%     6.50MB  1.00%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 82.93%     6.51MB  1.00%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 82.93%       12MB  1.85%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 82.93%    14.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 82.93%     8.50MB  1.31%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 82.93%    22.02MB  3.40%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 82.93%     4.01MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0% 82.93%    23.52MB  3.63%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 82.93%     8.02MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 82.93%     9.01MB  1.39%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 82.93%    84.52MB 13.04%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 82.93%    67.01MB 10.34%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 82.93%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0% 82.93%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0% 82.93%     4.50MB  0.69%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0% 82.93%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
         0     0% 82.93%     4.50MB  0.69%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0% 82.93%     9.50MB  1.47%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 82.93%     5.50MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 82.93%    21.52MB  3.32%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 82.93%    21.52MB  3.32%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 82.93%     5.51MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 82.93%     5.51MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 82.93%     5.51MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 82.93%     3.54MB  0.55%  github.com/voedger/voedger/pkg/istructsmem/internal/qnames.(*QNames).Prepare
         0     0% 82.93%     8.01MB  1.24%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.WriteUint16 (inline)
         0     0% 82.93%    20.51MB  3.16%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 82.93%    20.51MB  3.16%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0% 82.93%    32.23MB  4.97%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 82.93%    33.23MB  5.13%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 82.93%    59.51MB  9.18%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 82.93%   420.70MB 64.93%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 82.93%   414.70MB 64.00%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 82.93%     5.50MB  0.85%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 82.93%   420.20MB 64.85%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 82.93%    33.01MB  5.09%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 82.93%    19.01MB  2.93%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 82.93%        4MB  0.62%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0% 82.93%    11.50MB  1.78%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 82.93%        9MB  1.39%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 82.93%    29.03MB  4.48%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 82.93%    38.02MB  5.87%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 82.93%    10.01MB  1.54%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 82.93%   119.29MB 18.41%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 82.93%     8.50MB  1.31%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 82.93%    23.50MB  3.63%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 82.93%    57.01MB  8.80%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 82.93%    17.50MB  2.70%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 82.93%    43.51MB  6.71%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 82.93%    26.50MB  4.09%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 82.93%    70.20MB 10.83%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 82.93%    54.20MB  8.36%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 82.93%     7.50MB  1.16%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 82.93%    22.50MB  3.47%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 82.93%       14MB  2.16%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 82.93%    26.50MB  4.09%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 82.93%    28.50MB  4.40%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 82.93%    33.51MB  5.17%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 82.93%     9.50MB  1.47%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 82.93%       23MB  3.55%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 82.93%    22.02MB  3.40%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 82.93%    14.50MB  2.24%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 82.93%    22.02MB  3.40%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 82.93%       12MB  1.85%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 82.93%       14MB  2.16%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 82.93%     9.50MB  1.47%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 82.93%     9.50MB  1.47%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 82.93%        6MB  0.93%  github.com/voedger/voedger/pkg/sys/authnz/workspace.qcwbnQryExec
         0     0% 82.93%    11.50MB  1.78%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 82.93%    34.81MB  5.37%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 82.93%    30.81MB  4.75%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 82.93%    25.73MB  3.97%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 82.93%     3.50MB  0.54%  github.com/voedger/voedger/pkg/vvm.getPrincipalToken
         0     0% 82.93%     7.57MB  1.17%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 82.93%     3.51MB  0.54%  github.com/voedger/voedger/pkg/vvm.provideBlobberAppStruct (inline)
         0     0% 82.93%     5.50MB  0.85%  github.com/voedger/voedger/pkg/vvm.provideIBus.func1
         0     0% 82.93%       16MB  2.47%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 82.93%    22.23MB  3.43%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 82.93%    83.86MB 12.94%  net/http.(*conn).serve
         0     0% 82.93%    71.36MB 11.01%  net/http.HandlerFunc.ServeHTTP
         0     0% 82.93%    75.36MB 11.63%  net/http.serverHandler.ServeHTTP
         0     0% 82.93%     7.50MB  1.16%  reflect.Value.SetMapIndex
         0     0% 82.93%     4.50MB  0.69%  strings.(*Builder).Grow (inline)
         0     0% 82.93%     3.50MB  0.54%  strings.Replace
         0     0% 82.93%     3.50MB  0.54%  strings.ReplaceAll (inline)
         0     0% 82.93%    87.52MB 13.51%  sync.(*Pool).Get
