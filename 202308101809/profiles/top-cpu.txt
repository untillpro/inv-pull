File: airs-bp
Type: cpu
Time: Aug 10, 2023 at 6:11pm (UTC)
Duration: 10.16s, Total samples = 1.23s (12.11%)
Showing nodes accounting for 1.23s, 100% of 1.23s total
      flat  flat%   sum%        cum   cum%
     0.19s 15.45% 15.45%      0.19s 15.45%  runtime.futex
     0.13s 10.57% 26.02%      0.13s 10.57%  runtime/internal/syscall.Syscall6
     0.06s  4.88% 30.89%      0.06s  4.88%  runtime.nextFreeFast (inline)
     0.04s  3.25% 34.15%      0.08s  6.50%  runtime.selectgo
     0.04s  3.25% 37.40%      0.04s  3.25%  runtime.write1
     0.03s  2.44% 39.84%      0.03s  2.44%  runtime.(*itabTableType).find
     0.03s  2.44% 42.28%      0.03s  2.44%  runtime.memmove
     0.02s  1.63% 43.90%      0.03s  2.44%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetT
     0.02s  1.63% 45.53%      0.03s  2.44%  runtime.checkTimers
     0.02s  1.63% 47.15%      0.17s 13.82%  runtime.mallocgc
     0.02s  1.63% 48.78%      0.03s  2.44%  runtime.mapaccess2_faststr
     0.02s  1.63% 50.41%      0.02s  1.63%  runtime.mapiternext
     0.02s  1.63% 52.03%      0.02s  1.63%  runtime.pageIndexOf (inline)
     0.02s  1.63% 53.66%      0.05s  4.07%  runtime.scanobject
     0.01s  0.81% 54.47%      0.01s  0.81%  context.(*cancelCtx).Done
     0.01s  0.81% 55.28%      0.01s  0.81%  encoding/base64.(*Encoding).Decode
     0.01s  0.81% 56.10%      0.01s  0.81%  encoding/json.(*decodeState).readIndex (inline)
     0.01s  0.81% 56.91%      0.01s  0.81%  encoding/json.checkValid
     0.01s  0.81% 57.72%      0.01s  0.81%  encoding/json.stateEndValue
     0.01s  0.81% 58.54%      0.06s  4.88%  github.com/gocql/gocql.(*Conn).recv
     0.01s  0.81% 59.35%      0.10s  8.13%  github.com/gocql/gocql.(*writeCoalescer).flush
     0.01s  0.81% 60.16%      0.01s  0.81%  github.com/gocql/gocql/internal/streams.streamOffset (inline)
     0.01s  0.81% 60.98%      0.01s  0.81%  github.com/google/flatbuffers/go.(*Builder).Reset (inline)
     0.01s  0.81% 61.79%      0.04s  3.25%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
     0.01s  0.81% 62.60%      0.01s  0.81%  github.com/voedger/voedger/pkg/appdef.(*field).DataKind
     0.01s  0.81% 63.41%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).qNameID
     0.01s  0.81% 64.23%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow.func1
     0.01s  0.81% 65.04%      0.04s  3.25%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
     0.01s  0.81% 65.85%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.checkWSActive
     0.01s  0.81% 66.67%      0.01s  0.81%  github.com/voedger/voedger/pkg/projectors.(*eventService).getWSID
     0.01s  0.81% 67.48%      0.01s  0.81%  indexbytebody
     0.01s  0.81% 68.29%      0.02s  1.63%  internal/poll.(*FD).Read
     0.01s  0.81% 69.11%      0.01s  0.81%  memeqbody
     0.01s  0.81% 69.92%      0.01s  0.81%  net/http.(*connReader).lock
     0.01s  0.81% 70.73%      0.01s  0.81%  reflect.(*rtype).exportedMethods
     0.01s  0.81% 71.54%      0.01s  0.81%  reflect.(*rtype).ptrTo
     0.01s  0.81% 72.36%      0.01s  0.81%  runtime.(*limiterEvent).stop
     0.01s  0.81% 73.17%      0.03s  2.44%  runtime.(*mcentral).cacheSpan
     0.01s  0.81% 73.98%      0.01s  0.81%  runtime.(*mspan).init
     0.01s  0.81% 74.80%      0.01s  0.81%  runtime.(*randomEnum).next (inline)
     0.01s  0.81% 75.61%      0.01s  0.81%  runtime.(*semaRoot).dequeue
     0.01s  0.81% 76.42%      0.01s  0.81%  runtime.(*timeHistogram).record
     0.01s  0.81% 77.24%      0.01s  0.81%  runtime.acquireSudog
     0.01s  0.81% 78.05%      0.01s  0.81%  runtime.acquirem (inline)
     0.01s  0.81% 78.86%      0.01s  0.81%  runtime.add (inline)
     0.01s  0.81% 79.67%      0.01s  0.81%  runtime.chanrecv
     0.01s  0.81% 80.49%      0.01s  0.81%  runtime.duffcopy
     0.01s  0.81% 81.30%      0.01s  0.81%  runtime.exitsyscallfast
     0.01s  0.81% 82.11%      0.01s  0.81%  runtime.findObject
     0.01s  0.81% 82.93%      0.25s 20.33%  runtime.findRunnable
     0.01s  0.81% 83.74%      0.13s 10.57%  runtime.futexsleep
     0.01s  0.81% 84.55%      0.06s  4.88%  runtime.gcDrain
     0.01s  0.81% 85.37%      0.01s  0.81%  runtime.gcTrigger.test
     0.01s  0.81% 86.18%      0.01s  0.81%  runtime.gentraceback
     0.01s  0.81% 86.99%      0.01s  0.81%  runtime.gogo
     0.01s  0.81% 87.80%      0.08s  6.50%  runtime.goready
     0.01s  0.81% 88.62%      0.03s  2.44%  runtime.heapBitsSetType
     0.01s  0.81% 89.43%      0.06s  4.88%  runtime.makeslice
     0.01s  0.81% 90.24%      0.01s  0.81%  runtime.mapaccess1
     0.01s  0.81% 91.06%      0.02s  1.63%  runtime.mapiterinit
     0.01s  0.81% 91.87%      0.01s  0.81%  runtime.nanotime (inline)
     0.01s  0.81% 92.68%      0.01s  0.81%  runtime.nanotime1
     0.01s  0.81% 93.50%      0.01s  0.81%  runtime.netpollblockcommit
     0.01s  0.81% 94.31%      0.14s 11.38%  runtime.notesleep
     0.01s  0.81% 95.12%      0.30s 24.39%  runtime.schedule
     0.01s  0.81% 95.93%      0.01s  0.81%  runtime.unlock2
     0.01s  0.81% 96.75%      0.01s  0.81%  runtime.writeHeapBits.flush
     0.01s  0.81% 97.56%      0.01s  0.81%  runtime.writeHeapBits.write
     0.01s  0.81% 98.37%      0.01s  0.81%  runtime/internal/atomic.(*UnsafePointer).Load (inline)
     0.01s  0.81% 99.19%      0.01s  0.81%  runtime/internal/atomic.(*UnsafePointer).StoreNoWB (inline)
     0.01s  0.81%   100%      0.01s  0.81%  type:.eq.github.com/voedger/voedger/pkg/appdef.QName
         0     0%   100%      0.01s  0.81%  bufio.(*Reader).Peek
         0     0%   100%      0.01s  0.81%  bufio.(*Reader).Read
         0     0%   100%      0.01s  0.81%  bufio.(*Reader).fill
         0     0%   100%      0.02s  1.63%  encoding/base64.(*Encoding).DecodeString
         0     0%   100%      0.01s  0.81%  encoding/json.(*decodeState).array
         0     0%   100%      0.04s  3.25%  encoding/json.(*decodeState).arrayInterface
         0     0%   100%      0.01s  0.81%  encoding/json.(*decodeState).literalInterface
         0     0%   100%      0.06s  4.88%  encoding/json.(*decodeState).object
         0     0%   100%      0.04s  3.25%  encoding/json.(*decodeState).objectInterface
         0     0%   100%      0.01s  0.81%  encoding/json.(*decodeState).rescanLiteral
         0     0%   100%      0.06s  4.88%  encoding/json.(*decodeState).unmarshal
         0     0%   100%      0.06s  4.88%  encoding/json.(*decodeState).value
         0     0%   100%      0.04s  3.25%  encoding/json.(*decodeState).valueInterface
         0     0%   100%      0.07s  5.69%  encoding/json.Unmarshal
         0     0%   100%      0.01s  0.81%  encoding/json.indirect
         0     0%   100%      0.01s  0.81%  encoding/json.unquote (inline)
         0     0%   100%      0.01s  0.81%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0%   100%      0.01s  0.81%  github.com/VictoriaMetrics/fastcache.(*Cache).Set
         0     0%   100%      0.01s  0.81%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
         0     0%   100%      0.01s  0.81%  github.com/VictoriaMetrics/fastcache.(*bucket).Set
         0     0%   100%      0.05s  4.07%  github.com/gocql/gocql.(*Batch).execute
         0     0%   100%      0.08s  6.50%  github.com/gocql/gocql.(*Conn).exec
         0     0%   100%      0.05s  4.07%  github.com/gocql/gocql.(*Conn).executeBatch
         0     0%   100%      0.03s  2.44%  github.com/gocql/gocql.(*Conn).executeQuery
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql.(*Conn).releaseStream
         0     0%   100%      0.06s  4.88%  github.com/gocql/gocql.(*Conn).serve
         0     0%   100%      0.03s  2.44%  github.com/gocql/gocql.(*Query).Exec
         0     0%   100%      0.03s  2.44%  github.com/gocql/gocql.(*Query).Iter
         0     0%   100%      0.03s  2.44%  github.com/gocql/gocql.(*Query).execute
         0     0%   100%      0.05s  4.07%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql.(*Session).NewBatch
         0     0%   100%      0.05s  4.07%  github.com/gocql/gocql.(*Session).executeBatch
         0     0%   100%      0.03s  2.44%  github.com/gocql/gocql.(*Session).executeQuery
         0     0%   100%      0.08s  6.50%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0%   100%      0.08s  6.50%  github.com/gocql/gocql.(*queryExecutor).do
         0     0%   100%      0.08s  6.50%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0%   100%      0.02s  1.63%  github.com/gocql/gocql.(*writeCoalescer).writeContext
         0     0%   100%      0.13s 10.57%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher.func1
         0     0%   100%      0.13s 10.57%  github.com/gocql/gocql.(*writeCoalescer).writeFlusherImpl
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql.newFramer (inline)
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql.readHeader
         0     0%   100%      0.01s  0.81%  github.com/gocql/gocql/internal/streams.(*IDGenerator).Clear
         0     0%   100%      0.04s  3.25%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0%   100%      0.04s  3.25%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0%   100%      0.04s  3.25%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0%   100%      0.02s  1.63%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0%   100%      0.04s  3.25%  github.com/golang-jwt/jwt.Parse
         0     0%   100%      0.01s  0.81%  github.com/google/flatbuffers/go.(*Builder).CreateByteString
         0     0%   100%      0.02s  1.63%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0%   100%      0.02s  1.63%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0%   100%      0.02s  1.63%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0%   100%      0.02s  1.63%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
         0     0%   100%      0.02s  1.63%  github.com/google/flatbuffers/go.NewBuilder (inline)
         0     0%   100%      0.04s  3.25%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0%   100%      0.01s  0.81%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0%   100%      0.03s  2.44%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0%   100%      0.04s  3.25%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0%   100%      0.01s  0.81%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0%   100%      0.01s  0.81%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0%   100%      0.03s  2.44%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0%   100%      0.03s  2.44%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0%   100%      0.02s  1.63%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0%   100%      0.01s  0.81%  github.com/untillpro/dynobuffers.(*Buffer).GetInt32
         0     0%   100%      0.02s  1.63%  github.com/untillpro/dynobuffers.(*Buffer).GetInt64
         0     0%   100%      0.01s  0.81%  github.com/untillpro/dynobuffers.(*Buffer).Reset
         0     0%   100%      0.05s  4.07%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0%   100%      0.05s  4.07%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0%   100%      0.01s  0.81%  github.com/untillpro/dynobuffers.(*Buffer).releaseFields
         0     0%   100%      0.01s  0.81%  github.com/untillpro/dynobuffers.(*modifiedField).Release
         0     0%   100%      0.05s  4.07%  github.com/untillpro/dynobuffers.NewBuffer
         0     0%   100%      0.05s  4.07%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0%   100%      0.05s  4.07%  github.com/untillpro/dynobuffers.glob..func1
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/appdef.(*appDef).View
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/appdef.(*appDef).defByKind
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/appdef.(*fields).Field (inline)
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/iauthnz.QNameAncestor (inline)
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthorizer).Authorize
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/iauthnzimpl.ACL.IsAllowed
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/iauthnzimpl.matchOrNotSpecified_Principals
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/iauthnzimpl.matchOrNotSpecified_Principals.func1
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2.func3
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).applyRecs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).regenerateIDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func1
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func2
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).applyCommandRecs (inline)
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).pkDef
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewPartKey
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsInt32
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsInt64
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsRecordID
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs.func1
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRecord
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUD
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUDRefRawIDs
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUDRefRawIDs.func1
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEvent
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventCUDs
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventObjects
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validRecord
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/istructsmem.newKey
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.newValue
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.regenerateIDsInUpdateRecord
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0%   100%      0.08s  6.50%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0%   100%      0.42s 34.15%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/pipeline.(*implIServiceSimple).Run
         0     0%   100%      0.41s 33.33%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0%   100%      0.07s  5.69%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0%   100%      0.11s  8.94%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0%   100%      0.43s 34.96%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authorizeRequest
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog.func1
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.ProvideServiceFactory.func1.1
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/processors/command.getWSDesc
         0     0%   100%      0.04s  3.25%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
         0     0%   100%      0.08s  6.50%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).savePosition
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0%   100%      0.03s  2.44%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/state.(*recordsStorageValue).AsInt32
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0%   100%      0.06s  4.88%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0%   100%      0.05s  4.07%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorageValue).AsInt64
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0%   100%      0.02s  1.63%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0%   100%      0.01s  0.81%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0%   100%      0.02s  1.63%  internal/poll.(*FD).SetReadDeadline (inline)
         0     0%   100%      0.07s  5.69%  internal/poll.(*FD).Writev
         0     0%   100%      0.01s  0.81%  internal/poll.ignoringEINTRIO (inline)
         0     0%   100%      0.02s  1.63%  internal/poll.runtime_pollSetDeadline
         0     0%   100%      0.02s  1.63%  internal/poll.setDeadlineImpl
         0     0%   100%      0.07s  5.69%  internal/poll.writev
         0     0%   100%      0.01s  0.81%  io.ReadAtLeast
         0     0%   100%      0.01s  0.81%  io.ReadFull (inline)
         0     0%   100%      0.07s  5.69%  net.(*Buffers).WriteTo
         0     0%   100%      0.02s  1.63%  net.(*conn).Read
         0     0%   100%      0.02s  1.63%  net.(*conn).SetReadDeadline
         0     0%   100%      0.07s  5.69%  net.(*conn).writeBuffers
         0     0%   100%      0.02s  1.63%  net.(*netFD).Read
         0     0%   100%      0.02s  1.63%  net.(*netFD).SetReadDeadline (inline)
         0     0%   100%      0.07s  5.69%  net.(*netFD).writeBuffers
         0     0%   100%      0.01s  0.81%  net/http.(*conn).readRequest
         0     0%   100%      0.04s  3.25%  net/http.(*conn).serve
         0     0%   100%      0.01s  0.81%  net/http.(*connReader).Read
         0     0%   100%      0.02s  1.63%  net/http.(*connReader).abortPendingRead
         0     0%   100%      0.01s  0.81%  net/http.(*connReader).backgroundRead
         0     0%   100%      0.02s  1.63%  net/http.(*response).finishRequest
         0     0%   100%      0.01s  0.81%  net/http.readRequest
         0     0%   100%      0.01s  0.81%  net/url.ParseRequestURI
         0     0%   100%      0.01s  0.81%  net/url.parse
         0     0%   100%      0.01s  0.81%  reflect.(*rtype).NumMethod
         0     0%   100%      0.01s  0.81%  reflect.New
         0     0%   100%      0.01s  0.81%  runtime.(*atomicMSpanPointer).Load (inline)
         0     0%   100%      0.03s  2.44%  runtime.(*mcache).nextFree
         0     0%   100%      0.03s  2.44%  runtime.(*mcache).refill
         0     0%   100%      0.01s  0.81%  runtime.(*mcentral).grow
         0     0%   100%      0.01s  0.81%  runtime.(*mheap).alloc
         0     0%   100%      0.01s  0.81%  runtime.(*mheap).alloc.func1
         0     0%   100%      0.01s  0.81%  runtime.(*mheap).allocSpan
         0     0%   100%      0.01s  0.81%  runtime.(*mheap).initSpan
         0     0%   100%      0.01s  0.81%  runtime.(*spanSet).pop
         0     0%   100%      0.03s  2.44%  runtime.addtimer
         0     0%   100%      0.02s  1.63%  runtime.assertE2I
         0     0%   100%      0.01s  0.81%  runtime.assertE2I2
         0     0%   100%      0.01s  0.81%  runtime.callers
         0     0%   100%      0.01s  0.81%  runtime.callers.func1
         0     0%   100%      0.01s  0.81%  runtime.casgstatus
         0     0%   100%      0.01s  0.81%  runtime.chanrecv1
         0     0%   100%      0.03s  2.44%  runtime.chansend
         0     0%   100%      0.03s  2.44%  runtime.chansend1
         0     0%   100%      0.02s  1.63%  runtime.execute
         0     0%   100%      0.01s  0.81%  runtime.exitsyscall
         0     0%   100%      0.01s  0.81%  runtime.findnull
         0     0%   100%      0.01s  0.81%  runtime.funcname
         0     0%   100%      0.07s  5.69%  runtime.futexwakeup
         0     0%   100%      0.06s  4.88%  runtime.gcBgMarkWorker
         0     0%   100%      0.06s  4.88%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.03s  2.44%  runtime.getitab
         0     0%   100%      0.03s  2.44%  runtime.goexit0
         0     0%   100%      0.07s  5.69%  runtime.goready.func1
         0     0%   100%      0.01s  0.81%  runtime.gostringnocopy (inline)
         0     0%   100%      0.02s  1.63%  runtime.greyobject
         0     0%   100%      0.01s  0.81%  runtime.growslice
         0     0%   100%      0.01s  0.81%  runtime.hashGrow
         0     0%   100%      0.01s  0.81%  runtime.isSystemGoroutine
         0     0%   100%      0.14s 11.38%  runtime.mPark (inline)
         0     0%   100%      0.02s  1.63%  runtime.mProf_Malloc
         0     0%   100%      0.01s  0.81%  runtime.makeBucketArray
         0     0%   100%      0.01s  0.81%  runtime.mapaccess2
         0     0%   100%      0.01s  0.81%  runtime.mapassign_fast64
         0     0%   100%      0.01s  0.81%  runtime.mapassign_faststr
         0     0%   100%      0.31s 25.20%  runtime.mcall
         0     0%   100%      0.01s  0.81%  runtime.modtimer
         0     0%   100%      0.06s  4.88%  runtime.netpoll
         0     0%   100%      0.04s  3.25%  runtime.netpollBreak
         0     0%   100%      0.02s  1.63%  runtime.netpollgoready (inline)
         0     0%   100%      0.01s  0.81%  runtime.newarray
         0     0%   100%      0.09s  7.32%  runtime.newobject (partial-inline)
         0     0%   100%      0.01s  0.81%  runtime.newproc
         0     0%   100%      0.01s  0.81%  runtime.newproc.func1
         0     0%   100%      0.01s  0.81%  runtime.newproc1
         0     0%   100%      0.07s  5.69%  runtime.notewakeup
         0     0%   100%      0.28s 22.76%  runtime.park_m
         0     0%   100%      0.01s  0.81%  runtime.pidleget
         0     0%   100%      0.01s  0.81%  runtime.pidlegetSpinning
         0     0%   100%      0.02s  1.63%  runtime.profilealloc
         0     0%   100%      0.07s  5.69%  runtime.ready
         0     0%   100%      0.01s  0.81%  runtime.readyWithTime
         0     0%   100%      0.02s  1.63%  runtime.resetspinning
         0     0%   100%      0.01s  0.81%  runtime.resettimer (inline)
         0     0%   100%      0.01s  0.81%  runtime.selunlock
         0     0%   100%      0.02s  1.63%  runtime.semrelease1
         0     0%   100%      0.05s  4.07%  runtime.send
         0     0%   100%      0.01s  0.81%  runtime.slicebytetostring
         0     0%   100%      0.07s  5.69%  runtime.startm
         0     0%   100%      0.02s  1.63%  runtime.stealWork
         0     0%   100%      0.01s  0.81%  runtime.stkbucket
         0     0%   100%      0.14s 11.38%  runtime.stopm
         0     0%   100%      0.16s 13.01%  runtime.systemstack
         0     0%   100%      0.01s  0.81%  runtime.unlock (inline)
         0     0%   100%      0.01s  0.81%  runtime.unlockWithRank (inline)
         0     0%   100%      0.04s  3.25%  runtime.wakeNetPoller
         0     0%   100%      0.08s  6.50%  runtime.wakep
         0     0%   100%      0.04s  3.25%  runtime.write
         0     0%   100%      0.06s  4.88%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.01s  0.81%  strings.HasSuffix (inline)
         0     0%   100%      0.05s  4.07%  sync.(*Pool).Get
         0     0%   100%      0.02s  1.63%  sync.(*RWMutex).Unlock
         0     0%   100%      0.02s  1.63%  sync.runtime_Semrelease
         0     0%   100%      0.07s  5.69%  syscall.RawSyscall6
         0     0%   100%      0.01s  0.81%  syscall.Read (inline)
         0     0%   100%      0.08s  6.50%  syscall.Syscall
         0     0%   100%      0.01s  0.81%  syscall.read
         0     0%   100%      0.01s  0.81%  time.(*Timer).Reset
         0     0%   100%      0.03s  2.44%  time.NewTimer
         0     0%   100%      0.01s  0.81%  time.resetTimer
         0     0%   100%      0.03s  2.44%  time.startTimer
