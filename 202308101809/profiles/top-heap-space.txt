File: airs-bp
Type: alloc_space
Time: Aug 10, 2023 at 6:12pm (UTC)
Showing nodes accounting for 522.30MB, 84.29% of 619.67MB total
Dropped 414 nodes (cum <= 3.10MB)
      flat  flat%   sum%        cum   cum%
   91.23MB 14.72% 14.72%    99.23MB 16.01%  encoding/json.(*decodeState).objectInterface
   53.51MB  8.64% 23.36%    82.52MB 13.32%  github.com/untillpro/dynobuffers.glob..func1
   50.68MB  8.18% 31.54%    50.68MB  8.18%  io.ReadAll
   31.05MB  5.01% 36.55%    31.05MB  5.01%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
      30MB  4.84% 41.39%       30MB  4.84%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
      29MB  4.68% 46.07%       29MB  4.68%  github.com/google/flatbuffers/go.NewBuilder (inline)
   13.50MB  2.18% 48.25%    13.50MB  2.18%  github.com/gocql/gocql.newFramer (inline)
   10.54MB  1.70% 49.95%    11.04MB  1.78%  github.com/gocql/gocql.(*framer).writeBytes (inline)
       9MB  1.45% 51.40%    40.51MB  6.54%  github.com/voedger/voedger/pkg/istructsmem.newKey
    8.72MB  1.41% 52.81%     9.22MB  1.49%  github.com/alecthomas/participle/v2/lexer.Upgrade
    8.51MB  1.37% 54.18%     8.51MB  1.37%  bytes.growSlice
       8MB  1.29% 55.47%        8MB  1.29%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
    7.50MB  1.21% 56.68%     7.50MB  1.21%  net/textproto.(*Reader).ReadMIMEHeader
    7.50MB  1.21% 57.89%    29.51MB  4.76%  github.com/voedger/voedger/pkg/istructsmem.newValue
    7.50MB  1.21% 59.10%     8.50MB  1.37%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
       7MB  1.13% 60.23%        7MB  1.13%  reflect.mapassign_faststr
       7MB  1.13% 61.36%    41.51MB  6.70%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
       7MB  1.13% 62.49%        7MB  1.13%  encoding/json.unquote (inline)
    6.50MB  1.05% 63.54%     6.50MB  1.05%  encoding/base64.(*Encoding).DecodeString
    6.50MB  1.05% 64.59%     6.50MB  1.05%  time.NewTimer
    6.01MB  0.97% 65.56%    23.04MB  3.72%  github.com/gocql/gocql.(*Conn).executeBatch
       6MB  0.97% 66.53%        6MB  0.97%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
       6MB  0.97% 67.50%        6MB  0.97%  github.com/gocql/gocql.(*Session).NewBatch
       6MB  0.97% 68.47%        6MB  0.97%  reflect.New
    5.50MB  0.89% 69.35%     5.50MB  0.89%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).handleEvent
    5.01MB  0.81% 70.16%     5.01MB  0.81%  github.com/gocql/gocql.appendLong (inline)
    5.01MB  0.81% 70.97%     5.01MB  0.81%  github.com/alecthomas/participle/v2.newTagLexer
    4.50MB  0.73% 71.70%     4.50MB  0.73%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
    4.50MB  0.73% 72.42%     4.50MB  0.73%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
    4.50MB  0.73% 73.15%     4.50MB  0.73%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
    4.50MB  0.73% 73.88%     4.50MB  0.73%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
    4.50MB  0.73% 74.60%    38.54MB  6.22%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
       4MB  0.65% 75.25%     5.50MB  0.89%  github.com/golang-jwt/jwt.(*SigningMethodHMAC).Verify
       4MB  0.65% 75.89%    33.55MB  5.41%  github.com/gocql/gocql.(*Conn).exec
    3.50MB  0.56% 76.46%    26.01MB  4.20%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
    3.50MB  0.56% 77.02%     3.50MB  0.56%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
       3MB  0.48% 77.51%    11.51MB  1.86%  bytes.(*Buffer).grow
    2.50MB   0.4% 77.91%       13MB  2.10%  net/http.readRequest
    2.50MB   0.4% 78.31%   108.23MB 17.47%  encoding/json.Unmarshal
    2.50MB   0.4% 78.72%        4MB  0.65%  github.com/gocql/gocql.(*framer).parseResultFrame
       2MB  0.32% 79.04%    25.02MB  4.04%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
       2MB  0.32% 79.36%        7MB  1.13%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
       2MB  0.32% 79.69%    15.50MB  2.50%  net/http.(*conn).readRequest
       2MB  0.32% 80.01%    18.50MB  2.99%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
       2MB  0.32% 80.33%        4MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey
       2MB  0.32% 80.65%   111.23MB 17.95%  encoding/json.(*decodeState).object
       2MB  0.32% 80.98%     7.50MB  1.21%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
    1.50MB  0.24% 81.22%       47MB  7.59%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
    1.50MB  0.24% 81.46%    24.52MB  3.96%  github.com/gocql/gocql.(*Conn).executeQuery
    1.50MB  0.24% 81.70%    40.51MB  6.54%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
    1.50MB  0.24% 81.95%    37.51MB  6.05%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
    1.50MB  0.24% 82.19%       23MB  3.71%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
    1.50MB  0.24% 82.43%    24.01MB  3.87%  github.com/alecthomas/participle/v2.(*capture).Parse
       1MB  0.16% 82.59%       48MB  7.75%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
       1MB  0.16% 82.75%    24.01MB  3.87%  github.com/alecthomas/participle/v2.(*sequence).Parse
       1MB  0.16% 82.91%     4.50MB  0.73%  github.com/untillpro/ibusmem.(*bus).SendRequest2
       1MB  0.16% 83.08%     7.51MB  1.21%  github.com/gocql/gocql.(*Conn).recv
       1MB  0.16% 83.24%    17.50MB  2.82%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
       1MB  0.16% 83.40%    27.02MB  4.36%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
    0.50MB 0.081% 83.48%    24.01MB  3.87%  github.com/alecthomas/participle/v2.(*group).Parse
    0.50MB 0.081% 83.56%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
    0.50MB 0.081% 83.64%     7.50MB  1.21%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
    0.50MB 0.081% 83.72%     5.50MB  0.89%  github.com/alecthomas/participle/v2.(*structLexer).Peek
    0.50MB 0.081% 83.80%    24.51MB  3.95%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
    0.50MB 0.081% 83.88%    24.01MB  3.87%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
    0.50MB 0.081% 83.96%     8.50MB  1.37%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
    0.50MB 0.081% 84.04%    91.72MB 14.80%  encoding/json.(*decodeState).arrayInterface
    0.50MB 0.081% 84.12%     8.02MB  1.29%  encoding/json.(*decodeState).array
    0.50MB 0.081% 84.21%    24.01MB  3.87%  github.com/alecthomas/participle/v2.(*strct).Parse
    0.50MB 0.081% 84.29%    31.51MB  5.08%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0% 84.29%    11.51MB  1.86%  bytes.(*Buffer).Write
         0     0% 84.29%     7.50MB  1.21%  encoding/json.(*Decoder).Decode
         0     0% 84.29%   111.23MB 17.95%  encoding/json.(*decodeState).unmarshal
         0     0% 84.29%   111.23MB 17.95%  encoding/json.(*decodeState).value
         0     0% 84.29%    91.72MB 14.80%  encoding/json.(*decodeState).valueInterface
         0     0% 84.29%        6MB  0.97%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 84.29%    20.01MB  3.23%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 84.29%    25.73MB  4.15%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 84.29%    25.73MB  4.15%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 84.29%    21.01MB  3.39%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 84.29%    20.01MB  3.23%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 84.29%    24.01MB  3.87%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 84.29%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
         0     0% 84.29%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
         0     0% 84.29%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 84.29%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 84.29%     9.01MB  1.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
         0     0% 84.29%    23.04MB  3.72%  github.com/gocql/gocql.(*Batch).execute
         0     0% 84.29%     7.51MB  1.21%  github.com/gocql/gocql.(*Conn).serve
         0     0% 84.29%    24.02MB  3.88%  github.com/gocql/gocql.(*Query).Exec
         0     0% 84.29%    25.02MB  4.04%  github.com/gocql/gocql.(*Query).Iter
         0     0% 84.29%    23.52MB  3.80%  github.com/gocql/gocql.(*Query).execute
         0     0% 84.29%    27.04MB  4.36%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 84.29%        4MB  0.65%  github.com/gocql/gocql.(*Session).Query
         0     0% 84.29%    27.04MB  4.36%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 84.29%    25.02MB  4.04%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 84.29%     4.50MB  0.73%  github.com/gocql/gocql.(*framer).parseFrame
         0     0% 84.29%    13.52MB  2.18%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 84.29%     5.01MB  0.81%  github.com/gocql/gocql.(*framer).writeLong (inline)
         0     0% 84.29%    13.52MB  2.18%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 84.29%    51.06MB  8.24%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 84.29%    51.06MB  8.24%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 84.29%    52.06MB  8.40%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 84.29%     4.50MB  0.73%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0% 84.29%    13.52MB  2.18%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 84.29%     3.50MB  0.56%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 84.29%    24.51MB  3.95%  github.com/golang-jwt/jwt.Parse
         0     0% 84.29%    11.50MB  1.86%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 84.29%     8.50MB  1.37%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 84.29%       30MB  4.84%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 84.29%        8MB  1.29%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 84.29%    10.50MB  1.69%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 84.29%    11.50MB  1.86%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 84.29%     8.50MB  1.37%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 84.29%    62.84MB 10.14%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0% 84.29%    28.35MB  4.57%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 84.29%    24.23MB  3.91%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 84.29%     4.50MB  0.73%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0% 84.29%        5MB  0.81%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 84.29%     4.50MB  0.73%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 84.29%     3.50MB  0.56%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 84.29%       23MB  3.71%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0% 84.29%    11.01MB  1.78%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 84.29%    18.52MB  2.99%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 84.29%        4MB  0.65%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0% 84.29%     4.50MB  0.73%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0% 84.29%       11MB  1.78%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0% 84.29%       11MB  1.78%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 84.29%     7.50MB  1.21%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 84.29%    27.50MB  4.44%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 84.29%    27.50MB  4.44%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 84.29%    16.50MB  2.66%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 84.29%    23.73MB  3.83%  github.com/untillpro/airs-bp3/packages/untill.Provide
         0     0% 84.29%    10.02MB  1.62%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 84.29%    31.05MB  5.01%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 84.29%    34.50MB  5.57%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 84.29%    34.50MB  5.57%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 84.29%    34.50MB  5.57%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 84.29%     4.50MB  0.73%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0% 84.29%    31.05MB  5.01%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 84.29%    82.52MB 13.32%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 84.29%       13MB  2.10%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 84.29%    82.52MB 13.32%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 84.29%    12.50MB  2.02%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 84.29%     7.50MB  1.21%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0% 84.29%        6MB  0.97%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 84.29%    27.02MB  4.36%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 84.29%    38.54MB  6.22%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 84.29%     5.54MB  0.89%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/istorageimpl.(*implIAppStorageProvider).AppStorage
         0     0% 84.29%     5.54MB  0.89%  github.com/voedger/voedger/pkg/istructsmem.(*AppConfigType).prepare
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).GetNewRawEventBuilder
         0     0% 84.29%    23.56MB  3.80%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 84.29%    14.01MB  2.26%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 84.29%        7MB  1.13%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).ReadPLog
         0     0% 84.29%       10MB  1.61%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 84.29%       10MB  1.61%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 84.29%        6MB  0.97%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 84.29%        9MB  1.45%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 84.29%    10.04MB  1.62%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 84.29%       16MB  2.58%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0% 84.29%    40.51MB  6.54%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 84.29%    16.50MB  2.66%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 84.29%    17.50MB  2.82%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 84.29%    29.53MB  4.77%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 84.29%     4.50MB  0.73%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 84.29%    33.51MB  5.41%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 84.29%       14MB  2.26%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 84.29%    13.50MB  2.18%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 84.29%    13.50MB  2.18%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 84.29%       15MB  2.42%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 84.29%    33.51MB  5.41%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 84.29%     4.50MB  0.73%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 84.29%     7.51MB  1.21%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 84.29%       11MB  1.78%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 84.29%    11.50MB  1.86%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 84.29%     6.50MB  1.05%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 84.29%    23.52MB  3.80%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 84.29%     3.51MB  0.57%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0% 84.29%    17.53MB  2.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 84.29%     4.01MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0% 84.29%    24.52MB  3.96%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 84.29%     9.02MB  1.46%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 84.29%    16.50MB  2.66%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 84.29%     8.51MB  1.37%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 84.29%    82.52MB 13.32%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 84.29%    66.01MB 10.65%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 84.29%    16.50MB  2.66%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0% 84.29%        7MB  1.13%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 84.29%        7MB  1.13%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 84.29%    21.52MB  3.47%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 84.29%    16.50MB  2.66%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.newEventBuilder (inline)
         0     0% 84.29%     3.50MB  0.56%  github.com/voedger/voedger/pkg/istructsmem.newNullValue (inline)
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/istructsmem.newRawEventBuilder
         0     0% 84.29%    23.02MB  3.72%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 84.29%     5.51MB  0.89%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 84.29%     7.51MB  1.21%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 84.29%     5.51MB  0.89%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0% 84.29%     6.50MB  1.05%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 84.29%    31.51MB  5.08%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 84.29%    27.23MB  4.39%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 84.29%    27.23MB  4.39%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 84.29%    59.01MB  9.52%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 84.29%   406.24MB 65.56%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 84.29%   401.74MB 64.83%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 84.29%    12.50MB  2.02%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 84.29%       14MB  2.26%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 84.29%    74.01MB 11.94%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 84.29%   405.23MB 65.39%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 84.29%    33.01MB  5.33%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getRawEventBuilder
         0     0% 84.29%    23.56MB  3.80%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0% 84.29%     5.01MB  0.81%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0% 84.29%       10MB  1.61%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 84.29%        4MB  0.65%  github.com/voedger/voedger/pkg/processors/command.checkArgsRefIntegrity
         0     0% 84.29%    29.53MB  4.77%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 84.29%    34.52MB  5.57%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 84.29%    13.51MB  2.18%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 84.29%   100.73MB 16.26%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 84.29%     3.50MB  0.56%  github.com/voedger/voedger/pkg/processors/query.implRowsProcessorFactory
         0     0% 84.29%     3.50MB  0.56%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func13
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 84.29%     7.50MB  1.21%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 84.29%    21.50MB  3.47%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 84.29%     9.50MB  1.53%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0% 84.29%        9MB  1.45%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0% 84.29%     7.50MB  1.21%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
         0     0% 84.29%    57.51MB  9.28%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 84.29%       14MB  2.26%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 84.29%       14MB  2.26%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 84.29%    40.51MB  6.54%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 84.29%    36.50MB  5.89%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 84.29%    58.68MB  9.47%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 84.29%    50.68MB  8.18%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 84.29%    57.68MB  9.31%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0% 84.29%     5.50MB  0.89%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 84.29%        6MB  0.97%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
         0     0% 84.29%        6MB  0.97%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 84.29%    17.50MB  2.82%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 84.29%       12MB  1.94%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 84.29%    36.50MB  5.89%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 84.29%       25MB  4.04%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 84.29%    39.01MB  6.29%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 84.29%        8MB  1.29%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 84.29%    18.50MB  2.99%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 84.29%    25.02MB  4.04%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 84.29%    11.50MB  1.86%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 84.29%    25.02MB  4.04%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 84.29%     3.51MB  0.57%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 84.29%       11MB  1.78%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 84.29%    13.50MB  2.18%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 84.29%        7MB  1.13%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 84.29%        7MB  1.13%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/sys/authnz/workspace.qcwbnQryExec
         0     0% 84.29%     3.50MB  0.56%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0% 84.29%    18.50MB  2.99%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 84.29%     4.51MB  0.73%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0% 84.29%    34.85MB  5.62%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 84.29%    29.85MB  4.82%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 84.29%    24.73MB  3.99%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 84.29%     7.04MB  1.14%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 84.29%     3.50MB  0.57%  github.com/voedger/voedger/pkg/vvm.provideIBus.func1
         0     0% 84.29%        5MB  0.81%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 84.29%    22.73MB  3.67%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 84.29%    78.34MB 12.64%  net/http.(*conn).serve
         0     0% 84.29%    59.84MB  9.66%  net/http.HandlerFunc.ServeHTTP
         0     0% 84.29%    62.84MB 10.14%  net/http.serverHandler.ServeHTTP
         0     0% 84.29%        7MB  1.13%  reflect.Value.SetMapIndex
         0     0% 84.29%    86.02MB 13.88%  sync.(*Pool).Get
