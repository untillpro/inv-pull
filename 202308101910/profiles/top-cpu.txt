File: airs-bp
Type: cpu
Time: Aug 10, 2023 at 7:11pm (UTC)
Duration: 10.16s, Total samples = 1.27s (12.50%)
Showing nodes accounting for 1.27s, 100% of 1.27s total
      flat  flat%   sum%        cum   cum%
     0.12s  9.45%  9.45%      0.12s  9.45%  runtime/internal/syscall.Syscall6
     0.10s  7.87% 17.32%      0.10s  7.87%  runtime.futex
     0.06s  4.72% 22.05%      0.06s  4.72%  runtime.write1
     0.04s  3.15% 25.20%      0.04s  3.15%  runtime.writeHeapBits.flush
     0.03s  2.36% 27.56%      0.03s  2.36%  runtime.(*itabTableType).find
     0.03s  2.36% 29.92%      0.03s  2.36%  runtime.(*waitq).dequeue (inline)
     0.03s  2.36% 32.28%      0.03s  2.36%  runtime.mapaccess2_faststr
     0.03s  2.36% 34.65%      0.03s  2.36%  runtime.memclrNoHeapPointers
     0.03s  2.36% 37.01%      0.03s  2.36%  runtime.nanotime (inline)
     0.02s  1.57% 38.58%      0.02s  1.57%  aeshashbody
     0.02s  1.57% 40.16%      0.02s  1.57%  regexp.(*Regexp).doOnePass
     0.02s  1.57% 41.73%      0.02s  1.57%  runtime.greyobject
     0.02s  1.57% 43.31%      0.03s  2.36%  runtime.mapaccess2
     0.02s  1.57% 44.88%      0.02s  1.57%  runtime.read
     0.02s  1.57% 46.46%      0.24s 18.90%  runtime.schedule
     0.02s  1.57% 48.03%      0.04s  3.15%  runtime.stealWork
     0.01s  0.79% 48.82%      0.01s  0.79%  context.(*cancelCtx).Done
     0.01s  0.79% 49.61%      0.01s  0.79%  context.(*cancelCtx).Err
     0.01s  0.79% 50.39%      0.02s  1.57%  encoding/json.(*decodeState).literalStore
     0.01s  0.79% 51.18%      0.01s  0.79%  encoding/json.equalFoldRight
     0.01s  0.79% 51.97%      0.01s  0.79%  encoding/json.stateEndValue
     0.01s  0.79% 52.76%      0.01s  0.79%  encoding/json.stateInString
     0.01s  0.79% 53.54%      0.01s  0.79%  encoding/json.unquoteBytes
     0.01s  0.79% 54.33%      0.01s  0.79%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
     0.01s  0.79% 55.12%      0.01s  0.79%  github.com/gocql/gocql.(*writeCoalescer).writeContext
     0.01s  0.79% 55.91%      0.01s  0.79%  github.com/google/flatbuffers/go.(*Builder).PrependSOffsetT
     0.01s  0.79% 56.69%      0.01s  0.79%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
     0.01s  0.79% 57.48%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/edit.ProvideTablePlanEventValidator.func1
     0.01s  0.79% 58.27%      0.01s  0.79%  github.com/untillpro/dynobuffers.(*Buffer).Get (inline)
     0.01s  0.79% 59.06%      0.02s  1.57%  github.com/untillpro/dynobuffers.(*Buffer).Reset
     0.01s  0.79% 59.84%      0.02s  1.57%  github.com/untillpro/dynobuffers.(*Buffer).set
     0.01s  0.79% 60.63%      0.01s  0.79%  github.com/voedger/voedger/pkg/appdef.(*nullDef).QName
     0.01s  0.79% 61.42%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).QName (inline)
     0.01s  0.79% 62.20%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.ReadUInt16
     0.01s  0.79% 62.99%      0.45s 35.43%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
     0.01s  0.79% 63.78%      0.01s  0.79%  github.com/voedger/voedger/pkg/pipeline.WiredOperator.isActive (inline)
     0.01s  0.79% 64.57%      0.14s 11.02%  github.com/voedger/voedger/pkg/pipeline.puller_async
     0.01s  0.79% 65.35%      0.03s  2.36%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
     0.01s  0.79% 66.14%      0.02s  1.57%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
     0.01s  0.79% 66.93%      0.01s  0.79%  github.com/voedger/voedger/pkg/projectors.isAcceptable
     0.01s  0.79% 67.72%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
     0.01s  0.79% 68.50%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
     0.01s  0.79% 69.29%      0.01s  0.79%  internal/poll.(*pollDesc).pollable (inline)
     0.01s  0.79% 70.08%      0.09s  7.09%  net/http.(*conn).serve
     0.01s  0.79% 70.87%      0.01s  0.79%  reflect.(*rtype).Kind (inline)
     0.01s  0.79% 71.65%      0.01s  0.79%  reflect.(*rtype).Name
     0.01s  0.79% 72.44%      0.01s  0.79%  runtime.(*gList).pop (inline)
     0.01s  0.79% 73.23%      0.01s  0.79%  runtime.(*gcControllerState).trigger
     0.01s  0.79% 74.02%      0.01s  0.79%  runtime.advanceEvacuationMark
     0.01s  0.79% 74.80%      0.01s  0.79%  runtime.convTslice
     0.01s  0.79% 75.59%      0.01s  0.79%  runtime.convTstring
     0.01s  0.79% 76.38%      0.01s  0.79%  runtime.dodeltimer0
     0.01s  0.79% 77.17%      0.01s  0.79%  runtime.duffcopy
     0.01s  0.79% 77.95%      0.01s  0.79%  runtime.eqslice (inline)
     0.01s  0.79% 78.74%      0.02s  1.57%  runtime.findObject
     0.01s  0.79% 79.53%      0.19s 14.96%  runtime.findRunnable
     0.01s  0.79% 80.31%      0.01s  0.79%  runtime.findfunc
     0.01s  0.79% 81.10%      0.01s  0.79%  runtime.gentraceback
     0.01s  0.79% 81.89%      0.04s  3.15%  runtime.getitab
     0.01s  0.79% 82.68%      0.01s  0.79%  runtime.gopark
     0.01s  0.79% 83.46%      0.01s  0.79%  runtime.heapBitsForAddr
     0.01s  0.79% 84.25%      0.06s  4.72%  runtime.heapBitsSetType
     0.01s  0.79% 85.04%      0.14s 11.02%  runtime.mallocgc
     0.01s  0.79% 85.83%      0.01s  0.79%  runtime.mapaccess2_fast64
     0.01s  0.79% 86.61%      0.01s  0.79%  runtime.mapiterinit
     0.01s  0.79% 87.40%      0.01s  0.79%  runtime.nextFreeFast (inline)
     0.01s  0.79% 88.19%      0.07s  5.51%  runtime.notewakeup
     0.01s  0.79% 88.98%      0.23s 18.11%  runtime.park_m
     0.01s  0.79% 89.76%      0.01s  0.79%  runtime.publicationBarrier
     0.01s  0.79% 90.55%      0.01s  0.79%  runtime.runqgrab
     0.01s  0.79% 91.34%      0.01s  0.79%  runtime.runqput
     0.01s  0.79% 92.13%      0.06s  4.72%  runtime.scanobject
     0.01s  0.79% 92.91%      0.04s  3.15%  runtime.selectgo
     0.01s  0.79% 93.70%      0.01s  0.79%  runtime.sellock
     0.01s  0.79% 94.49%      0.02s  1.57%  runtime.semacquire1
     0.01s  0.79% 95.28%      0.04s  3.15%  runtime.send
     0.01s  0.79% 96.06%      0.01s  0.79%  runtime.spanOf (inline)
     0.01s  0.79% 96.85%      0.01s  0.79%  runtime.writeHeapBits.write
     0.01s  0.79% 97.64%      0.01s  0.79%  runtime/internal/atomic.(*Int64).Load (inline)
     0.01s  0.79% 98.43%      0.01s  0.79%  runtime/internal/atomic.(*Uint32).Load (inline)
     0.01s  0.79% 99.21%      0.01s  0.79%  sync/atomic.(*Int32).Add (inline)
     0.01s  0.79%   100%      0.11s  8.66%  syscall.Syscall
         0     0%   100%      0.02s  1.57%  bufio.(*Reader).Peek
         0     0%   100%      0.03s  2.36%  bufio.(*Reader).Read
         0     0%   100%      0.02s  1.57%  bufio.(*Reader).fill
         0     0%   100%      0.02s  1.57%  bufio.(*Writer).Flush
         0     0%   100%      0.02s  1.57%  encoding/json.(*Decoder).Decode
         0     0%   100%      0.03s  2.36%  encoding/json.(*decodeState).arrayInterface
         0     0%   100%      0.07s  5.51%  encoding/json.(*decodeState).object
         0     0%   100%      0.03s  2.36%  encoding/json.(*decodeState).objectInterface
         0     0%   100%      0.07s  5.51%  encoding/json.(*decodeState).unmarshal
         0     0%   100%      0.07s  5.51%  encoding/json.(*decodeState).value
         0     0%   100%      0.03s  2.36%  encoding/json.(*decodeState).valueInterface
         0     0%   100%      0.07s  5.51%  encoding/json.Unmarshal
         0     0%   100%      0.02s  1.57%  encoding/json.checkValid
         0     0%   100%      0.02s  1.57%  encoding/json.indirect
         0     0%   100%      0.01s  0.79%  encoding/json.unquote (inline)
         0     0%   100%      0.01s  0.79%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0%   100%      0.05s  3.94%  github.com/gocql/gocql.(*Batch).execute
         0     0%   100%      0.07s  5.51%  github.com/gocql/gocql.(*Conn).exec
         0     0%   100%      0.05s  3.94%  github.com/gocql/gocql.(*Conn).executeBatch
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Conn).executeQuery
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Conn).heartBeat
         0     0%   100%      0.05s  3.94%  github.com/gocql/gocql.(*Conn).recv
         0     0%   100%      0.05s  3.94%  github.com/gocql/gocql.(*Conn).serve
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*HostInfo).IsUp (inline)
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*HostInfo).State
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Query).Exec
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Query).Iter
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Query).execute
         0     0%   100%      0.07s  5.51%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0%   100%      0.07s  5.51%  github.com/gocql/gocql.(*Session).executeBatch
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*Session).executeQuery
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.(*dcAwareRR).Pick
         0     0%   100%      0.06s  4.72%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0%   100%      0.07s  5.51%  github.com/gocql/gocql.(*queryExecutor).do
         0     0%   100%      0.08s  6.30%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0%   100%      0.05s  3.94%  github.com/gocql/gocql.(*writeCoalescer).flush
         0     0%   100%      0.09s  7.09%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher
         0     0%   100%      0.03s  2.36%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher.func1
         0     0%   100%      0.09s  7.09%  github.com/gocql/gocql.(*writeCoalescer).writeFlusherImpl
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.newFramer (inline)
         0     0%   100%      0.03s  2.36%  github.com/gocql/gocql.readHeader
         0     0%   100%      0.01s  0.79%  github.com/gocql/gocql.roundRobbin.func1
         0     0%   100%      0.03s  2.36%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0%   100%      0.03s  2.36%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0%   100%      0.03s  2.36%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0%   100%      0.03s  2.36%  github.com/golang-jwt/jwt.Parse
         0     0%   100%      0.03s  2.36%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0%   100%      0.01s  0.79%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0%   100%      0.03s  2.36%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0%   100%      0.02s  1.57%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0%   100%      0.03s  2.36%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0%   100%      0.01s  0.79%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0%   100%      0.03s  2.36%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
         0     0%   100%      0.02s  1.57%  github.com/gorilla/mux.(*Route).Match
         0     0%   100%      0.02s  1.57%  github.com/gorilla/mux.(*Router).Match
         0     0%   100%      0.06s  4.72%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0%   100%      0.02s  1.57%  github.com/gorilla/mux.(*routeRegexp).Match
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0%   100%      0.04s  3.15%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyOrders
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0%   100%      0.04s  3.15%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/device.glob..func1
         0     0%   100%      0.03s  2.36%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0%   100%      0.02s  1.57%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0%   100%      0.01s  0.79%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0%   100%      0.02s  1.57%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0%   100%      0.05s  3.94%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0%   100%      0.05s  3.94%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0%   100%      0.05s  3.94%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0%   100%      0.01s  0.79%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0%   100%      0.01s  0.79%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
         0     0%   100%      0.01s  0.79%  github.com/untillpro/dynobuffers.(*Buffer).releaseFields
         0     0%   100%      0.01s  0.79%  github.com/untillpro/dynobuffers.(*modifiedField).Release
         0     0%   100%      0.03s  2.36%  github.com/untillpro/dynobuffers.NewBuffer
         0     0%   100%      0.01s  0.79%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0%   100%      0.02s  1.57%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0%   100%      0.02s  1.57%  github.com/untillpro/dynobuffers.glob..func1
         0     0%   100%      0.01s  0.79%  github.com/untillpro/ibusmem.(*bus).SendRequest2
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/appdef.(*appDef).DefByName
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/appdef.(*fields).Field (inline)
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/appdef.DefKind.HasSystemField (inline)
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).validateChannel
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/in10nmem.notifier
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).GetNewRawEventBuilder
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).ReadPLog
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2.func3
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).applyRecs
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func2
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).applyCommandRecs (inline)
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1.2
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutBytes
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutRecordID
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutString
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsRecordID
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutBytes (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutChars
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutString
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs.func1
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldDef (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldsDef (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).qNameID
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRecord
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.makeObject
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.newEvent
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.newEventBuilder (inline)
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/istructsmem.newKey
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.newRawEventBuilder
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/istructsmem/internal/qnames.(*QNames).ID
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0%   100%      0.08s  6.30%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0%   100%      0.44s 34.65%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/pipeline.AsyncPipeline.SendAsync
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0%   100%      0.49s 38.58%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/processors/command.(*appPartition).getWorkspace (inline)
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getRawEventBuilder
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getWorkspace
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0%   100%      0.06s  4.72%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0%   100%      0.05s  3.94%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).handleEvent
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0%   100%      0.08s  6.30%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0%   100%      0.06s  4.72%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/router.createRequest
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/router.writeResponse
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0%   100%      0.04s  3.15%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0%   100%      0.03s  2.36%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0%   100%      0.07s  5.51%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0%   100%      0.02s  1.57%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0%   100%      0.01s  0.79%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0%   100%      0.05s  3.94%  internal/poll.(*FD).Read
         0     0%   100%      0.02s  1.57%  internal/poll.(*FD).Write
         0     0%   100%      0.05s  3.94%  internal/poll.(*FD).Writev
         0     0%   100%      0.06s  4.72%  internal/poll.ignoringEINTRIO (inline)
         0     0%   100%      0.05s  3.94%  internal/poll.writev
         0     0%   100%      0.01s  0.79%  io.ReadAll
         0     0%   100%      0.03s  2.36%  io.ReadAtLeast
         0     0%   100%      0.03s  2.36%  io.ReadFull (inline)
         0     0%   100%      0.05s  3.94%  net.(*Buffers).WriteTo
         0     0%   100%      0.05s  3.94%  net.(*conn).Read
         0     0%   100%      0.02s  1.57%  net.(*conn).Write
         0     0%   100%      0.05s  3.94%  net.(*conn).writeBuffers
         0     0%   100%      0.05s  3.94%  net.(*netFD).Read
         0     0%   100%      0.02s  1.57%  net.(*netFD).Write
         0     0%   100%      0.05s  3.94%  net.(*netFD).writeBuffers
         0     0%   100%      0.02s  1.57%  net/http.(*chunkWriter).flush
         0     0%   100%      0.02s  1.57%  net/http.(*connReader).Read
         0     0%   100%      0.02s  1.57%  net/http.(*response).Flush
         0     0%   100%      0.02s  1.57%  net/http.(*response).FlushError
         0     0%   100%      0.04s  3.15%  net/http.HandlerFunc.ServeHTTP
         0     0%   100%      0.02s  1.57%  net/http.checkConnErrorWriter.Write
         0     0%   100%      0.06s  4.72%  net/http.serverHandler.ServeHTTP
         0     0%   100%      0.01s  0.79%  reflect.Value.Elem
         0     0%   100%      0.02s  1.57%  regexp.(*Regexp).MatchString (inline)
         0     0%   100%      0.02s  1.57%  regexp.(*Regexp).doExecute
         0     0%   100%      0.02s  1.57%  regexp.(*Regexp).doMatch (inline)
         0     0%   100%      0.03s  2.36%  runtime.addtimer
         0     0%   100%      0.02s  1.57%  runtime.assertE2I
         0     0%   100%      0.01s  0.79%  runtime.assertE2I2
         0     0%   100%      0.01s  0.79%  runtime.assertI2I
         0     0%   100%      0.01s  0.79%  runtime.callers
         0     0%   100%      0.01s  0.79%  runtime.callers.func1
         0     0%   100%      0.05s  3.94%  runtime.chansend
         0     0%   100%      0.04s  3.15%  runtime.chansend1
         0     0%   100%      0.04s  3.15%  runtime.checkTimers
         0     0%   100%      0.01s  0.79%  runtime.checkdead
         0     0%   100%      0.01s  0.79%  runtime.convT64
         0     0%   100%      0.02s  1.57%  runtime.entersyscall
         0     0%   100%      0.02s  1.57%  runtime.entersyscall_sysmon
         0     0%   100%      0.01s  0.79%  runtime.evacuate_faststr
         0     0%   100%      0.04s  3.15%  runtime.futexsleep
         0     0%   100%      0.06s  4.72%  runtime.futexwakeup
         0     0%   100%      0.06s  4.72%  runtime.gcBgMarkWorker
         0     0%   100%      0.06s  4.72%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.06s  4.72%  runtime.gcDrain
         0     0%   100%      0.01s  0.79%  runtime.gcTrigger.test
         0     0%   100%      0.01s  0.79%  runtime.gfget
         0     0%   100%      0.03s  2.36%  runtime.goexit0
         0     0%   100%      0.01s  0.79%  runtime.goparkunlock (inline)
         0     0%   100%      0.03s  2.36%  runtime.goready
         0     0%   100%      0.03s  2.36%  runtime.goready.func1
         0     0%   100%      0.01s  0.79%  runtime.growWork_faststr
         0     0%   100%      0.03s  2.36%  runtime.growslice
         0     0%   100%      0.01s  0.79%  runtime.hashGrow
         0     0%   100%      0.01s  0.79%  runtime.isSystemGoroutine
         0     0%   100%      0.04s  3.15%  runtime.mPark (inline)
         0     0%   100%      0.02s  1.57%  runtime.mProf_Malloc
         0     0%   100%      0.01s  0.79%  runtime.makeBucketArray
         0     0%   100%      0.01s  0.79%  runtime.makechan
         0     0%   100%      0.01s  0.79%  runtime.makemap_small
         0     0%   100%      0.04s  3.15%  runtime.makeslice
         0     0%   100%      0.01s  0.79%  runtime.mapaccess1
         0     0%   100%      0.02s  1.57%  runtime.mapassign_faststr
         0     0%   100%      0.26s 20.47%  runtime.mcall
         0     0%   100%      0.01s  0.79%  runtime.memhash8
         0     0%   100%      0.03s  2.36%  runtime.modtimer
         0     0%   100%      0.01s  0.79%  runtime.mput
         0     0%   100%      0.06s  4.72%  runtime.netpoll
         0     0%   100%      0.06s  4.72%  runtime.netpollBreak
         0     0%   100%      0.01s  0.79%  runtime.newarray
         0     0%   100%      0.06s  4.72%  runtime.newobject
         0     0%   100%      0.01s  0.79%  runtime.newproc
         0     0%   100%      0.01s  0.79%  runtime.newproc.func1
         0     0%   100%      0.01s  0.79%  runtime.newproc1
         0     0%   100%      0.04s  3.15%  runtime.notesleep
         0     0%   100%      0.02s  1.57%  runtime.profilealloc
         0     0%   100%      0.03s  2.36%  runtime.ready
         0     0%   100%      0.02s  1.57%  runtime.reentersyscall
         0     0%   100%      0.03s  2.36%  runtime.resetspinning
         0     0%   100%      0.03s  2.36%  runtime.resettimer (inline)
         0     0%   100%      0.01s  0.79%  runtime.runOneTimer
         0     0%   100%      0.01s  0.79%  runtime.runqsteal
         0     0%   100%      0.01s  0.79%  runtime.runtimer
         0     0%   100%      0.01s  0.79%  runtime.selectnbsend
         0     0%   100%      0.05s  3.94%  runtime.startm
         0     0%   100%      0.01s  0.79%  runtime.stkbucket
         0     0%   100%      0.05s  3.94%  runtime.stopm
         0     0%   100%      0.13s 10.24%  runtime.systemstack
         0     0%   100%      0.06s  4.72%  runtime.wakeNetPoller
         0     0%   100%      0.05s  3.94%  runtime.wakep
         0     0%   100%      0.06s  4.72%  runtime.write
         0     0%   100%      0.04s  3.15%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.02s  1.57%  sync.(*Mutex).Lock (inline)
         0     0%   100%      0.02s  1.57%  sync.(*Mutex).lockSlow
         0     0%   100%      0.02s  1.57%  sync.(*Pool).Get
         0     0%   100%      0.02s  1.57%  sync.(*RWMutex).Lock
         0     0%   100%      0.02s  1.57%  sync.(*RWMutex).RLock (inline)
         0     0%   100%      0.01s  0.79%  sync.runtime_SemacquireMutex
         0     0%   100%      0.01s  0.79%  sync.runtime_SemacquireRWMutexR
         0     0%   100%      0.01s  0.79%  sync.runtime_nanotime
         0     0%   100%      0.08s  6.30%  syscall.RawSyscall6
         0     0%   100%      0.04s  3.15%  syscall.Read (inline)
         0     0%   100%      0.02s  1.57%  syscall.Write (inline)
         0     0%   100%      0.04s  3.15%  syscall.read
         0     0%   100%      0.02s  1.57%  syscall.write
         0     0%   100%      0.03s  2.36%  time.(*Timer).Reset
         0     0%   100%      0.04s  3.15%  time.NewTimer
         0     0%   100%      0.03s  2.36%  time.resetTimer
         0     0%   100%      0.03s  2.36%  time.startTimer
         0     0%   100%      0.01s  0.79%  type:.hash.github.com/voedger/voedger/pkg/appdef.QName
