File: airs-bp
Type: alloc_space
Time: Aug 12, 2023 at 3:50pm (UTC)
Showing nodes accounting for 545.47MB, 83.86% of 650.43MB total
Dropped 404 nodes (cum <= 3.25MB)
      flat  flat%   sum%        cum   cum%
   92.75MB 14.26% 14.26%   104.75MB 16.11%  encoding/json.(*decodeState).objectInterface
   57.02MB  8.77% 23.03%    79.02MB 12.15%  github.com/untillpro/dynobuffers.glob..func1
   36.22MB  5.57% 28.59%    39.23MB  6.03%  github.com/alecthomas/participle/v2/lexer.Upgrade
   36.13MB  5.55% 34.15%    36.13MB  5.55%  io.ReadAll
   27.53MB  4.23% 38.38%    28.03MB  4.31%  github.com/alecthomas/participle/v2.newTagLexer
   27.50MB  4.23% 42.61%    27.50MB  4.23%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   23.54MB  3.62% 46.23%    23.54MB  3.62%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
      22MB  3.38% 49.61%       22MB  3.38%  github.com/google/flatbuffers/go.NewBuilder (inline)
   12.51MB  1.92% 51.54%    12.51MB  1.92%  bytes.growSlice
   12.50MB  1.92% 53.46%    12.50MB  1.92%  github.com/gocql/gocql.newFramer (inline)
   11.52MB  1.77% 55.23%    13.52MB  2.08%  github.com/gocql/gocql.(*framer).writeBytes (inline)
      10MB  1.54% 56.77%       10MB  1.54%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
    9.50MB  1.46% 58.23%     9.50MB  1.46%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
    9.50MB  1.46% 59.69%       10MB  1.54%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
    8.50MB  1.31% 61.00%     8.50MB  1.31%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
    8.50MB  1.31% 62.30%     8.50MB  1.31%  time.NewTimer
    8.50MB  1.31% 63.61%     8.50MB  1.31%  encoding/json.unquote (inline)
    7.50MB  1.15% 64.76%    38.51MB  5.92%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
       7MB  1.08% 65.84%    41.01MB  6.30%  github.com/voedger/voedger/pkg/istructsmem.newKey
    6.50MB     1% 66.84%    30.01MB  4.61%  github.com/voedger/voedger/pkg/istructsmem.newValue
       6MB  0.92% 67.76%    27.51MB  4.23%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
       6MB  0.92% 68.68%    18.51MB  2.85%  bytes.(*Buffer).grow
    5.50MB  0.85% 69.53%     5.50MB  0.85%  encoding/base64.(*Encoding).DecodeString
    5.50MB  0.85% 70.38%     5.50MB  0.85%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
    5.50MB  0.85% 71.22%     5.50MB  0.85%  reflect.New
       5MB  0.77% 71.99%        5MB  0.77%  reflect.mapassign_faststr
       5MB  0.77% 72.76%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
    4.50MB  0.69% 73.45%    34.04MB  5.23%  github.com/gocql/gocql.(*Conn).exec
    4.13MB  0.63% 74.09%     5.13MB  0.79%  github.com/alecthomas/participle/v2.validate.func1
       4MB  0.62% 74.70%    34.01MB  5.23%  github.com/alecthomas/participle/v2.(*sequence).Parse
    3.51MB  0.54% 75.24%     3.51MB  0.54%  github.com/gocql/gocql.appendLong (inline)
    3.50MB  0.54% 75.78%     3.50MB  0.54%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
    3.50MB  0.54% 76.32%     3.50MB  0.54%  github.com/gocql/gocql.(*preparedLRU).keyFor (inline)
    3.50MB  0.54% 76.85%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
       3MB  0.46% 77.32%     3.50MB  0.54%  net/textproto.readMIMEHeader
       3MB  0.46% 77.78%     3.50MB  0.54%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
    2.50MB  0.38% 78.16%   110.75MB 17.03%  encoding/json.Unmarshal
    2.50MB  0.38% 78.55%    64.05MB  9.85%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
    2.50MB  0.38% 78.93%        6MB  0.92%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
    2.02MB  0.31% 79.24%    20.54MB  3.16%  github.com/gocql/gocql.(*Conn).executeBatch
       2MB  0.31% 79.55%    23.02MB  3.54%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
       2MB  0.31% 79.86%    22.02MB  3.39%  github.com/gocql/gocql.(*Conn).executeQuery
       2MB  0.31% 80.16%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey
    1.50MB  0.23% 80.39%     7.50MB  1.15%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
    1.50MB  0.23% 80.62%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
    1.50MB  0.23% 80.86%       16MB  2.46%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
    1.50MB  0.23% 81.09%    34.50MB  5.30%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
    1.50MB  0.23% 81.32%    64.55MB  9.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
    1.50MB  0.23% 81.55%    34.01MB  5.23%  github.com/alecthomas/participle/v2.(*capture).Parse
    1.50MB  0.23% 81.78%        4MB  0.61%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
    1.06MB  0.16% 81.94%     4.07MB  0.63%  github.com/VictoriaMetrics/fastcache.New
       1MB  0.15% 82.10%    34.01MB  5.23%  github.com/alecthomas/participle/v2.(*group).Parse
       1MB  0.15% 82.25%     6.50MB     1%  net/http.(*conn).readRequest
       1MB  0.15% 82.40%    14.50MB  2.23%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
       1MB  0.15% 82.56%   113.76MB 17.49%  encoding/json.(*decodeState).object
       1MB  0.15% 82.71%     3.50MB  0.54%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
    0.50MB 0.077% 82.79%    64.55MB  9.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
    0.50MB 0.077% 82.86%    36.51MB  5.61%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
    0.50MB 0.077% 82.94%    29.01MB  4.46%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
    0.50MB 0.077% 83.02%       33MB  5.07%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
    0.50MB 0.077% 83.10%     5.50MB  0.85%  github.com/alecthomas/participle/v2.lexStruct
    0.50MB 0.077% 83.17%     7.51MB  1.15%  github.com/gocql/gocql.(*Conn).recv
    0.50MB 0.077% 83.25%       12MB  1.85%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
    0.50MB 0.077% 83.33%    35.01MB  5.38%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
    0.50MB 0.077% 83.40%       16MB  2.46%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
    0.50MB 0.077% 83.48%    28.51MB  4.38%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
    0.50MB 0.077% 83.56%     4.50MB  0.69%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
    0.50MB 0.077% 83.63%     6.50MB     1%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
    0.50MB 0.077% 83.71%    23.02MB  3.54%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
    0.50MB 0.077% 83.79%    96.74MB 14.87%  encoding/json.(*decodeState).valueInterface
    0.50MB 0.077% 83.86%    19.50MB  3.00%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0% 83.86%    17.01MB  2.62%  bytes.(*Buffer).Write
         0     0% 83.86%        6MB  0.92%  encoding/json.(*Decoder).Decode
         0     0% 83.86%    12.03MB  1.85%  encoding/json.(*decodeState).array
         0     0% 83.86%    96.24MB 14.80%  encoding/json.(*decodeState).arrayInterface
         0     0% 83.86%   113.76MB 17.49%  encoding/json.(*decodeState).unmarshal
         0     0% 83.86%   113.76MB 17.49%  encoding/json.(*decodeState).value
         0     0% 83.86%     8.50MB  1.31%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 83.86%    30.52MB  4.69%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 83.86%    39.24MB  6.03%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 83.86%    39.74MB  6.11%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 83.86%    32.02MB  4.92%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 83.86%    31.52MB  4.85%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 83.86%    33.51MB  5.15%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 83.86%    64.55MB  9.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
         0     0% 83.86%    20.51MB  3.15%  github.com/alecthomas/participle/v2.(*generatorContext).parseGroup
         0     0% 83.86%    13.01MB  2.00%  github.com/alecthomas/participle/v2.(*generatorContext).parseModifier
         0     0% 83.86%    64.55MB  9.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 83.86%    64.55MB  9.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 83.86%    20.01MB  3.08%  github.com/alecthomas/participle/v2.(*generatorContext).subparseGroup
         0     0% 83.86%    34.52MB  5.31%  github.com/alecthomas/participle/v2.(*strct).Parse
         0     0% 83.86%        4MB  0.62%  github.com/alecthomas/participle/v2.(*structLexer).Next
         0     0% 83.86%    50.04MB  7.69%  github.com/alecthomas/participle/v2.(*structLexer).Peek
         0     0% 83.86%    19.02MB  2.92%  github.com/alecthomas/participle/v2.Build[...]
         0     0% 83.86%    16.52MB  2.54%  github.com/alecthomas/participle/v2.MustBuild[...] (inline)
         0     0% 83.86%     5.13MB  0.79%  github.com/alecthomas/participle/v2.visit
         0     0% 83.86%     5.13MB  0.79%  github.com/alecthomas/participle/v2.visit.func1
         0     0% 83.86%    20.54MB  3.16%  github.com/gocql/gocql.(*Batch).execute
         0     0% 83.86%     3.50MB  0.54%  github.com/gocql/gocql.(*Conn).prepareStatement
         0     0% 83.86%     7.51MB  1.15%  github.com/gocql/gocql.(*Conn).serve
         0     0% 83.86%    22.52MB  3.46%  github.com/gocql/gocql.(*Query).Exec
         0     0% 83.86%    23.52MB  3.62%  github.com/gocql/gocql.(*Query).Iter
         0     0% 83.86%    21.52MB  3.31%  github.com/gocql/gocql.(*Query).execute
         0     0% 83.86%    24.04MB  3.70%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 83.86%    24.04MB  3.70%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 83.86%    23.52MB  3.62%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 83.86%     6.52MB  1.00%  github.com/gocql/gocql.(*framer).writeBatchFrame
         0     0% 83.86%    11.01MB  1.69%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 83.86%     3.51MB  0.54%  github.com/gocql/gocql.(*framer).writeLong (inline)
         0     0% 83.86%    11.01MB  1.69%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 83.86%    45.56MB  7.01%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 83.86%    45.56MB  7.01%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 83.86%    47.56MB  7.31%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 83.86%     3.50MB  0.54%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0% 83.86%     6.52MB  1.00%  github.com/gocql/gocql.(*writeBatchFrame).buildFrame
         0     0% 83.86%    11.01MB  1.69%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 83.86%       12MB  1.85%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0% 83.86%    15.50MB  2.38%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0% 83.86%       16MB  2.46%  github.com/golang-jwt/jwt.Parse
         0     0% 83.86%       11MB  1.69%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 83.86%       10MB  1.54%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 83.86%    27.50MB  4.23%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 83.86%     4.50MB  0.69%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 83.86%    10.50MB  1.61%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 83.86%       11MB  1.69%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 83.86%       10MB  1.54%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 83.86%    47.29MB  7.27%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0% 83.86%    40.43MB  6.22%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 83.86%    36.76MB  5.65%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 83.86%     4.50MB  0.69%  github.com/untillpro/airs-bp3/packages/air.Provide
         0     0% 83.86%        5MB  0.77%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyOrders
         0     0% 83.86%        4MB  0.62%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 83.86%        4MB  0.62%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0% 83.86%        8MB  1.23%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 83.86%    13.51MB  2.08%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 83.86%    16.02MB  2.46%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 83.86%        4MB  0.62%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0% 83.86%    11.50MB  1.77%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 83.86%     8.50MB  1.31%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 83.86%    22.50MB  3.46%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 83.86%    22.50MB  3.46%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 83.86%       13MB  2.00%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 83.86%    31.26MB  4.81%  github.com/untillpro/airs-bp3/packages/untill.Provide (inline)
         0     0% 83.86%     8.02MB  1.23%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 83.86%    23.54MB  3.62%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 83.86%       31MB  4.77%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 83.86%       31MB  4.77%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 83.86%       31MB  4.77%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 83.86%     3.50MB  0.54%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0% 83.86%    23.54MB  3.62%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 83.86%    79.02MB 12.15%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 83.86%        8MB  1.23%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 83.86%    79.02MB 12.15%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 83.86%        6MB  0.92%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 83.86%    50.31MB  7.73%  github.com/voedger/voedger/pkg/apps.Parse
         0     0% 83.86%     4.50MB  0.69%  github.com/voedger/voedger/pkg/apps/sys/blobber.Provide.func1
         0     0% 83.86%     4.02MB  0.62%  github.com/voedger/voedger/pkg/apps/sys/router.Provide.func1
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0% 83.86%     9.50MB  1.46%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 83.86%    25.02MB  3.85%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 83.86%    25.55MB  3.93%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 83.86%     7.07MB  1.09%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 83.86%     4.07MB  0.63%  github.com/voedger/voedger/pkg/istoragecache.newCachingAppStorage
         0     0% 83.86%    24.52MB  3.77%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0% 83.86%    25.55MB  3.93%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0% 83.86%    24.52MB  3.77%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 83.86%    14.51MB  2.23%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).ReadPLog
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 83.86%        7MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 83.86%     7.10MB  1.09%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 83.86%    41.01MB  6.30%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 83.86%    14.50MB  2.23%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 83.86%       16MB  2.46%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 83.86%    30.03MB  4.62%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 83.86%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 83.86%    33.51MB  5.15%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 83.86%    10.50MB  1.61%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0% 83.86%    10.50MB  1.61%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 83.86%    10.50MB  1.61%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 83.86%       11MB  1.69%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 83.86%        8MB  1.23%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 83.86%    33.51MB  5.15%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 83.86%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0% 83.86%    10.01MB  1.54%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 83.86%       13MB  2.00%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 83.86%     9.50MB  1.46%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 83.86%     6.50MB     1%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 83.86%     7.50MB  1.15%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 83.86%    21.02MB  3.23%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 83.86%     3.51MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0% 83.86%    11.52MB  1.77%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 83.86%    23.02MB  3.54%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 83.86%     8.02MB  1.23%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 83.86%    12.50MB  1.92%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 83.86%     6.51MB  1.00%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 83.86%    79.02MB 12.15%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 83.86%    66.51MB 10.23%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 83.86%    12.50MB  1.92%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 83.86%        4MB  0.61%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0% 83.86%        4MB  0.61%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
         0     0% 83.86%        4MB  0.61%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEvent
         0     0% 83.86%        4MB  0.61%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 83.86%    19.02MB  2.92%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 83.86%    12.50MB  1.92%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 83.86%    21.02MB  3.23%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 83.86%     8.51MB  1.31%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 83.86%     9.51MB  1.46%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 83.86%     8.51MB  1.31%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 83.86%     9.51MB  1.46%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0% 83.86%    11.01MB  1.69%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 83.86%    20.50MB  3.15%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 83.86%    20.50MB  3.15%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0% 83.86%    53.27MB  8.19%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 83.86%    56.77MB  8.73%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 83.86%    55.01MB  8.46%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 83.86%   402.79MB 61.93%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/pipeline.(*implIServiceSimple).Run
         0     0% 83.86%   397.80MB 61.16%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 83.86%        8MB  1.23%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 83.86%    11.50MB  1.77%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 83.86%    68.01MB 10.46%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 83.86%   402.29MB 61.85%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 83.86%    28.51MB  4.38%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 83.86%    24.52MB  3.77%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 83.86%        8MB  1.23%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 83.86%    30.03MB  4.62%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 83.86%    29.52MB  4.54%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 83.86%    13.51MB  2.08%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 83.86%   103.75MB 15.95%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 83.86%     7.50MB  1.15%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 83.86%        8MB  1.23%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 83.86%       25MB  3.84%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 83.86%     4.50MB  0.69%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0% 83.86%     4.50MB  0.69%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
         0     0% 83.86%    54.51MB  8.38%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 83.86%    11.50MB  1.77%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 83.86%    11.50MB  1.77%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 83.86%        4MB  0.62%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).savePosition
         0     0% 83.86%    35.51MB  5.46%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 83.86%    27.50MB  4.23%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 83.86%    42.63MB  6.55%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 83.86%    36.13MB  5.55%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 83.86%    40.13MB  6.17%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0% 83.86%        7MB  1.08%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 83.86%     6.50MB     1%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 83.86%    21.50MB  3.31%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 83.86%     7.50MB  1.15%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 83.86%    27.50MB  4.23%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 83.86%    25.50MB  3.92%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 83.86%    36.01MB  5.54%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 83.86%     8.50MB  1.31%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 83.86%       16MB  2.46%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 83.86%    23.02MB  3.54%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 83.86%    10.50MB  1.61%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 83.86%     3.51MB  0.54%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 83.86%       13MB  2.00%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 83.86%       15MB  2.31%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 83.86%    15.54MB  2.39%  github.com/voedger/voedger/pkg/sys.Provide
         0     0% 83.86%        4MB  0.62%  github.com/voedger/voedger/pkg/sys/authnz/workspace.Provide
         0     0% 83.86%     6.50MB     1%  github.com/voedger/voedger/pkg/sys/authnz/workspace.qcwbnQryExec
         0     0% 83.86%     3.50MB  0.54%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0% 83.86%       13MB  2.00%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 83.86%     4.50MB  0.69%  github.com/voedger/voedger/pkg/sys/uniques.provideEventUniqueValidator.func1
         0     0% 83.86%     4.50MB  0.69%  github.com/voedger/voedger/pkg/sys/uniques.provideEventUniqueValidator.func1.1
         0     0% 83.86%    46.94MB  7.22%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 83.86%    42.94MB  6.60%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 83.86%    39.30MB  6.04%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 83.86%     6.10MB  0.94%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 83.86%        9MB  1.38%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 83.86%    37.30MB  5.73%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 83.86%    53.79MB  8.27%  net/http.(*conn).serve
         0     0% 83.86%    43.79MB  6.73%  net/http.HandlerFunc.ServeHTTP
         0     0% 83.86%        5MB  0.77%  net/http.readRequest
         0     0% 83.86%    47.29MB  7.27%  net/http.serverHandler.ServeHTTP
         0     0% 83.86%     3.50MB  0.54%  net/textproto.(*Reader).ReadMIMEHeader (inline)
         0     0% 83.86%        5MB  0.77%  reflect.Value.SetMapIndex
         0     0% 83.86%    81.52MB 12.53%  sync.(*Pool).Get
