File: airs-bp
Type: alloc_space
Time: Aug 20, 2023 at 6:42pm (UTC)
Showing nodes accounting for 486.27MB, 80.62% of 603.14MB total
Dropped 419 nodes (cum <= 3.02MB)
      flat  flat%   sum%        cum   cum%
   66.15MB 10.97% 10.97%    73.15MB 12.13%  encoding/json.(*decodeState).objectInterface
   50.51MB  8.37% 19.34%    81.52MB 13.52%  github.com/untillpro/dynobuffers.glob..func1
      31MB  5.14% 24.48%       31MB  5.14%  github.com/google/flatbuffers/go.NewBuilder (inline)
   30.06MB  4.98% 29.47%    30.06MB  4.98%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
   29.07MB  4.82% 34.29%    29.07MB  4.82%  io.ReadAll
   27.74MB  4.60% 38.89%    29.74MB  4.93%  github.com/alecthomas/participle/v2/lexer.Upgrade
   24.53MB  4.07% 42.95%    25.53MB  4.23%  github.com/alecthomas/participle/v2.newTagLexer
   21.50MB  3.57% 46.52%    21.50MB  3.57%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   10.50MB  1.74% 48.26%    10.50MB  1.74%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
      10MB  1.66% 49.92%       10MB  1.66%  github.com/gocql/gocql.newFramer (inline)
       9MB  1.49% 51.41%        9MB  1.49%  github.com/voedger/voedger/pkg/parser.iterate
    8.50MB  1.41% 52.82%     8.50MB  1.41%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
       8MB  1.33% 54.15%    31.50MB  5.22%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
    7.50MB  1.24% 55.39%     7.50MB  1.24%  reflect.mapassign_faststr
    7.50MB  1.24% 56.63%     7.50MB  1.24%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
    7.50MB  1.24% 57.88%        9MB  1.49%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
       7MB  1.16% 59.04%    34.01MB  5.64%  github.com/voedger/voedger/pkg/istructsmem.newValue
       7MB  1.16% 60.20%       18MB  2.98%  github.com/gocql/gocql.(*Conn).exec
    6.50MB  1.08% 61.28%     6.50MB  1.08%  bytes.growSlice
    6.50MB  1.08% 62.35%       20MB  3.32%  github.com/gocql/gocql.(*Conn).executeBatch
    6.50MB  1.08% 63.43%     6.50MB  1.08%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
       6MB     1% 64.43%    35.51MB  5.89%  github.com/voedger/voedger/pkg/istructsmem.newKey
    5.50MB  0.91% 65.34%     5.50MB  0.91%  net/textproto.readMIMEHeader
    5.50MB  0.91% 66.25%     5.50MB  0.91%  reflect.New
    5.50MB  0.91% 67.16%     5.50MB  0.91%  encoding/json.unquote (inline)
    4.50MB  0.75% 67.91%     4.50MB  0.75%  encoding/base64.(*Encoding).DecodeString
    4.50MB  0.75% 68.66%     4.50MB  0.75%  github.com/gocql/gocql.(*Session).NewBatch
    4.50MB  0.75% 69.40%    83.16MB 13.79%  encoding/json.Unmarshal
    4.13MB  0.69% 70.09%     7.64MB  1.27%  github.com/alecthomas/participle/v2.validate.func1
       4MB  0.66% 70.75%        4MB  0.66%  github.com/voedger/voedger/pkg/processors/command.ProvideServiceFactory.func1.1
       4MB  0.66% 71.41%        4MB  0.66%  time.NewTimer
       4MB  0.66% 72.08%    32.50MB  5.39%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
    3.50MB  0.58% 72.66%       11MB  1.82%  github.com/gocql/gocql.(*Conn).executeQuery
    3.50MB  0.58% 73.24%       25MB  4.15%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
    3.50MB  0.58% 73.82%     3.50MB  0.58%  github.com/voedger/voedger/pkg/state.(*recordsStorage).NewKeyBuilder
    3.50MB  0.58% 74.40%     3.50MB  0.58%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
    3.50MB  0.58% 74.98%     3.50MB  0.58%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
    2.50MB  0.41% 75.39%       10MB  1.66%  net/http.(*conn).readRequest
    2.50MB  0.41% 75.81%     9.01MB  1.49%  bytes.(*Buffer).grow
    2.50MB  0.41% 76.22%     7.64MB  1.27%  github.com/alecthomas/participle/v2.visit
       2MB  0.33% 76.55%    31.50MB  5.22%  github.com/alecthomas/participle/v2.(*sequence).Parse
       2MB  0.33% 76.89%     7.50MB  1.24%  net/http.readRequest
       2MB  0.33% 77.22%        7MB  1.16%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
    1.50MB  0.25% 77.47%    19.50MB  3.23%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
    1.50MB  0.25% 77.72%        9MB  1.49%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
    1.50MB  0.25% 77.96%    84.16MB 13.95%  encoding/json.(*decodeState).object
       1MB  0.17% 78.13%     4.03MB  0.67%  github.com/alecthomas/participle/v2/lexer.New
       1MB  0.17% 78.30%    31.50MB  5.22%  github.com/alecthomas/participle/v2.(*group).Parse
       1MB  0.17% 78.46%    51.04MB  8.46%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
       1MB  0.17% 78.63%     3.50MB  0.58%  github.com/untillpro/ibusmem.(*bus).SendRequest2
       1MB  0.17% 78.79%    16.51MB  2.74%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
       1MB  0.17% 78.96%     9.50MB  1.58%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
       1MB  0.17% 79.12%     8.51MB  1.41%  github.com/gocql/gocql.(*Conn).recv
       1MB  0.17% 79.29%       36MB  5.97%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
       1MB  0.17% 79.46%    52.04MB  8.63%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
    0.53MB 0.088% 79.54%     3.03MB   0.5%  github.com/VictoriaMetrics/fastcache.New
    0.50MB 0.083% 79.63%    52.04MB  8.63%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
    0.50MB 0.083% 79.71%    24.53MB  4.07%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
    0.50MB 0.083% 79.79%     3.50MB  0.58%  regexp.compile
    0.50MB 0.083% 79.88%       26MB  4.31%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
    0.50MB 0.083% 79.96%    34.51MB  5.72%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
    0.50MB 0.083% 80.04%    52.04MB  8.63%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
    0.50MB 0.083% 80.13%    31.50MB  5.22%  github.com/alecthomas/participle/v2.(*capture).Parse
    0.50MB 0.083% 80.21%    10.51MB  1.74%  github.com/alecthomas/participle/v2.(*generatorContext).parseModifier
    0.50MB 0.083% 80.29%    31.50MB  5.22%  github.com/alecthomas/participle/v2.(*strct).Parse
    0.50MB 0.083% 80.37%    15.50MB  2.57%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
    0.50MB 0.083% 80.46%        5MB  0.83%  github.com/voedger/voedger/pkg/istructsmem.storeRow
    0.50MB 0.083% 80.54%    25.01MB  4.15%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
    0.50MB 0.083% 80.62%       11MB  1.82%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 80.62%     8.50MB  1.41%  bytes.(*Buffer).Write
         0     0% 80.62%     3.50MB  0.58%  context.WithCancel
         0     0% 80.62%     3.50MB  0.58%  context.withCancel
         0     0% 80.62%        9MB  1.49%  encoding/json.(*Decoder).Decode
         0     0% 80.62%    11.02MB  1.83%  encoding/json.(*decodeState).array
         0     0% 80.62%    65.65MB 10.88%  encoding/json.(*decodeState).arrayInterface
         0     0% 80.62%    84.66MB 14.04%  encoding/json.(*decodeState).unmarshal
         0     0% 80.62%    84.16MB 13.95%  encoding/json.(*decodeState).value
         0     0% 80.62%    66.15MB 10.97%  encoding/json.(*decodeState).valueInterface
         0     0% 80.62%     7.50MB  1.24%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 80.62%    27.50MB  4.56%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 80.62%    33.23MB  5.51%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 80.62%    34.73MB  5.76%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 80.62%    28.50MB  4.73%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 80.62%    27.50MB  4.56%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 80.62%    31.50MB  5.22%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 80.62%    15.51MB  2.57%  github.com/alecthomas/participle/v2.(*generatorContext).parseGroup
         0     0% 80.62%    52.04MB  8.63%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 80.62%    51.54MB  8.55%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 80.62%    14.01MB  2.32%  github.com/alecthomas/participle/v2.(*generatorContext).subparseGroup
         0     0% 80.62%    11.01MB  1.83%  github.com/alecthomas/participle/v2.(*structLexer).Next
         0     0% 80.62%    35.03MB  5.81%  github.com/alecthomas/participle/v2.(*structLexer).Peek
         0     0% 80.62%    16.01MB  2.65%  github.com/alecthomas/participle/v2.Build[...]
         0     0% 80.62%    15.51MB  2.57%  github.com/alecthomas/participle/v2.MustBuild[...] (inline)
         0     0% 80.62%     7.14MB  1.18%  github.com/alecthomas/participle/v2.visit.func1
         0     0% 80.62%     4.03MB  0.67%  github.com/alecthomas/participle/v2/lexer.MustSimple (inline)
         0     0% 80.62%     4.03MB  0.67%  github.com/alecthomas/participle/v2/lexer.NewSimple
         0     0% 80.62%       20MB  3.32%  github.com/gocql/gocql.(*Batch).execute
         0     0% 80.62%     7.51MB  1.24%  github.com/gocql/gocql.(*Conn).serve
         0     0% 80.62%       11MB  1.82%  github.com/gocql/gocql.(*Query).Exec
         0     0% 80.62%       12MB  1.99%  github.com/gocql/gocql.(*Query).Iter
         0     0% 80.62%       11MB  1.82%  github.com/gocql/gocql.(*Query).execute
         0     0% 80.62%       23MB  3.81%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 80.62%     3.50MB  0.58%  github.com/gocql/gocql.(*Session).Query
         0     0% 80.62%       23MB  3.81%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 80.62%       12MB  1.99%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 80.62%    33.01MB  5.47%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 80.62%    33.01MB  5.47%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 80.62%    35.01MB  5.80%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 80.62%    20.51MB  3.40%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0% 80.62%    20.51MB  3.40%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0% 80.62%     3.50MB  0.58%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 80.62%    20.51MB  3.40%  github.com/golang-jwt/jwt.Parse
         0     0% 80.62%     8.50MB  1.41%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 80.62%        8MB  1.33%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 80.62%    21.50MB  3.57%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 80.62%        4MB  0.66%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 80.62%        7MB  1.16%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 80.62%     8.50MB  1.41%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 80.62%        8MB  1.33%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 80.62%    46.23MB  7.66%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0% 80.62%    44.84MB  7.43%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 80.62%    34.77MB  5.76%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 80.62%     5.02MB  0.83%  github.com/untillpro/airs-bp3/packages/air.Provide
         0     0% 80.62%     4.50MB  0.75%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0% 80.62%       25MB  4.15%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0% 80.62%     4.50MB  0.75%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 80.62%        4MB  0.66%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 80.62%        8MB  1.33%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 80.62%    18.03MB  2.99%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 80.62%    19.02MB  3.15%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 80.62%        6MB  0.99%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0% 80.62%     4.50MB  0.75%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0% 80.62%       14MB  2.32%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0% 80.62%       14MB  2.32%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 80.62%        8MB  1.33%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 80.62%       19MB  3.15%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 80.62%       19MB  3.15%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 80.62%       11MB  1.82%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 80.62%    26.25MB  4.35%  github.com/untillpro/airs-bp3/packages/untill.Provide (inline)
         0     0% 80.62%    13.53MB  2.24%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 80.62%    30.06MB  4.98%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 80.62%    23.50MB  3.90%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 80.62%    23.50MB  3.90%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 80.62%    23.50MB  3.90%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 80.62%    30.06MB  4.98%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 80.62%    81.52MB 13.52%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 80.62%        6MB  0.99%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 80.62%    81.52MB 13.52%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 80.62%        9MB  1.49%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 80.62%    47.78MB  7.92%  github.com/voedger/voedger/pkg/apps.Parse
         0     0% 80.62%     5.50MB  0.91%  github.com/voedger/voedger/pkg/apps/sys/blobber.Provide.func1
         0     0% 80.62%     8.50MB  1.41%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 80.62%    14.50MB  2.40%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 80.62%    33.51MB  5.56%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 80.62%     5.04MB  0.83%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 80.62%     3.03MB   0.5%  github.com/voedger/voedger/pkg/istoragecache.newCachingAppStorage
         0     0% 80.62%       14MB  2.32%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0% 80.62%     4.04MB  0.67%  github.com/voedger/voedger/pkg/istructsmem.(*AppConfigType).prepare
         0     0% 80.62%    15.51MB  2.57%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 80.62%     7.50MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 80.62%       10MB  1.66%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 80.62%       10MB  1.66%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 80.62%        8MB  1.33%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 80.62%        8MB  1.33%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 80.62%     8.04MB  1.33%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 80.62%    35.01MB  5.80%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 80.62%       18MB  2.98%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 80.62%       35MB  5.80%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0% 80.62%       11MB  1.82%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 80.62%    37.55MB  6.23%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 80.62%        5MB  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 80.62%    28.01MB  4.64%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 80.62%        8MB  1.33%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 80.62%     8.50MB  1.41%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 80.62%        8MB  1.33%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 80.62%    28.01MB  4.64%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 80.62%        5MB  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 80.62%        6MB     1%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 80.62%    11.50MB  1.91%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 80.62%        7MB  1.16%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 80.62%        4MB  0.66%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 80.62%     6.51MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 80.62%    24.53MB  4.07%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 80.62%     9.02MB  1.50%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0% 80.62%     7.01MB  1.16%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 80.62%    25.53MB  4.23%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 80.62%    13.03MB  2.16%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 80.62%    13.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 80.62%    12.02MB  1.99%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 80.62%    81.52MB 13.52%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 80.62%    68.01MB 11.28%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 80.62%    13.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0% 80.62%       11MB  1.82%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 80.62%        4MB  0.66%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0% 80.62%        4MB  0.66%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 80.62%    13.01MB  2.16%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 80.62%    13.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 80.62%    24.03MB  3.98%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 80.62%        6MB     1%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 80.62%     5.50MB  0.91%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 80.62%    25.01MB  4.15%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 80.62%     9.50MB  1.58%  github.com/voedger/voedger/pkg/parser.(*SchemaAST).Iterate
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/parser.(*analyseCtx).table
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/parser.(*buildContext).addFieldRefToDef
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/parser.(*buildContext).addTableItems
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/parser.(*buildContext).fillTable
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/parser.(*buildContext).table
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/parser.MergePackageSchemas (inline)
         0     0% 80.62%    49.78MB  8.25%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/parser.analyse
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/parser.analyse.func1
         0     0% 80.62%        9MB  1.49%  github.com/voedger/voedger/pkg/parser.iterate.func1
         0     0% 80.62%     5.50MB  0.91%  github.com/voedger/voedger/pkg/parser.lookup[...]
         0     0% 80.62%     5.50MB  0.91%  github.com/voedger/voedger/pkg/parser.lookup[...].func1
         0     0% 80.62%     6.50MB  1.08%  github.com/voedger/voedger/pkg/parser.mergePackageSchemasImpl
         0     0% 80.62%    52.78MB  8.75%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/parser.resolveTable
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/parser.resolve[...]
         0     0% 80.62%    59.51MB  9.87%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 80.62%   365.60MB 60.62%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 80.62%        4MB  0.66%  github.com/voedger/voedger/pkg/pipeline.(*implIServiceSimple).Run
         0     0% 80.62%   357.10MB 59.21%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 80.62%     7.50MB  1.24%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 80.62%    10.50MB  1.74%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 80.62%    71.01MB 11.77%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 80.62%   365.10MB 60.53%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 80.62%    27.51MB  4.56%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 80.62%    15.51MB  2.57%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 80.62%     9.50MB  1.58%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 80.62%        8MB  1.33%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 80.62%    37.55MB  6.23%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 80.62%    21.01MB  3.48%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 80.62%        4MB  0.66%  github.com/voedger/voedger/pkg/processors/command.getWSDesc
         0     0% 80.62%        7MB  1.16%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 80.62%    75.15MB 12.46%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/processors/query.implRowsProcessorFactory
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func13
         0     0% 80.62%     6.51MB  1.08%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 80.62%        7MB  1.16%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 80.62%    26.01MB  4.31%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0% 80.62%    58.51MB  9.70%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 80.62%    10.50MB  1.74%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 80.62%    10.50MB  1.74%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 80.62%    36.51MB  6.05%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 80.62%    27.50MB  4.56%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 80.62%    40.07MB  6.64%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 80.62%    29.57MB  4.90%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 80.62%    39.07MB  6.48%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0% 80.62%        7MB  1.16%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 80.62%    24.50MB  4.06%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 80.62%     8.50MB  1.41%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 80.62%    27.50MB  4.56%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 80.62%    23.50MB  3.90%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 80.62%    34.01MB  5.64%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 80.62%     7.50MB  1.24%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 80.62%       20MB  3.32%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 80.62%    24.53MB  4.07%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 80.62%    24.53MB  4.07%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 80.62%     9.02MB  1.50%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 80.62%    11.50MB  1.91%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 80.62%    12.50MB  2.07%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 80.62%    30.51MB  5.06%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
         0     0% 80.62%       11MB  1.82%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 80.62%       11MB  1.82%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 80.62%    15.51MB  2.57%  github.com/voedger/voedger/pkg/sys.Provide
         0     0% 80.62%     3.50MB  0.58%  github.com/voedger/voedger/pkg/sys/authnz/workspace.Provide
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/sys/authnz/workspace.qcwbnQryExec
         0     0% 80.62%     4.50MB  0.75%  github.com/voedger/voedger/pkg/sys/invite.Provide
         0     0% 80.62%       15MB  2.49%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 80.62%    52.85MB  8.76%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 80.62%    48.35MB  8.02%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 80.62%    46.27MB  7.67%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 80.62%     8.50MB  1.41%  github.com/voedger/voedger/pkg/vvm.buildSchemasASTs
         0     0% 80.62%     6.54MB  1.08%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 80.62%     5.50MB  0.91%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 80.62%    43.77MB  7.26%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 80.62%    56.23MB  9.32%  net/http.(*conn).serve
         0     0% 80.62%    41.23MB  6.84%  net/http.HandlerFunc.ServeHTTP
         0     0% 80.62%    46.23MB  7.66%  net/http.serverHandler.ServeHTTP
         0     0% 80.62%     5.50MB  0.91%  net/textproto.(*Reader).ReadMIMEHeader (inline)
         0     0% 80.62%     7.50MB  1.24%  reflect.Value.SetMapIndex
         0     0% 80.62%     3.50MB  0.58%  regexp.Compile (inline)
         0     0% 80.62%     3.51MB  0.58%  runtime.doInit
         0     0% 80.62%     3.51MB  0.58%  runtime.main
         0     0% 80.62%    84.02MB 13.93%  sync.(*Pool).Get
