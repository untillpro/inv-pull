File: airs-bp
Type: cpu
Time: Aug 21, 2023 at 4:49pm (UTC)
Duration: 10.17s, Total samples = 1.19s (11.70%)
Showing nodes accounting for 1.19s, 100% of 1.19s total
      flat  flat%   sum%        cum   cum%
     0.17s 14.29% 14.29%      0.17s 14.29%  runtime.futex
     0.12s 10.08% 24.37%      0.12s 10.08%  runtime/internal/syscall.Syscall6
     0.05s  4.20% 28.57%      0.05s  4.20%  runtime.write1
     0.04s  3.36% 31.93%      0.04s  3.36%  runtime.add (inline)
     0.03s  2.52% 34.45%      0.20s 16.81%  runtime.findRunnable
     0.03s  2.52% 36.97%      0.07s  5.88%  runtime.scanobject
     0.02s  1.68% 38.66%      0.15s 12.61%  runtime.mallocgc
     0.02s  1.68% 40.34%      0.06s  5.04%  runtime.mapiternext
     0.02s  1.68% 42.02%      0.02s  1.68%  runtime.memclrNoHeapPointers
     0.02s  1.68% 43.70%      0.02s  1.68%  runtime.nextFreeFast (inline)
     0.02s  1.68% 45.38%      0.02s  1.68%  runtime.procyield
     0.02s  1.68% 47.06%      0.03s  2.52%  runtime.selectgo
     0.02s  1.68% 48.74%      0.02s  1.68%  runtime.writeHeapBits.flush
     0.01s  0.84% 49.58%      0.01s  0.84%  aeshashbody
     0.01s  0.84% 50.42%      0.04s  3.36%  bufio.(*Reader).Read
     0.01s  0.84% 51.26%      0.01s  0.84%  context.(*cancelCtx).Done
     0.01s  0.84% 52.10%      0.01s  0.84%  encoding/json.(*Decoder).readValue
     0.01s  0.84% 52.94%      0.01s  0.84%  encoding/json.(*decodeState).rescanLiteral
     0.01s  0.84% 53.78%      0.01s  0.84%  encoding/json.checkValid
     0.01s  0.84% 54.62%      0.01s  0.84%  encoding/json.stateBeginValue
     0.01s  0.84% 55.46%      0.02s  1.68%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
     0.01s  0.84% 56.30%      0.01s  0.84%  github.com/gocql/gocql.(*policyConnPool).getPool
     0.01s  0.84% 57.14%      0.05s  4.20%  github.com/gocql/gocql.(*queryExecutor).do
     0.01s  0.84% 57.98%      0.01s  0.84%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
     0.01s  0.84% 58.82%      0.05s  4.20%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
     0.01s  0.84% 59.66%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetTByOrder
     0.01s  0.84% 60.50%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).set
     0.01s  0.84% 61.34%      0.02s  1.68%  github.com/untillpro/dynobuffers.NewBuffer
     0.01s  0.84% 62.18%      0.02s  1.68%  github.com/voedger/voedger/pkg/in10nmem.notifier
     0.01s  0.84% 63.03%      0.04s  3.36%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
     0.01s  0.84% 63.87%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).Container (inline)
     0.01s  0.84% 64.71%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow.func1
     0.01s  0.84% 65.55%      0.03s  2.52%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEvent
     0.01s  0.84% 66.39%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validRecord
     0.01s  0.84% 67.23%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).validDefs
     0.01s  0.84% 68.07%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
     0.01s  0.84% 68.91%      0.46s 38.66%  github.com/voedger/voedger/pkg/pipeline.puller_sync
     0.01s  0.84% 69.75%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.(*implICommandMessage).AppQName
     0.01s  0.84% 70.59%      0.02s  1.68%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
     0.01s  0.84% 71.43%      0.01s  0.84%  internal/poll.runtime_pollSetDeadline
     0.01s  0.84% 72.27%      0.01s  0.84%  net/http.(*connReader).lock
     0.01s  0.84% 73.11%      0.01s  0.84%  reflect.directlyAssignable
     0.01s  0.84% 73.95%      0.01s  0.84%  regexp/syntax.(*Inst).MatchRunePos
     0.01s  0.84% 74.79%      0.03s  2.52%  runtime.(*bmap).overflow (inline)
     0.01s  0.84% 75.63%      0.01s  0.84%  runtime.(*itabTableType).find
     0.01s  0.84% 76.47%      0.04s  3.36%  runtime.(*mcache).nextFree
     0.01s  0.84% 77.31%      0.02s  1.68%  runtime.(*mcentral).cacheSpan
     0.01s  0.84% 78.15%      0.01s  0.84%  runtime.(*spanSet).push
     0.01s  0.84% 78.99%      0.01s  0.84%  runtime.(*sweepLocked).sweep
     0.01s  0.84% 79.83%      0.01s  0.84%  runtime.(*waitq).dequeue (inline)
     0.01s  0.84% 80.67%      0.01s  0.84%  runtime.arenaIndex (inline)
     0.01s  0.84% 81.51%      0.01s  0.84%  runtime.cfuncname (inline)
     0.01s  0.84% 82.35%      0.01s  0.84%  runtime.chanrecv
     0.01s  0.84% 83.19%      0.01s  0.84%  runtime.checkTimers
     0.01s  0.84% 84.03%      0.01s  0.84%  runtime.deductAssistCredit
     0.01s  0.84% 84.87%      0.01s  0.84%  runtime.duffzero
     0.01s  0.84% 85.71%      0.01s  0.84%  runtime.execute
     0.01s  0.84% 86.55%      0.01s  0.84%  runtime.exitsyscallfast_reacquired
     0.01s  0.84% 87.39%      0.02s  1.68%  runtime.findObject
     0.01s  0.84% 88.24%      0.01s  0.84%  runtime.findfunc
     0.01s  0.84% 89.08%      0.01s  0.84%  runtime.greyobject
     0.01s  0.84% 89.92%      0.01s  0.84%  runtime.heapBitsForAddr
     0.01s  0.84% 90.76%      0.04s  3.36%  runtime.heapBitsSetType
     0.01s  0.84% 91.60%      0.02s  1.68%  runtime.makemap_small
     0.01s  0.84% 92.44%      0.03s  2.52%  runtime.makeslice
     0.01s  0.84% 93.28%      0.01s  0.84%  runtime.mapaccess1_fast64
     0.01s  0.84% 94.12%      0.01s  0.84%  runtime.mapaccess2
     0.01s  0.84% 94.96%      0.25s 21.01%  runtime.mcall
     0.01s  0.84% 95.80%      0.22s 18.49%  runtime.park_m
     0.01s  0.84% 96.64%      0.01s  0.84%  runtime.read
     0.01s  0.84% 97.48%      0.01s  0.84%  runtime.readUintptr (inline)
     0.01s  0.84% 98.32%      0.01s  0.84%  runtime.semrelease1
     0.01s  0.84% 99.16%      0.01s  0.84%  runtime/internal/atomic.(*UnsafePointer).Load (inline)
     0.01s  0.84%   100%      0.03s  2.52%  time.(*Timer).Reset
         0     0%   100%      0.02s  1.68%  bufio.(*Reader).Peek
         0     0%   100%      0.02s  1.68%  bufio.(*Reader).fill
         0     0%   100%      0.01s  0.84%  bufio.(*Writer).Flush
         0     0%   100%      0.01s  0.84%  bytes.(*Buffer).Write
         0     0%   100%      0.01s  0.84%  bytes.(*Buffer).grow
         0     0%   100%      0.01s  0.84%  bytes.growSlice
         0     0%   100%      0.02s  1.68%  encoding/json.(*Decoder).Decode
         0     0%   100%      0.03s  2.52%  encoding/json.(*decodeState).array
         0     0%   100%      0.03s  2.52%  encoding/json.(*decodeState).arrayInterface
         0     0%   100%      0.01s  0.84%  encoding/json.(*decodeState).literalInterface
         0     0%   100%      0.06s  5.04%  encoding/json.(*decodeState).object
         0     0%   100%      0.02s  1.68%  encoding/json.(*decodeState).objectInterface
         0     0%   100%      0.01s  0.84%  encoding/json.(*decodeState).scanWhile
         0     0%   100%      0.06s  5.04%  encoding/json.(*decodeState).unmarshal
         0     0%   100%      0.06s  5.04%  encoding/json.(*decodeState).value
         0     0%   100%      0.02s  1.68%  encoding/json.(*decodeState).valueInterface
         0     0%   100%      0.06s  5.04%  encoding/json.Unmarshal
         0     0%   100%      0.01s  0.84%  encoding/json.stateBeginValueOrEmpty
         0     0%   100%      0.02s  1.68%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0%   100%      0.01s  0.84%  github.com/gocql/gocql.(*Batch).Query (inline)
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*Batch).execute
         0     0%   100%      0.03s  2.52%  github.com/gocql/gocql.(*Conn).exec
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*Conn).executeBatch
         0     0%   100%      0.01s  0.84%  github.com/gocql/gocql.(*Conn).executeQuery
         0     0%   100%      0.06s  5.04%  github.com/gocql/gocql.(*Conn).recv
         0     0%   100%      0.06s  5.04%  github.com/gocql/gocql.(*Conn).serve
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*Query).Exec
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*Query).Iter
         0     0%   100%      0.01s  0.84%  github.com/gocql/gocql.(*Query).execute
         0     0%   100%      0.03s  2.52%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0%   100%      0.01s  0.84%  github.com/gocql/gocql.(*Session).NewBatch
         0     0%   100%      0.03s  2.52%  github.com/gocql/gocql.(*Session).executeBatch
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*Session).executeQuery
         0     0%   100%      0.03s  2.52%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0%   100%      0.05s  4.20%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0%   100%      0.06s  5.04%  github.com/gocql/gocql.(*writeCoalescer).flush
         0     0%   100%      0.09s  7.56%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher
         0     0%   100%      0.02s  1.68%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher.func1
         0     0%   100%      0.09s  7.56%  github.com/gocql/gocql.(*writeCoalescer).writeFlusherImpl
         0     0%   100%      0.04s  3.36%  github.com/gocql/gocql.readHeader
         0     0%   100%      0.04s  3.36%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0%   100%      0.04s  3.36%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0%   100%      0.04s  3.36%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0%   100%      0.04s  3.36%  github.com/golang-jwt/jwt.Parse
         0     0%   100%      0.01s  0.84%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0%   100%      0.02s  1.68%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0%   100%      0.02s  1.68%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0%   100%      0.02s  1.68%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0%   100%      0.02s  1.68%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
         0     0%   100%      0.01s  0.84%  github.com/gorilla/mux.(*Route).Match
         0     0%   100%      0.01s  0.84%  github.com/gorilla/mux.(*Router).Match
         0     0%   100%      0.03s  2.52%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0%   100%      0.01s  0.84%  github.com/gorilla/mux.(*routeRegexp).Match
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0%   100%      0.03s  2.52%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0%   100%      0.03s  2.52%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/edit.ProvideTablePlanEventValidator.func1
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0%   100%      0.02s  1.68%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0%   100%      0.04s  3.36%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0%   100%      0.04s  3.36%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0%   100%      0.01s  0.84%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0%   100%      0.05s  4.20%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0%   100%      0.05s  4.20%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).getByField
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.(*Buffer).getByUOffsetT
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.copyFixedSizeValue
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0%   100%      0.01s  0.84%  github.com/untillpro/dynobuffers.glob..func1
         0     0%   100%      0.01s  0.84%  github.com/untillpro/ibusmem.(*bus).SendRequest2.func2
         0     0%   100%      0.01s  0.84%  github.com/untillpro/ibusmem.(*bus).SendResponse
         0     0%   100%      0.01s  0.84%  github.com/untillpro/ibusmem.(*channelSender).send (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/appdef.(*fields).Field
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istoragecache.makeKey (inline)
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2.func3
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0%   100%      0.08s  6.72%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).applyRecs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func2
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).applyCommandRecs (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutChars
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldDef (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldsDef (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRecord
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUD
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventCUDs
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventObjects
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/istructsmem.newKey
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem/internal/qnames.(*QNames).QName (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/itokensjwt.buildGenericPayload
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0%   100%      0.43s 36.13%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/pipeline.(*flushTimer).reset (inline)
         0     0%   100%      0.40s 33.61%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync.func1
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0%   100%      0.09s  7.56%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).buildCommandArgs
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/processors/command.(*opSendResponse).DoSync
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.getAppStructs
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/processors/command.getWSDesc
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0%   100%      0.05s  4.20%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0%   100%      0.04s  3.36%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0%   100%      0.06s  5.04%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/router.createRequest
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0%   100%      0.06s  5.04%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0%   100%      0.03s  2.52%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*hostState).ClearIntents
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0%   100%      0.08s  6.72%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0%   100%      0.02s  1.68%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0%   100%      0.01s  0.84%  github.com/voedger/voedger/pkg/utils.ReplyJSON (inline)
         0     0%   100%      0.05s  4.20%  internal/poll.(*FD).Read
         0     0%   100%      0.01s  0.84%  internal/poll.(*FD).SetWriteDeadline (inline)
         0     0%   100%      0.01s  0.84%  internal/poll.(*FD).Write
         0     0%   100%      0.05s  4.20%  internal/poll.(*FD).Writev
         0     0%   100%      0.06s  5.04%  internal/poll.ignoringEINTRIO (inline)
         0     0%   100%      0.01s  0.84%  internal/poll.setDeadlineImpl
         0     0%   100%      0.05s  4.20%  internal/poll.writev
         0     0%   100%      0.01s  0.84%  io.ReadAll
         0     0%   100%      0.04s  3.36%  io.ReadAtLeast
         0     0%   100%      0.04s  3.36%  io.ReadFull (inline)
         0     0%   100%      0.05s  4.20%  net.(*Buffers).WriteTo
         0     0%   100%      0.05s  4.20%  net.(*conn).Read
         0     0%   100%      0.01s  0.84%  net.(*conn).SetWriteDeadline
         0     0%   100%      0.01s  0.84%  net.(*conn).Write
         0     0%   100%      0.05s  4.20%  net.(*conn).writeBuffers
         0     0%   100%      0.05s  4.20%  net.(*netFD).Read
         0     0%   100%      0.01s  0.84%  net.(*netFD).SetWriteDeadline (inline)
         0     0%   100%      0.01s  0.84%  net.(*netFD).Write
         0     0%   100%      0.05s  4.20%  net.(*netFD).writeBuffers
         0     0%   100%      0.01s  0.84%  net/http.(*body).Read
         0     0%   100%      0.01s  0.84%  net/http.(*body).readLocked
         0     0%   100%      0.07s  5.88%  net/http.(*conn).serve
         0     0%   100%      0.02s  1.68%  net/http.(*connReader).Read
         0     0%   100%      0.01s  0.84%  net/http.(*connReader).abortPendingRead
         0     0%   100%      0.01s  0.84%  net/http.(*connReader).startBackgroundRead
         0     0%   100%      0.01s  0.84%  net/http.(*response).WriteHeader
         0     0%   100%      0.02s  1.68%  net/http.(*response).finishRequest
         0     0%   100%      0.02s  1.68%  net/http.HandlerFunc.ServeHTTP
         0     0%   100%      0.01s  0.84%  net/http.Header.Clone (inline)
         0     0%   100%      0.01s  0.84%  net/http.checkConnErrorWriter.Write
         0     0%   100%      0.03s  2.52%  net/http.serverHandler.ServeHTTP
         0     0%   100%      0.01s  0.84%  reflect.New
         0     0%   100%      0.01s  0.84%  reflect.Value.Convert
         0     0%   100%      0.01s  0.84%  reflect.Value.Set
         0     0%   100%      0.01s  0.84%  reflect.Value.assignTo
         0     0%   100%      0.01s  0.84%  reflect.cvtBytesString
         0     0%   100%      0.01s  0.84%  reflect.makeString
         0     0%   100%      0.01s  0.84%  reflect.unsafe_New
         0     0%   100%      0.01s  0.84%  regexp.(*Regexp).MatchString (inline)
         0     0%   100%      0.01s  0.84%  regexp.(*Regexp).doExecute
         0     0%   100%      0.01s  0.84%  regexp.(*Regexp).doMatch (inline)
         0     0%   100%      0.01s  0.84%  regexp.(*Regexp).doOnePass
         0     0%   100%      0.01s  0.84%  regexp.onePassNext
         0     0%   100%      0.01s  0.84%  runtime.(*atomicMSpanPointer).Load (inline)
         0     0%   100%      0.03s  2.52%  runtime.(*mcache).refill
         0     0%   100%      0.01s  0.84%  runtime.(*mcentral).uncacheSpan
         0     0%   100%      0.01s  0.84%  runtime.(*spanSet).pop
         0     0%   100%      0.03s  2.52%  runtime.addtimer
         0     0%   100%      0.01s  0.84%  runtime.assertI2I
         0     0%   100%      0.01s  0.84%  runtime.bgsweep
         0     0%   100%      0.01s  0.84%  runtime.chanrecv2
         0     0%   100%      0.02s  1.68%  runtime.chansend
         0     0%   100%      0.02s  1.68%  runtime.chansend1
         0     0%   100%      0.01s  0.84%  runtime.convT64
         0     0%   100%      0.01s  0.84%  runtime.convTstring
         0     0%   100%      0.02s  1.68%  runtime.entersyscall
         0     0%   100%      0.02s  1.68%  runtime.entersyscall_sysmon
         0     0%   100%      0.01s  0.84%  runtime.exitsyscall
         0     0%   100%      0.01s  0.84%  runtime.exitsyscallfast
         0     0%   100%      0.01s  0.84%  runtime.funcname
         0     0%   100%      0.11s  9.24%  runtime.futexsleep
         0     0%   100%      0.06s  5.04%  runtime.futexwakeup
         0     0%   100%      0.07s  5.88%  runtime.gcBgMarkWorker
         0     0%   100%      0.07s  5.88%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.07s  5.88%  runtime.gcDrain
         0     0%   100%      0.01s  0.84%  runtime.getitab
         0     0%   100%      0.02s  1.68%  runtime.goexit0
         0     0%   100%      0.02s  1.68%  runtime.goready
         0     0%   100%      0.02s  1.68%  runtime.goready.func1
         0     0%   100%      0.03s  2.52%  runtime.growslice
         0     0%   100%      0.01s  0.84%  runtime.hashGrow
         0     0%   100%      0.02s  1.68%  runtime.isSystemGoroutine
         0     0%   100%      0.11s  9.24%  runtime.mPark (inline)
         0     0%   100%      0.01s  0.84%  runtime.makeBucketArray
         0     0%   100%      0.01s  0.84%  runtime.makechan
         0     0%   100%      0.01s  0.84%  runtime.mapaccess1_faststr
         0     0%   100%      0.01s  0.84%  runtime.mapaccess2_faststr
         0     0%   100%      0.01s  0.84%  runtime.mapassign_faststr
         0     0%   100%      0.02s  1.68%  runtime.mapiterinit
         0     0%   100%      0.02s  1.68%  runtime.modtimer
         0     0%   100%      0.05s  4.20%  runtime.netpoll
         0     0%   100%      0.05s  4.20%  runtime.netpollBreak
         0     0%   100%      0.01s  0.84%  runtime.newarray
         0     0%   100%      0.05s  4.20%  runtime.newobject
         0     0%   100%      0.02s  1.68%  runtime.newproc
         0     0%   100%      0.02s  1.68%  runtime.newproc.func1
         0     0%   100%      0.01s  0.84%  runtime.newproc1
         0     0%   100%      0.11s  9.24%  runtime.notesleep
         0     0%   100%      0.06s  5.04%  runtime.notewakeup
         0     0%   100%      0.02s  1.68%  runtime.ready
         0     0%   100%      0.02s  1.68%  runtime.reentersyscall
         0     0%   100%      0.01s  0.84%  runtime.resetspinning
         0     0%   100%      0.02s  1.68%  runtime.resettimer (inline)
         0     0%   100%      0.22s 18.49%  runtime.schedule
         0     0%   100%      0.02s  1.68%  runtime.send
         0     0%   100%      0.01s  0.84%  runtime.spanOf (inline)
         0     0%   100%      0.04s  3.36%  runtime.startm
         0     0%   100%      0.11s  9.24%  runtime.stopm
         0     0%   100%      0.01s  0.84%  runtime.sweepone
         0     0%   100%      0.13s 10.92%  runtime.systemstack
         0     0%   100%      0.05s  4.20%  runtime.wakeNetPoller
         0     0%   100%      0.04s  3.36%  runtime.wakep
         0     0%   100%      0.05s  4.20%  runtime.write
         0     0%   100%      0.04s  3.36%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.02s  1.68%  sync.(*Mutex).Lock (inline)
         0     0%   100%      0.02s  1.68%  sync.(*Mutex).lockSlow
         0     0%   100%      0.01s  0.84%  sync.(*Pool).Get
         0     0%   100%      0.02s  1.68%  sync.(*RWMutex).Lock
         0     0%   100%      0.01s  0.84%  sync.(*WaitGroup).Add
         0     0%   100%      0.01s  0.84%  sync.(*WaitGroup).Done
         0     0%   100%      0.01s  0.84%  sync.runtime_Semrelease
         0     0%   100%      0.02s  1.68%  sync.runtime_doSpin
         0     0%   100%      0.08s  6.72%  syscall.RawSyscall6
         0     0%   100%      0.05s  4.20%  syscall.Read (inline)
         0     0%   100%      0.11s  9.24%  syscall.Syscall
         0     0%   100%      0.01s  0.84%  syscall.Write (inline)
         0     0%   100%      0.05s  4.20%  syscall.read
         0     0%   100%      0.01s  0.84%  syscall.write
         0     0%   100%      0.01s  0.84%  time.After
         0     0%   100%      0.04s  3.36%  time.NewTimer
         0     0%   100%      0.02s  1.68%  time.resetTimer
         0     0%   100%      0.03s  2.52%  time.startTimer
