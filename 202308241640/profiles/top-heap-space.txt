File: airs-bp
Type: alloc_space
Time: Aug 24, 2023 at 4:43pm (UTC)
Showing nodes accounting for 533.99MB, 82.63% of 646.27MB total
Dropped 378 nodes (cum <= 3.23MB)
      flat  flat%   sum%        cum   cum%
   72.67MB 11.24% 11.24%    80.67MB 12.48%  encoding/json.(*decodeState).objectInterface
   72.52MB 11.22% 22.47%    93.52MB 14.47%  github.com/untillpro/dynobuffers.glob..func1
   33.58MB  5.20% 27.66%    33.58MB  5.20%  io.ReadAll
   30.99MB  4.79% 32.46%       36MB  5.57%  github.com/alecthomas/participle/v2/lexer.Upgrade
   28.50MB  4.41% 36.87%    28.50MB  4.41%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   27.03MB  4.18% 41.05%    27.03MB  4.18%  github.com/alecthomas/participle/v2.newTagLexer
   24.55MB  3.80% 44.85%    24.55MB  3.80%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
      21MB  3.25% 48.10%       21MB  3.25%  github.com/google/flatbuffers/go.NewBuilder (inline)
      11MB  1.70% 49.80%       11MB  1.70%  github.com/gocql/gocql.newFramer (inline)
      11MB  1.70% 51.50%    11.50MB  1.78%  github.com/voedger/voedger/pkg/parser.iterate
   10.01MB  1.55% 53.05%    10.01MB  1.55%  bytes.growSlice
    9.50MB  1.47% 54.52%     9.50MB  1.47%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
    9.50MB  1.47% 55.99%    10.50MB  1.62%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
       9MB  1.39% 57.38%        9MB  1.39%  encoding/base64.(*Encoding).DecodeString
    8.50MB  1.32% 58.70%    23.50MB  3.64%  github.com/gocql/gocql.(*Conn).executeBatch
    8.50MB  1.32% 60.01%    39.50MB  6.11%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
    8.01MB  1.24% 61.25%     8.01MB  1.24%  github.com/gocql/gocql.(*framer).writeBytes (inline)
    7.50MB  1.16% 62.41%     7.50MB  1.16%  net/textproto.readMIMEHeader
       7MB  1.08% 63.50%        7MB  1.08%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
    6.50MB  1.01% 64.50%    16.51MB  2.55%  bytes.(*Buffer).grow
    6.50MB  1.01% 65.51%     6.50MB  1.01%  encoding/json.unquote (inline)
       6MB  0.93% 66.44%        6MB  0.93%  reflect.mapassign_faststr
       6MB  0.93% 67.37%        6MB  0.93%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
       6MB  0.93% 68.29%        6MB  0.93%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
       6MB  0.93% 69.22%    34.01MB  5.26%  github.com/voedger/voedger/pkg/istructsmem.newValue
       6MB  0.93% 70.15%     6.50MB  1.01%  time.NewTimer
    5.50MB  0.85% 71.00%    42.51MB  6.58%  github.com/voedger/voedger/pkg/istructsmem.newKey
       5MB  0.77% 71.78%        5MB  0.77%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
       5MB  0.77% 72.55%        5MB  0.77%  reflect.New
       5MB  0.77% 73.32%     5.50MB  0.85%  github.com/untillpro/dynobuffers.(*Buffer).getByUOffsetT
    4.50MB   0.7% 74.02%     4.50MB   0.7%  github.com/gocql/gocql.(*Session).NewBatch
    4.50MB   0.7% 74.72%    23.51MB  3.64%  github.com/gocql/gocql.(*Conn).exec
       4MB  0.62% 75.34%    20.01MB  3.10%  github.com/gocql/gocql.(*Conn).executeQuery
       4MB  0.62% 75.96%    24.01MB  3.71%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
    3.50MB  0.54% 76.50%    28.01MB  4.33%  github.com/alecthomas/participle/v2.(*sequence).Parse
    3.50MB  0.54% 77.04%    87.17MB 13.49%  encoding/json.Unmarshal
    3.50MB  0.54% 77.58%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
    3.50MB  0.54% 78.12%    40.51MB  6.27%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
    2.56MB   0.4% 78.52%     4.56MB  0.71%  github.com/alecthomas/participle/v2.validate.func1
    2.50MB  0.39% 78.90%        7MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
    2.50MB  0.39% 79.29%     5.06MB  0.78%  github.com/alecthomas/participle/v2.visit
       2MB  0.31% 79.60%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewPartKey
       2MB  0.31% 79.91%    22.51MB  3.48%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
    1.50MB  0.23% 80.14%    10.50MB  1.63%  net/http.(*conn).readRequest
    1.50MB  0.23% 80.37%     6.01MB  0.93%  github.com/gocql/gocql.(*Conn).awaitSchemaAgreement
       1MB  0.15% 80.53%    24.02MB  3.72%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
       1MB  0.15% 80.68%    38.51MB  5.96%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
       1MB  0.15% 80.84%     8.01MB  1.24%  github.com/gocql/gocql.(*Conn).recv
       1MB  0.15% 80.99%    38.01MB  5.88%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
       1MB  0.15% 81.15%     3.50MB  0.54%  github.com/alecthomas/participle/v2.(*generatorContext).parseLiteral
       1MB  0.15% 81.30%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
       1MB  0.15% 81.46%    61.05MB  9.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
    0.54MB 0.084% 81.54%    42.06MB  6.51%  github.com/voedger/voedger/pkg/apps.Parse
    0.50MB 0.078% 81.62%    61.05MB  9.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
    0.50MB 0.077% 81.70%    60.55MB  9.37%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
    0.50MB 0.077% 81.77%    40.50MB  6.27%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
    0.50MB 0.077% 81.85%    36.01MB  5.57%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
    0.50MB 0.077% 81.93%     5.50MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
    0.50MB 0.077% 82.01%    23.01MB  3.56%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
    0.50MB 0.077% 82.08%    70.66MB 10.93%  encoding/json.(*decodeState).valueInterface
    0.50MB 0.077% 82.16%    12.51MB  1.94%  github.com/alecthomas/participle/v2.(*generatorContext).parseModifier
    0.50MB 0.077% 82.24%    28.52MB  4.41%  github.com/alecthomas/participle/v2.(*strct).Parse
    0.50MB 0.077% 82.32%    17.02MB  2.63%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
    0.50MB 0.077% 82.39%     6.01MB  0.93%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
    0.50MB 0.077% 82.47%        7MB  1.08%  github.com/voedger/voedger/pkg/parser.resolveTable
    0.50MB 0.077% 82.55%       18MB  2.79%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
    0.50MB 0.077% 82.63%    10.50MB  1.62%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 82.63%    15.51MB  2.40%  bytes.(*Buffer).Write
         0     0% 82.63%        8MB  1.24%  encoding/json.(*Decoder).Decode
         0     0% 82.63%    12.03MB  1.86%  encoding/json.(*decodeState).array
         0     0% 82.63%    69.66MB 10.78%  encoding/json.(*decodeState).arrayInterface
         0     0% 82.63%    88.67MB 13.72%  encoding/json.(*decodeState).object
         0     0% 82.63%    89.67MB 13.88%  encoding/json.(*decodeState).unmarshal
         0     0% 82.63%    89.17MB 13.80%  encoding/json.(*decodeState).value
         0     0% 82.63%        6MB  0.93%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 82.63%    26.52MB  4.10%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 82.63%    32.50MB  5.03%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 82.63%       33MB  5.11%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 82.63%    28.02MB  4.33%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 82.63%    27.52MB  4.26%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 82.63%    27.01MB  4.18%  github.com/alecthomas/participle/v2.(*capture).Parse
         0     0% 82.63%    27.01MB  4.18%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 82.63%    61.05MB  9.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
         0     0% 82.63%    19.01MB  2.94%  github.com/alecthomas/participle/v2.(*generatorContext).parseGroup
         0     0% 82.63%    61.05MB  9.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 82.63%    61.05MB  9.45%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 82.63%    16.51MB  2.55%  github.com/alecthomas/participle/v2.(*generatorContext).subparseGroup
         0     0% 82.63%    28.01MB  4.33%  github.com/alecthomas/participle/v2.(*group).Parse
         0     0% 82.63%     4.01MB  0.62%  github.com/alecthomas/participle/v2.(*parseContext).Apply
         0     0% 82.63%    15.01MB  2.32%  github.com/alecthomas/participle/v2.(*structLexer).Next
         0     0% 82.63%    37.53MB  5.81%  github.com/alecthomas/participle/v2.(*structLexer).Peek
         0     0% 82.63%    15.51MB  2.40%  github.com/alecthomas/participle/v2.Build[...]
         0     0% 82.63%    14.01MB  2.17%  github.com/alecthomas/participle/v2.MustBuild[...] (inline)
         0     0% 82.63%     4.50MB   0.7%  github.com/alecthomas/participle/v2.lexStruct
         0     0% 82.63%     4.01MB  0.62%  github.com/alecthomas/participle/v2.setField
         0     0% 82.63%     5.06MB  0.78%  github.com/alecthomas/participle/v2.visit.func1
         0     0% 82.63%     4.50MB   0.7%  github.com/gocql/gocql.(*Batch).attempt
         0     0% 82.63%    23.50MB  3.64%  github.com/gocql/gocql.(*Batch).execute
         0     0% 82.63%     8.01MB  1.24%  github.com/gocql/gocql.(*Conn).serve
         0     0% 82.63%     3.51MB  0.54%  github.com/gocql/gocql.(*Iter).SliceMap
         0     0% 82.63%    21.01MB  3.25%  github.com/gocql/gocql.(*Query).Exec
         0     0% 82.63%    22.01MB  3.41%  github.com/gocql/gocql.(*Query).Iter
         0     0% 82.63%    19.51MB  3.02%  github.com/gocql/gocql.(*Query).execute
         0     0% 82.63%       30MB  4.64%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 82.63%        4MB  0.62%  github.com/gocql/gocql.(*Session).Query
         0     0% 82.63%       30MB  4.64%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 82.63%    22.01MB  3.41%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 82.63%        4MB  0.62%  github.com/gocql/gocql.(*framer).parseFrame
         0     0% 82.63%        4MB  0.62%  github.com/gocql/gocql.(*framer).writeBatchFrame
         0     0% 82.63%     5.51MB  0.85%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 82.63%     5.51MB  0.85%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 82.63%    49.02MB  7.58%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 82.63%    49.02MB  7.58%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 82.63%    52.02MB  8.05%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 82.63%        6MB  0.93%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0% 82.63%        4MB  0.62%  github.com/gocql/gocql.(*writeBatchFrame).buildFrame
         0     0% 82.63%     5.51MB  0.85%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 82.63%    23.01MB  3.56%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0% 82.63%    18.51MB  2.86%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0% 82.63%        7MB  1.08%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 82.63%    23.01MB  3.56%  github.com/golang-jwt/jwt.Parse
         0     0% 82.63%       12MB  1.86%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 82.63%        7MB  1.08%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 82.63%    28.50MB  4.41%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 82.63%     6.50MB  1.01%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 82.63%       10MB  1.55%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 82.63%       12MB  1.86%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 82.63%        7MB  1.08%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 82.63%    46.24MB  7.15%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0% 82.63%    43.59MB  6.75%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 82.63%    29.55MB  4.57%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 82.63%        6MB  0.93%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0% 82.63%    35.01MB  5.42%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0% 82.63%        6MB  0.93%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 82.63%     4.50MB   0.7%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyOrders
         0     0% 82.63%        5MB  0.77%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 82.63%        5MB  0.77%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0% 82.63%        9MB  1.39%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 82.63%    15.02MB  2.32%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 82.63%     5.50MB  0.85%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0% 82.63%     4.50MB   0.7%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0% 82.63%     4.50MB   0.7%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
         0     0% 82.63%     4.50MB   0.7%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0% 82.63%        9MB  1.39%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0% 82.63%        9MB  1.39%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 82.63%     4.50MB   0.7%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 82.63%    27.01MB  4.18%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 82.63%    27.01MB  4.18%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 82.63%    15.50MB  2.40%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 82.63%    25.02MB  3.87%  github.com/untillpro/airs-bp3/packages/untill.Provide (inline)
         0     0% 82.63%    11.02MB  1.70%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 82.63%    24.55MB  3.80%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 82.63%       31MB  4.80%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 82.63%       31MB  4.80%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 82.63%       31MB  4.80%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 82.63%     5.50MB  0.85%  github.com/untillpro/dynobuffers.(*Buffer).getByField
         0     0% 82.63%    24.55MB  3.80%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 82.63%    93.52MB 14.47%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 82.63%       10MB  1.55%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 82.63%    93.52MB 14.47%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 82.63%        9MB  1.39%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 82.63%     3.50MB  0.54%  github.com/voedger/voedger/pkg/apps/sys/blobber.Provide.func1
         0     0% 82.63%        5MB  0.77%  github.com/voedger/voedger/pkg/apps/sys/router.Provide.func1
         0     0% 82.63%        7MB  1.08%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 82.63%    23.01MB  3.56%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 82.63%    41.01MB  6.34%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 82.63%     8.54MB  1.32%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 82.63%     5.51MB  0.85%  github.com/voedger/voedger/pkg/istorageimpl.(*implIAppStorageProvider).AppStorage
         0     0% 82.63%     4.51MB   0.7%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.appStorageProviderType.Init
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).GetNewRawEventBuilder
         0     0% 82.63%    22.51MB  3.48%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 82.63%    11.50MB  1.78%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 82.63%       16MB  2.48%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 82.63%       16MB  2.48%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 82.63%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 82.63%     5.50MB  0.85%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 82.63%    14.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 82.63%     8.04MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 82.63%    19.50MB  3.02%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0% 82.63%    42.51MB  6.58%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 82.63%    17.50MB  2.71%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 82.63%       14MB  2.17%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 82.63%    32.03MB  4.96%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 82.63%     7.50MB  1.16%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 82.63%    33.01MB  5.11%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 82.63%        7MB  1.08%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 82.63%    10.50MB  1.62%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 82.63%     8.50MB  1.32%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 82.63%    33.01MB  5.11%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 82.63%     7.50MB  1.16%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 82.63%     9.01MB  1.39%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 82.63%       16MB  2.48%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 82.63%    11.50MB  1.78%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 82.63%        8MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 82.63%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 82.63%    22.02MB  3.41%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 82.63%     9.52MB  1.47%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 82.63%     3.51MB  0.54%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0% 82.63%    24.02MB  3.72%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 82.63%     8.02MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 82.63%    14.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 82.63%    10.52MB  1.63%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 82.63%    93.52MB 14.47%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 82.63%    79.02MB 12.23%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 82.63%    14.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 82.63%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 82.63%    14.51MB  2.25%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 82.63%    14.50MB  2.24%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.newEventBuilder (inline)
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/istructsmem.newRawEventBuilder
         0     0% 82.63%    23.02MB  3.56%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 82.63%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 82.63%     8.01MB  1.24%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 82.63%        5MB  0.77%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 82.63%     8.51MB  1.32%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0% 82.63%     8.51MB  1.32%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 82.63%     3.50MB  0.54%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.WriteUint16 (inline)
         0     0% 82.63%    29.01MB  4.49%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 82.63%    29.01MB  4.49%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0% 82.63%    12.50MB  1.93%  github.com/voedger/voedger/pkg/parser.(*SchemaAST).Iterate
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/parser.(*analyseCtx).table
         0     0% 82.63%     6.03MB  0.93%  github.com/voedger/voedger/pkg/parser.(*buildContext).addFieldRefToDef
         0     0% 82.63%     6.53MB  1.01%  github.com/voedger/voedger/pkg/parser.(*buildContext).addTableItems
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.(*buildContext).build
         0     0% 82.63%     3.53MB  0.55%  github.com/voedger/voedger/pkg/parser.(*buildContext).checkReference
         0     0% 82.63%     7.03MB  1.09%  github.com/voedger/voedger/pkg/parser.(*buildContext).fillTable
         0     0% 82.63%     7.03MB  1.09%  github.com/voedger/voedger/pkg/parser.(*buildContext).table
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.(*buildContext).tables
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/parser.(*buildContext).tables.func1
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.BuildAppDefs (inline)
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/parser.MergePackageSchemas (inline)
         0     0% 82.63%    44.51MB  6.89%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/parser.analyse
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/parser.analyse.func1
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.buildAppDefs
         0     0% 82.63%    11.50MB  1.78%  github.com/voedger/voedger/pkg/parser.iterate.func1
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.iterateStmt[...]
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/parser.iterateStmt[...].func1
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/parser.lookup[...]
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/parser.lookup[...].func1
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/parser.mergePackageSchemasImpl
         0     0% 82.63%    47.51MB  7.35%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/parser.resolve[...]
         0     0% 82.63%    72.51MB 11.22%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 82.63%   374.86MB 58.00%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 82.63%   370.36MB 57.31%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 82.63%     7.50MB  1.16%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 82.63%    19.50MB  3.02%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 82.63%    93.02MB 14.39%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 82.63%   373.36MB 57.77%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 82.63%    31.01MB  4.80%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getRawEventBuilder
         0     0% 82.63%    22.51MB  3.48%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 82.63%       12MB  1.86%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0% 82.63%     4.01MB  0.62%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0% 82.63%    15.50MB  2.40%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 82.63%     8.50MB  1.32%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 82.63%    32.03MB  4.96%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 82.63%    24.01MB  3.72%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 82.63%       11MB  1.70%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 82.63%    79.67MB 12.33%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 82.63%     3.50MB  0.54%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 82.63%     7.50MB  1.16%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 82.63%    17.01MB  2.63%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 82.63%        5MB  0.77%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0% 82.63%        4MB  0.62%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0% 82.63%    70.51MB 10.91%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 82.63%    19.50MB  3.02%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 82.63%    19.50MB  3.02%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).savePosition
         0     0% 82.63%    38.01MB  5.88%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 82.63%       27MB  4.18%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 82.63%    40.58MB  6.28%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 82.63%    33.58MB  5.20%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 82.63%    38.58MB  5.97%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0% 82.63%        9MB  1.39%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 82.63%        7MB  1.08%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
         0     0% 82.63%        7MB  1.08%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 82.63%       29MB  4.49%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 82.63%       15MB  2.32%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 82.63%       27MB  4.18%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 82.63%       27MB  4.18%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 82.63%    38.51MB  5.96%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 82.63%        6MB  0.93%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 82.63%       18MB  2.79%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 82.63%    24.02MB  3.72%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 82.63%       12MB  1.86%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 82.63%    24.02MB  3.72%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 82.63%     6.01MB  0.93%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 82.63%       16MB  2.48%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 82.63%    40.50MB  6.27%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0% 82.63%       15MB  2.32%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 82.63%    13.01MB  2.01%  github.com/voedger/voedger/pkg/sys.Provide
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0% 82.63%       15MB  2.32%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 82.63%     4.01MB  0.62%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0% 82.63%    52.60MB  8.14%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 82.63%    46.59MB  7.21%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 82.63%    43.55MB  6.74%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 82.63%       10MB  1.55%  github.com/voedger/voedger/pkg/vvm.buildSchemasASTs
         0     0% 82.63%     4.50MB   0.7%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 82.63%     3.54MB  0.55%  github.com/voedger/voedger/pkg/vvm.provideBlobberAppStruct (inline)
         0     0% 82.63%     5.50MB  0.85%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 82.63%    42.05MB  6.51%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 82.63%    56.74MB  8.78%  net/http.(*conn).serve
         0     0% 82.63%    41.74MB  6.46%  net/http.HandlerFunc.ServeHTTP
         0     0% 82.63%        9MB  1.39%  net/http.readRequest
         0     0% 82.63%    46.24MB  7.15%  net/http.serverHandler.ServeHTTP
         0     0% 82.63%     7.50MB  1.16%  net/textproto.(*Reader).ReadMIMEHeader (inline)
         0     0% 82.63%        6MB  0.93%  reflect.Value.SetMapIndex
         0     0% 82.63%    96.02MB 14.86%  sync.(*Pool).Get
