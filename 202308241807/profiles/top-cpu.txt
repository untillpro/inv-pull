File: airs-bp
Type: cpu
Time: Aug 24, 2023 at 6:08pm (UTC)
Duration: 10.07s, Total samples = 1.20s (11.92%)
Showing nodes accounting for 1.20s, 100% of 1.20s total
      flat  flat%   sum%        cum   cum%
     0.16s 13.33% 13.33%      0.16s 13.33%  runtime/internal/syscall.Syscall6
     0.13s 10.83% 24.17%      0.13s 10.83%  runtime.futex
     0.08s  6.67% 30.83%      0.08s  6.67%  runtime.mapaccess2_faststr
     0.03s  2.50% 33.33%      0.09s  7.50%  runtime.newobject (partial-inline)
     0.03s  2.50% 35.83%      0.03s  2.50%  runtime.nextFreeFast (inline)
     0.02s  1.67% 37.50%      0.02s  1.67%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetTByOrder
     0.02s  1.67% 39.17%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
     0.02s  1.67% 40.83%      0.02s  1.67%  net/url.parse
     0.02s  1.67% 42.50%      0.02s  1.67%  runtime.(*waitq).dequeue (inline)
     0.02s  1.67% 44.17%      0.10s  8.33%  runtime.mallocgc
     0.02s  1.67% 45.83%      0.02s  1.67%  runtime.memmove
     0.02s  1.67% 47.50%      0.07s  5.83%  runtime.selectgo
     0.02s  1.67% 49.17%      0.05s  4.17%  runtime.stealWork
     0.01s  0.83% 50.00%      0.01s  0.83%  aeshashbody
     0.01s  0.83% 50.83%      0.01s  0.83%  encoding/json.(*decodeState).rescanLiteral
     0.01s  0.83% 51.67%      0.01s  0.83%  encoding/json.stateBeginValue
     0.01s  0.83% 52.50%      0.01s  0.83%  encoding/json.stateEndValue
     0.01s  0.83% 53.33%      0.01s  0.83%  encoding/json.stateInString
     0.01s  0.83% 54.17%      0.04s  3.33%  github.com/gocql/gocql.(*Conn).executeBatch
     0.01s  0.83% 55.00%      0.02s  1.67%  github.com/gocql/gocql.(*Conn).executeQuery
     0.01s  0.83% 55.83%      0.02s  1.67%  github.com/gocql/gocql.(*HostInfo).connectAddressLocked
     0.01s  0.83% 56.67%      0.01s  0.83%  github.com/gocql/gocql/internal/streams.streamOffset (inline)
     0.01s  0.83% 57.50%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Builder).PrependFloat64
     0.01s  0.83% 58.33%      0.02s  1.67%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
     0.01s  0.83% 59.17%      0.09s  7.50%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
     0.01s  0.83% 60.00%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*modifiedField).Release
     0.01s  0.83% 60.83%      0.02s  1.67%  github.com/untillpro/dynobuffers.NewBuffer
     0.01s  0.83% 61.67%      0.01s  0.83%  github.com/untillpro/dynobuffers.getOffsetSlice
     0.01s  0.83% 62.50%      0.01s  0.83%  github.com/voedger/voedger/pkg/appdef.(*containers).Containers
     0.01s  0.83% 63.33%      0.08s  6.67%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
     0.01s  0.83% 64.17%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
     0.01s  0.83% 65.00%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).qNameID
     0.01s  0.83% 65.83%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow.func1
     0.01s  0.83% 66.67%      0.47s 39.17%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
     0.01s  0.83% 67.50%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*commandProcessorMetrics).increase (inline)
     0.01s  0.83% 68.33%      0.03s  2.50%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
     0.01s  0.83% 69.17%      0.03s  2.50%  github.com/voedger/voedger/pkg/router.requestHandler.func1
     0.01s  0.83% 70.00%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/collection.collectionProjector.func1.3
     0.01s  0.83% 70.83%      0.01s  0.83%  internal/poll.runtime_pollWait
     0.01s  0.83% 71.67%      0.01s  0.83%  memeqbody
     0.01s  0.83% 72.50%      0.01s  0.83%  net/http.(*body).Read
     0.01s  0.83% 73.33%      0.01s  0.83%  net/http.appendTime
     0.01s  0.83% 74.17%      0.01s  0.83%  regexp/syntax.(*Inst).MatchRunePos
     0.01s  0.83% 75.00%      0.01s  0.83%  runtime.(*gcWork).tryGetFast (inline)
     0.01s  0.83% 75.83%      0.01s  0.83%  runtime.(*lfstack).pop (inline)
     0.01s  0.83% 76.67%      0.01s  0.83%  runtime.(*mcache).prepareForSweep
     0.01s  0.83% 77.50%      0.01s  0.83%  runtime.(*randomEnum).next (inline)
     0.01s  0.83% 78.33%      0.01s  0.83%  runtime.(*waitq).dequeueSudoG (inline)
     0.01s  0.83% 79.17%      0.01s  0.83%  runtime.arenaIndex (inline)
     0.01s  0.83% 80.00%      0.01s  0.83%  runtime.casgstatus
     0.01s  0.83% 80.83%      0.01s  0.83%  runtime.evacuate_faststr
     0.01s  0.83% 81.67%      0.01s  0.83%  runtime.findObject
     0.01s  0.83% 82.50%      0.01s  0.83%  runtime.findmoduledatap (inline)
     0.01s  0.83% 83.33%      0.02s  1.67%  runtime.gentraceback
     0.01s  0.83% 84.17%      0.01s  0.83%  runtime.getMCache (inline)
     0.01s  0.83% 85.00%      0.01s  0.83%  runtime.gogo
     0.01s  0.83% 85.83%      0.02s  1.67%  runtime.greyobject
     0.01s  0.83% 86.67%      0.03s  2.50%  runtime.heapBitsSetType
     0.01s  0.83% 87.50%      0.02s  1.67%  runtime.isSystemGoroutine
     0.01s  0.83% 88.33%      0.02s  1.67%  runtime.mapassign_faststr
     0.01s  0.83% 89.17%      0.01s  0.83%  runtime.memclrNoHeapPointers
     0.01s  0.83% 90.00%      0.01s  0.83%  runtime.nanotime (inline)
     0.01s  0.83% 90.83%      0.01s  0.83%  runtime.pageIndexOf (inline)
     0.01s  0.83% 91.67%      0.25s 20.83%  runtime.park_m
     0.01s  0.83% 92.50%      0.01s  0.83%  runtime.procyield
     0.01s  0.83% 93.33%      0.04s  3.33%  runtime.scanobject
     0.01s  0.83% 94.17%      0.01s  0.83%  runtime.sendDirect
     0.01s  0.83% 95.00%      0.01s  0.83%  runtime.siftupTimer
     0.01s  0.83% 95.83%      0.01s  0.83%  runtime.write1
     0.01s  0.83% 96.67%      0.02s  1.67%  runtime.writeHeapBits.flush
     0.01s  0.83% 97.50%      0.01s  0.83%  runtime/internal/atomic.(*Int64).Load (inline)
     0.01s  0.83% 98.33%      0.01s  0.83%  strconv.readFloat
     0.01s  0.83% 99.17%      0.01s  0.83%  sync.(*Pool).getSlow
     0.01s  0.83%   100%      0.01s  0.83%  time.Now
         0     0%   100%      0.02s  1.67%  bufio.(*Reader).Read
         0     0%   100%      0.02s  1.67%  bufio.(*Writer).Flush
         0     0%   100%      0.01s  0.83%  encoding/json.(*Decoder).Decode
         0     0%   100%      0.03s  2.50%  encoding/json.(*decodeState).arrayInterface
         0     0%   100%      0.01s  0.83%  encoding/json.(*decodeState).convertNumber
         0     0%   100%      0.01s  0.83%  encoding/json.(*decodeState).literalStore
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).object
         0     0%   100%      0.04s  3.33%  encoding/json.(*decodeState).objectInterface
         0     0%   100%      0.01s  0.83%  encoding/json.(*decodeState).scanWhile
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).unmarshal
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).value
         0     0%   100%      0.03s  2.50%  encoding/json.(*decodeState).valueInterface
         0     0%   100%      0.08s  6.67%  encoding/json.Unmarshal
         0     0%   100%      0.02s  1.67%  encoding/json.checkValid
         0     0%   100%      0.01s  0.83%  fmt.Sprintf
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*Batch).attempt
         0     0%   100%      0.04s  3.33%  github.com/gocql/gocql.(*Batch).execute
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Conn).exec
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Conn).recv
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*Conn).releaseStream
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Conn).serve
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*HostInfo).ConnectAddress
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Query).Exec
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Query).Iter
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*Query).execute
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Session).executeBatch
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Session).executeQuery
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*framer).writeBytes (inline)
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*policyConnPool).getPool
         0     0%   100%      0.08s  6.67%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0%   100%      0.09s  7.50%  github.com/gocql/gocql.(*queryExecutor).do
         0     0%   100%      0.09s  7.50%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
         0     0%   100%      0.09s  7.50%  github.com/gocql/gocql.(*writeCoalescer).flush
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*writeCoalescer).writeContext
         0     0%   100%      0.13s 10.83%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher.func1
         0     0%   100%      0.13s 10.83%  github.com/gocql/gocql.(*writeCoalescer).writeFlusherImpl
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.newFramer (inline)
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.readHeader
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.validIpAddr (inline)
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql/internal/streams.(*IDGenerator).Clear
         0     0%   100%      0.03s  2.50%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0%   100%      0.03s  2.50%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0%   100%      0.03s  2.50%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0%   100%      0.03s  2.50%  github.com/golang-jwt/jwt.Parse
         0     0%   100%      0.02s  1.67%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0%   100%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0%   100%      0.03s  2.50%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0%   100%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0%   100%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Builder).PrependSOffsetT
         0     0%   100%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0%   100%      0.03s  2.50%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
         0     0%   100%      0.01s  0.83%  github.com/gorilla/mux.(*Route).Match
         0     0%   100%      0.01s  0.83%  github.com/gorilla/mux.(*Router).Match
         0     0%   100%      0.04s  3.33%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0%   100%      0.01s  0.83%  github.com/gorilla/mux.routeRegexpGroup.setMatch
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0%   100%      0.03s  2.50%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0%   100%      0.02s  1.67%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).GetInt64
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).HasValue (inline)
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).Reset
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0%   100%      0.08s  6.67%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0%   100%      0.08s  6.67%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0%   100%      0.02s  1.67%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetT
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).releaseFields
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0%   100%      0.02s  1.67%  github.com/untillpro/dynobuffers.copyFixedSizeValue
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/appdef.(*appDef).View
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/appdef.(*appDef).defByKind
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/appdef.(*fields).Field (partial-inline)
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).Update
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/in10nmem.notifier
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0%   100%      0.07s  5.83%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0%   100%      0.11s  9.17%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).regenerateIDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).regenerateIDsPlan
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func2
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutInt32
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutInt64
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).ccDef
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewPartKey
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsRecordID
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).HasValue
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutChars
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutInt64 (inline)
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0%   100%      0.10s  8.33%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldDef (inline)
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRecord
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUD
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEvent
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventCUDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey.func2
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validRecord
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validViewValue
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.newKey
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.storeRow
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0%   100%      0.49s 40.83%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0%   100%      0.07s  5.83%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0%   100%      0.49s 40.83%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.syncProjectorsEnd
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).savePosition
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/router.createRequest
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/router.writeResponse
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0%   100%      0.12s 10.00%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/collection.collectionProjector.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/vvm.provideSyncActualizerFactory.func1.3
         0     0%   100%      0.01s  0.83%  internal/bytealg.Equal (inline)
         0     0%   100%      0.02s  1.67%  internal/poll.(*FD).Read
         0     0%   100%      0.01s  0.83%  internal/poll.(*FD).Write
         0     0%   100%      0.07s  5.83%  internal/poll.(*FD).Writev
         0     0%   100%      0.01s  0.83%  internal/poll.(*pollDesc).wait
         0     0%   100%      0.01s  0.83%  internal/poll.(*pollDesc).waitRead (inline)
         0     0%   100%      0.02s  1.67%  internal/poll.ignoringEINTRIO (inline)
         0     0%   100%      0.07s  5.83%  internal/poll.writev
         0     0%   100%      0.01s  0.83%  io.ReadAll
         0     0%   100%      0.02s  1.67%  io.ReadAtLeast
         0     0%   100%      0.02s  1.67%  io.ReadFull (inline)
         0     0%   100%      0.07s  5.83%  net.(*Buffers).WriteTo
         0     0%   100%      0.02s  1.67%  net.(*conn).Read
         0     0%   100%      0.01s  0.83%  net.(*conn).Write
         0     0%   100%      0.07s  5.83%  net.(*conn).writeBuffers
         0     0%   100%      0.02s  1.67%  net.(*netFD).Read
         0     0%   100%      0.01s  0.83%  net.(*netFD).Write
         0     0%   100%      0.07s  5.83%  net.(*netFD).writeBuffers
         0     0%   100%      0.01s  0.83%  net.IP.Equal
         0     0%   100%      0.01s  0.83%  net.IP.IsUnspecified
         0     0%   100%      0.01s  0.83%  net/http.(*chunkWriter).Write
         0     0%   100%      0.01s  0.83%  net/http.(*chunkWriter).writeHeader
         0     0%   100%      0.03s  2.50%  net/http.(*conn).readRequest
         0     0%   100%      0.08s  6.67%  net/http.(*conn).serve
         0     0%   100%      0.01s  0.83%  net/http.(*response).Flush
         0     0%   100%      0.01s  0.83%  net/http.(*response).FlushError
         0     0%   100%      0.01s  0.83%  net/http.(*response).finishRequest
         0     0%   100%      0.03s  2.50%  net/http.HandlerFunc.ServeHTTP
         0     0%   100%      0.01s  0.83%  net/http.checkConnErrorWriter.Write
         0     0%   100%      0.02s  1.67%  net/http.readRequest
         0     0%   100%      0.04s  3.33%  net/http.serverHandler.ServeHTTP
         0     0%   100%      0.02s  1.67%  net/url.ParseRequestURI
         0     0%   100%      0.01s  0.83%  regexp.(*Regexp).FindStringSubmatchIndex
         0     0%   100%      0.01s  0.83%  regexp.(*Regexp).doExecute
         0     0%   100%      0.01s  0.83%  regexp.(*Regexp).doOnePass
         0     0%   100%      0.01s  0.83%  regexp/syntax.(*Inst).MatchRune (inline)
         0     0%   100%      0.01s  0.83%  runtime.(*stackScanState).putPtr
         0     0%   100%      0.01s  0.83%  runtime.acquirep
         0     0%   100%      0.03s  2.50%  runtime.chansend
         0     0%   100%      0.02s  1.67%  runtime.chansend1
         0     0%   100%      0.04s  3.33%  runtime.checkTimers
         0     0%   100%      0.01s  0.83%  runtime.doaddtimer
         0     0%   100%      0.01s  0.83%  runtime.execute
         0     0%   100%      0.21s 17.50%  runtime.findRunnable
         0     0%   100%      0.01s  0.83%  runtime.findfunc
         0     0%   100%      0.06s  5.00%  runtime.futexsleep
         0     0%   100%      0.07s  5.83%  runtime.futexwakeup
         0     0%   100%      0.07s  5.83%  runtime.gcBgMarkWorker
         0     0%   100%      0.07s  5.83%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.07s  5.83%  runtime.gcDrain
         0     0%   100%      0.01s  0.83%  runtime.getempty
         0     0%   100%      0.02s  1.67%  runtime.goexit0
         0     0%   100%      0.04s  3.33%  runtime.goready
         0     0%   100%      0.04s  3.33%  runtime.goready.func1
         0     0%   100%      0.01s  0.83%  runtime.growWork_faststr
         0     0%   100%      0.01s  0.83%  runtime.growslice
         0     0%   100%      0.01s  0.83%  runtime.lock (inline)
         0     0%   100%      0.01s  0.83%  runtime.lock2
         0     0%   100%      0.01s  0.83%  runtime.lockWithRank (inline)
         0     0%   100%      0.06s  5.00%  runtime.mPark (inline)
         0     0%   100%      0.02s  1.67%  runtime.makeslice
         0     0%   100%      0.01s  0.83%  runtime.mapaccess2
         0     0%   100%      0.01s  0.83%  runtime.mapassign_fast64
         0     0%   100%      0.02s  1.67%  runtime.markroot
         0     0%   100%      0.02s  1.67%  runtime.markroot.func1
         0     0%   100%      0.27s 22.50%  runtime.mcall
         0     0%   100%      0.02s  1.67%  runtime.modtimer
         0     0%   100%      0.07s  5.83%  runtime.netpoll
         0     0%   100%      0.01s  0.83%  runtime.netpollBreak
         0     0%   100%      0.02s  1.67%  runtime.newproc
         0     0%   100%      0.02s  1.67%  runtime.newproc.func1
         0     0%   100%      0.02s  1.67%  runtime.newproc1
         0     0%   100%      0.06s  5.00%  runtime.notesleep
         0     0%   100%      0.07s  5.83%  runtime.notewakeup
         0     0%   100%      0.04s  3.33%  runtime.ready
         0     0%   100%      0.03s  2.50%  runtime.resetspinning
         0     0%   100%      0.02s  1.67%  runtime.resettimer (inline)
         0     0%   100%      0.02s  1.67%  runtime.runOneTimer
         0     0%   100%      0.02s  1.67%  runtime.runtimer
         0     0%   100%      0.01s  0.83%  runtime.scanblock
         0     0%   100%      0.01s  0.83%  runtime.scanframeworker
         0     0%   100%      0.02s  1.67%  runtime.scanstack
         0     0%   100%      0.01s  0.83%  runtime.scanstack.func1
         0     0%   100%      0.25s 20.83%  runtime.schedule
         0     0%   100%      0.01s  0.83%  runtime.selectnbsend
         0     0%   100%      0.05s  4.17%  runtime.send
         0     0%   100%      0.01s  0.83%  runtime.slicebytetostring
         0     0%   100%      0.07s  5.83%  runtime.startm
         0     0%   100%      0.07s  5.83%  runtime.stopm
         0     0%   100%      0.13s 10.83%  runtime.systemstack
         0     0%   100%      0.01s  0.83%  runtime.wakeNetPoller
         0     0%   100%      0.07s  5.83%  runtime.wakep
         0     0%   100%      0.01s  0.83%  runtime.write
         0     0%   100%      0.07s  5.83%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.01s  0.83%  strconv.ParseFloat
         0     0%   100%      0.01s  0.83%  strconv.atof64
         0     0%   100%      0.01s  0.83%  strconv.parseFloatPrefix
         0     0%   100%      0.01s  0.83%  sync.(*Pool).Get
         0     0%   100%      0.09s  7.50%  syscall.RawSyscall6
         0     0%   100%      0.01s  0.83%  syscall.Read (inline)
         0     0%   100%      0.09s  7.50%  syscall.Syscall
         0     0%   100%      0.01s  0.83%  syscall.Write (inline)
         0     0%   100%      0.01s  0.83%  syscall.read
         0     0%   100%      0.01s  0.83%  syscall.write
         0     0%   100%      0.02s  1.67%  time.(*Timer).Reset
         0     0%   100%      0.02s  1.67%  time.resetTimer
         0     0%   100%      0.01s  0.83%  time.sendTime
         0     0%   100%      0.01s  0.83%  type:.hash.github.com/voedger/voedger/pkg/appdef.QName
