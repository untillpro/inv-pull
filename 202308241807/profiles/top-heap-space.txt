File: airs-bp
Type: alloc_space
Time: Aug 24, 2023 at 6:09pm (UTC)
Showing nodes accounting for 557.04MB, 83.29% of 668.80MB total
Dropped 419 nodes (cum <= 3.34MB)
      flat  flat%   sum%        cum   cum%
   73.67MB 11.02% 11.02%    81.17MB 12.14%  encoding/json.(*decodeState).objectInterface
   64.52MB  9.65% 20.66%    90.02MB 13.46%  github.com/untillpro/dynobuffers.glob..func1
   32.50MB  4.86% 25.52%    32.50MB  4.86%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   31.60MB  4.72% 30.25%    36.13MB  5.40%  github.com/alecthomas/participle/v2/lexer.Upgrade
   29.08MB  4.35% 34.59%    29.08MB  4.35%  io.ReadAll
   25.53MB  3.82% 38.41%    26.03MB  3.89%  github.com/alecthomas/participle/v2.newTagLexer
   25.50MB  3.81% 42.22%    25.50MB  3.81%  github.com/google/flatbuffers/go.NewBuilder (inline)
   24.05MB  3.60% 45.82%    24.05MB  3.60%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
      14MB  2.09% 47.91%       14MB  2.09%  github.com/gocql/gocql.newFramer (inline)
      13MB  1.94% 49.86%       13MB  1.94%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
      12MB  1.79% 51.65%       13MB  1.94%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
      11MB  1.64% 53.30%    47.51MB  7.10%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
    9.50MB  1.42% 54.72%     9.50MB  1.42%  github.com/voedger/voedger/pkg/parser.iterate
    9.02MB  1.35% 56.07%    10.02MB  1.50%  github.com/gocql/gocql.(*framer).writeBytes (inline)
       9MB  1.35% 57.41%        9MB  1.35%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
    7.50MB  1.12% 58.53%     7.50MB  1.12%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
    7.50MB  1.12% 59.65%     7.50MB  1.12%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
       7MB  1.05% 60.70%    43.51MB  6.51%  github.com/voedger/voedger/pkg/istructsmem.newKey
    6.50MB  0.97% 61.67%     6.50MB  0.97%  bytes.growSlice
    6.50MB  0.97% 62.65%     6.50MB  0.97%  encoding/base64.(*Encoding).DecodeString
    6.50MB  0.97% 63.62%    20.51MB  3.07%  github.com/gocql/gocql.(*Conn).executeBatch
       6MB   0.9% 64.52%    21.01MB  3.14%  github.com/gocql/gocql.(*Conn).executeQuery
       6MB   0.9% 65.41%    35.01MB  5.23%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
       6MB   0.9% 66.31%        6MB   0.9%  reflect.New
       6MB   0.9% 67.21%        6MB   0.9%  time.NewTimer
       6MB   0.9% 68.10%        6MB   0.9%  encoding/json.unquote (inline)
       5MB  0.75% 68.85%        5MB  0.75%  github.com/gocql/gocql.(*Session).NewBatch
    4.50MB  0.67% 69.52%     4.50MB  0.67%  strings.(*Builder).grow (inline)
    4.50MB  0.67% 70.20%     4.50MB  0.67%  github.com/voedger/voedger/pkg/state.(*hostState).addStorage
    4.50MB  0.67% 70.87%       25MB  3.74%  github.com/voedger/voedger/pkg/istructsmem.newValue
    4.50MB  0.67% 71.54%       11MB  1.65%  bytes.(*Buffer).grow
       4MB   0.6% 72.14%        4MB   0.6%  reflect.mapassign_faststr
       4MB   0.6% 72.74%        4MB   0.6%  net/textproto.readMIMEHeader
       4MB   0.6% 73.34%        4MB   0.6%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
       4MB   0.6% 73.94%    26.52MB  3.97%  github.com/gocql/gocql.(*Conn).exec
    3.50MB  0.52% 74.46%        4MB   0.6%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
    3.50MB  0.52% 74.98%    88.67MB 13.26%  encoding/json.Unmarshal
    3.50MB  0.52% 75.51%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewPartKey
       3MB  0.45% 75.96%    34.50MB  5.16%  github.com/alecthomas/participle/v2.(*sequence).Parse
    2.50MB  0.37% 76.33%    63.54MB  9.50%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
    2.50MB  0.37% 76.70%    49.01MB  7.33%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
    2.50MB  0.37% 77.08%        6MB   0.9%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey
    2.50MB  0.37% 77.45%     3.50MB  0.52%  github.com/untillpro/dynobuffers.(*Buffer).getByUOffsetT
       2MB   0.3% 77.75%     4.50MB  0.67%  github.com/golang-jwt/jwt.(*SigningMethodHMAC).Verify
       2MB   0.3% 78.05%       43MB  6.43%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
       2MB   0.3% 78.35%        9MB  1.35%  net/http.(*conn).readRequest
       2MB   0.3% 78.65%     5.50MB  0.82%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).storeToBytes
       2MB   0.3% 78.95%    35.02MB  5.24%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
       2MB   0.3% 79.24%    34.50MB  5.16%  github.com/alecthomas/participle/v2.(*capture).Parse
       2MB   0.3% 79.54%        6MB   0.9%  github.com/voedger/voedger/pkg/istructsmem.storeRow
    1.50MB  0.22% 79.77%    24.52MB  3.67%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
    1.50MB  0.22% 79.99%     6.50MB  0.97%  net/http.readRequest
    1.50MB  0.22% 80.22%     6.50MB  0.97%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
    1.50MB  0.22% 80.44%        4MB   0.6%  github.com/untillpro/ibusmem.(*bus).SendRequest2
    1.50MB  0.22% 80.67%     4.50MB  0.67%  github.com/alecthomas/participle/v2.(*generatorContext).parseLiteral
    1.50MB  0.22% 80.89%    44.50MB  6.65%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
    1.50MB  0.22% 81.11%    89.17MB 13.33%  encoding/json.(*decodeState).object
       1MB  0.15% 81.26%    11.01MB  1.65%  github.com/gocql/gocql.(*Conn).recv
       1MB  0.15% 81.41%    36.01MB  5.38%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
       1MB  0.15% 81.56%     3.50MB  0.52%  github.com/voedger/voedger/pkg/processors/query.implRowsProcessorFactory
       1MB  0.15% 81.71%    45.74MB  6.84%  github.com/gorilla/mux.(*Router).ServeHTTP
       1MB  0.15% 81.86%    14.50MB  2.17%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
       1MB  0.15% 82.01%     3.55MB  0.53%  github.com/alecthomas/participle/v2.visit
       1MB  0.15% 82.16%    34.50MB  5.16%  github.com/alecthomas/participle/v2.(*strct).Parse
    0.54MB 0.081% 82.24%    50.17MB  7.50%  github.com/voedger/voedger/pkg/apps.Parse
    0.50MB 0.075% 82.32%    64.55MB  9.65%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
    0.50MB 0.075% 82.39%    34.50MB  5.16%  github.com/alecthomas/participle/v2.(*group).Parse
    0.50MB 0.075% 82.47%    37.58MB  5.62%  github.com/voedger/voedger/pkg/router.requestHandler.func1
    0.50MB 0.075% 82.54%    41.53MB  6.21%  github.com/alecthomas/participle/v2.(*structLexer).Peek
    0.50MB 0.075% 82.62%    27.50MB  4.11%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
    0.50MB 0.075% 82.69%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.lookup[...].func1
    0.50MB 0.075% 82.77%       27MB  4.04%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
    0.50MB 0.075% 82.84%    12.50MB  1.87%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
    0.50MB 0.075% 82.92%    64.55MB  9.65%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
    0.50MB 0.075% 82.99%    24.01MB  3.59%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
    0.50MB 0.075% 83.06%    64.55MB  9.65%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
    0.50MB 0.075% 83.14%    15.50MB  2.32%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
    0.50MB 0.075% 83.21%    11.50MB  1.72%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
    0.50MB 0.075% 83.29%       15MB  2.24%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0% 83.29%       10MB  1.50%  bytes.(*Buffer).Write
         0     0% 83.29%     5.50MB  0.82%  encoding/json.(*Decoder).Decode
         0     0% 83.29%     9.53MB  1.42%  encoding/json.(*decodeState).array
         0     0% 83.29%    68.16MB 10.19%  encoding/json.(*decodeState).arrayInterface
         0     0% 83.29%    89.17MB 13.33%  encoding/json.(*decodeState).unmarshal
         0     0% 83.29%    89.17MB 13.33%  encoding/json.(*decodeState).value
         0     0% 83.29%    68.16MB 10.19%  encoding/json.(*decodeState).valueInterface
         0     0% 83.29%        9MB  1.35%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 83.29%    31.50MB  4.71%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 83.29%    37.62MB  5.62%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 83.29%    38.12MB  5.70%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 83.29%       32MB  4.79%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 83.29%       32MB  4.79%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 83.29%       34MB  5.08%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 83.29%    19.51MB  2.92%  github.com/alecthomas/participle/v2.(*generatorContext).parseGroup
         0     0% 83.29%    16.01MB  2.39%  github.com/alecthomas/participle/v2.(*generatorContext).parseModifier
         0     0% 83.29%    64.55MB  9.65%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 83.29%    63.54MB  9.50%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 83.29%    17.51MB  2.62%  github.com/alecthomas/participle/v2.(*generatorContext).subparseGroup
         0     0% 83.29%    13.01MB  1.95%  github.com/alecthomas/participle/v2.(*structLexer).Next
         0     0% 83.29%    17.51MB  2.62%  github.com/alecthomas/participle/v2.Build[...]
         0     0% 83.29%    16.01MB  2.39%  github.com/alecthomas/participle/v2.MustBuild[...] (inline)
         0     0% 83.29%     4.50MB  0.67%  github.com/alecthomas/participle/v2.lexStruct
         0     0% 83.29%     3.55MB  0.53%  github.com/alecthomas/participle/v2.visit.func1
         0     0% 83.29%    20.51MB  3.07%  github.com/gocql/gocql.(*Batch).execute
         0     0% 83.29%        4MB   0.6%  github.com/gocql/gocql.(*Conn).awaitSchemaAgreement
         0     0% 83.29%    11.01MB  1.65%  github.com/gocql/gocql.(*Conn).serve
         0     0% 83.29%     3.50MB  0.52%  github.com/gocql/gocql.(*Iter).Scan
         0     0% 83.29%        4MB   0.6%  github.com/gocql/gocql.(*Iter).SliceMap
         0     0% 83.29%    21.51MB  3.22%  github.com/gocql/gocql.(*Query).Exec
         0     0% 83.29%    22.51MB  3.37%  github.com/gocql/gocql.(*Query).Iter
         0     0% 83.29%    21.01MB  3.14%  github.com/gocql/gocql.(*Query).execute
         0     0% 83.29%    25.01MB  3.74%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 83.29%     3.50MB  0.52%  github.com/gocql/gocql.(*Session).Query
         0     0% 83.29%    25.01MB  3.74%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 83.29%    22.51MB  3.37%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 83.29%     3.51MB  0.52%  github.com/gocql/gocql.(*framer).writeBatchFrame
         0     0% 83.29%     7.51MB  1.12%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 83.29%     7.51MB  1.12%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 83.29%    45.52MB  6.81%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 83.29%    45.52MB  6.81%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 83.29%    47.52MB  7.11%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 83.29%        4MB   0.6%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0% 83.29%     3.51MB  0.52%  github.com/gocql/gocql.(*writeBatchFrame).buildFrame
         0     0% 83.29%     7.51MB  1.12%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 83.29%     3.50MB  0.52%  github.com/gocql/gocql.Unmarshal
         0     0% 83.29%     3.50MB  0.52%  github.com/gocql/gocql.scanColumn
         0     0% 83.29%    22.51MB  3.37%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0% 83.29%    22.51MB  3.37%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0% 83.29%     3.50MB  0.52%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 83.29%    22.51MB  3.37%  github.com/golang-jwt/jwt.Parse
         0     0% 83.29%       12MB  1.79%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 83.29%       10MB  1.50%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 83.29%    32.50MB  4.86%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 83.29%     7.50MB  1.12%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 83.29%       12MB  1.79%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 83.29%       12MB  1.79%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 83.29%       10MB  1.50%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 83.29%    42.30MB  6.33%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 83.29%    33.66MB  5.03%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 83.29%     4.02MB   0.6%  github.com/untillpro/airs-bp3/packages/air.Provide
         0     0% 83.29%     5.50MB  0.82%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0% 83.29%     5.50MB  0.82%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 83.29%        5MB  0.75%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyOrders
         0     0% 83.29%        4MB   0.6%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 83.29%     4.50MB  0.67%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0% 83.29%        4MB   0.6%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 83.29%    16.02MB  2.40%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 83.29%    16.01MB  2.39%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 83.29%        4MB   0.6%  github.com/untillpro/airs-bp3/packages/air/ordersdates.glob..func1
         0     0% 83.29%     5.50MB  0.82%  github.com/untillpro/airs-bp3/packages/air/pbilldates.glob..func1
         0     0% 83.29%       11MB  1.65%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0% 83.29%       11MB  1.65%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 83.29%        9MB  1.35%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 83.29%    26.50MB  3.96%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 83.29%    26.50MB  3.96%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 83.29%       18MB  2.69%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 83.29%    26.63MB  3.98%  github.com/untillpro/airs-bp3/packages/untill.Provide (inline)
         0     0% 83.29%     8.02MB  1.20%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 83.29%    24.05MB  3.60%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 83.29%    36.51MB  5.46%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 83.29%    36.51MB  5.46%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 83.29%    36.51MB  5.46%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 83.29%        4MB   0.6%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0% 83.29%     3.50MB  0.52%  github.com/untillpro/dynobuffers.(*Buffer).getByField
         0     0% 83.29%    24.05MB  3.60%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 83.29%    90.02MB 13.46%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 83.29%       12MB  1.79%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 83.29%    90.02MB 13.46%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 83.29%       12MB  1.79%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/apps/sys/blobber.Provide.func1
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/apps/sys/router.Provide.func1
         0     0% 83.29%     9.50MB  1.42%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 83.29%    24.01MB  3.59%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 83.29%    35.02MB  5.24%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 83.29%     5.07MB  0.76%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).GetNewRawEventBuilder
         0     0% 83.29%    18.68MB  2.79%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 83.29%    14.51MB  2.17%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).ReadPLog
         0     0% 83.29%       12MB  1.79%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 83.29%       12MB  1.79%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 83.29%        9MB  1.35%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 83.29%        9MB  1.35%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 83.29%       10MB  1.50%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 83.29%     6.58MB  0.98%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 83.29%       16MB  2.39%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0% 83.29%    43.51MB  6.51%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 83.29%    13.50MB  2.02%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 83.29%       18MB  2.69%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 83.29%    32.03MB  4.79%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 83.29%        7MB  1.05%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 83.29%    40.51MB  6.06%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 83.29%       10MB  1.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 83.29%     5.50MB  0.82%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 83.29%       11MB  1.64%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 83.29%       11MB  1.64%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 83.29%    11.50MB  1.72%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 83.29%     8.50MB  1.27%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 83.29%    40.51MB  6.06%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 83.29%        7MB  1.05%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 83.29%    16.50MB  2.47%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 83.29%       12MB  1.79%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 83.29%       11MB  1.64%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey.func1
         0     0% 83.29%    22.02MB  3.29%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 83.29%     6.51MB  0.97%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0% 83.29%     9.01MB  1.35%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0% 83.29%    23.02MB  3.44%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 83.29%     7.02MB  1.05%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 83.29%       20MB  2.99%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 83.29%    11.52MB  1.72%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 83.29%    90.02MB 13.46%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 83.29%    70.01MB 10.47%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 83.29%       20MB  2.99%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 83.29%        4MB   0.6%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0% 83.29%       11MB  1.64%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 83.29%    14.01MB  2.09%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 83.29%       20MB  2.99%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.newEventBuilder (inline)
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.newRawEventBuilder
         0     0% 83.29%    23.02MB  3.44%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 83.29%        4MB   0.6%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 83.29%        4MB   0.6%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 83.29%        6MB   0.9%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 83.29%    29.01MB  4.34%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 83.29%    29.01MB  4.34%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0% 83.29%    10.50MB  1.57%  github.com/voedger/voedger/pkg/parser.(*SchemaAST).Iterate
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.(*analyseCtx).table
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/parser.(*buildContext).fillTable
         0     0% 83.29%        4MB   0.6%  github.com/voedger/voedger/pkg/parser.(*buildContext).table
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.MergePackageSchemas (inline)
         0     0% 83.29%    50.63MB  7.57%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.analyse
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.analyse.func1
         0     0% 83.29%     9.50MB  1.42%  github.com/voedger/voedger/pkg/parser.iterate.func1
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.lookup[...]
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/parser.mergePackageSchemasImpl
         0     0% 83.29%    55.13MB  8.24%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/parser.resolveTable
         0     0% 83.29%        6MB   0.9%  github.com/voedger/voedger/pkg/parser.resolve[...]
         0     0% 83.29%    66.51MB  9.94%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 83.29%   403.75MB 60.37%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 83.29%   395.25MB 59.10%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 83.29%        8MB  1.20%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0% 83.29%       16MB  2.39%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 83.29%    83.51MB 12.49%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 83.29%   402.75MB 60.22%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 83.29%    38.51MB  5.76%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getRawEventBuilder
         0     0% 83.29%    18.18MB  2.72%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0% 83.29%     4.01MB   0.6%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0% 83.29%       12MB  1.79%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 83.29%     8.50MB  1.27%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 83.29%    32.03MB  4.79%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 83.29%    23.51MB  3.52%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 83.29%    14.51MB  2.17%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 83.29%    81.67MB 12.21%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func13
         0     0% 83.29%    10.50MB  1.57%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 83.29%     5.50MB  0.82%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func9
         0     0% 83.29%    27.51MB  4.11%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 83.29%     6.50MB  0.97%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0% 83.29%     5.50MB  0.82%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0% 83.29%    65.01MB  9.72%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 83.29%       16MB  2.39%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 83.29%       16MB  2.39%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 83.29%    39.51MB  5.91%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 83.29%       31MB  4.64%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 83.29%    41.08MB  6.14%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 83.29%    29.08MB  4.35%  github.com/voedger/voedger/pkg/router.createRequest
         0     0% 83.29%     8.50MB  1.27%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 83.29%        8MB  1.20%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
         0     0% 83.29%        8MB  1.20%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 83.29%    28.50MB  4.26%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 83.29%    13.50MB  2.02%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 83.29%       31MB  4.64%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 83.29%    25.50MB  3.81%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 83.29%    36.51MB  5.46%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 83.29%       10MB  1.50%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 83.29%    14.50MB  2.17%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 83.29%    24.52MB  3.67%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 83.29%    24.52MB  3.67%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 83.29%     6.51MB  0.97%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 83.29%    16.50MB  2.47%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 83.29%       10MB  1.50%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 83.29%       11MB  1.64%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 83.29%     5.50MB  0.82%  github.com/voedger/voedger/pkg/state.implProvideQueryProcessorState
         0     0% 83.29%    17.02MB  2.55%  github.com/voedger/voedger/pkg/sys.Provide
         0     0% 83.29%     5.50MB  0.82%  github.com/voedger/voedger/pkg/sys/authnz/workspace.Provide
         0     0% 83.29%        5MB  0.75%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/sys/invite.Provide
         0     0% 83.29%       17MB  2.54%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/sys/uniques.provideEventUniqueValidator.func1
         0     0% 83.29%     3.50MB  0.52%  github.com/voedger/voedger/pkg/sys/uniques.provideEventUniqueValidator.func1.1
         0     0% 83.29%    52.80MB  7.90%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 83.29%    44.80MB  6.70%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 83.29%    46.17MB  6.90%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 83.29%     9.50MB  1.42%  github.com/voedger/voedger/pkg/vvm.buildSchemasASTs
         0     0% 83.29%     5.05MB  0.75%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 83.29%    11.50MB  1.72%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 83.29%    44.67MB  6.68%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 83.29%    54.74MB  8.18%  net/http.(*conn).serve
         0     0% 83.29%    42.23MB  6.31%  net/http.HandlerFunc.ServeHTTP
         0     0% 83.29%    45.74MB  6.84%  net/http.serverHandler.ServeHTTP
         0     0% 83.29%        4MB   0.6%  net/textproto.(*Reader).ReadMIMEHeader (inline)
         0     0% 83.29%        4MB   0.6%  reflect.Value.SetMapIndex
         0     0% 83.29%     4.50MB  0.67%  strings.(*Builder).Grow (inline)
         0     0% 83.29%    93.02MB 13.91%  sync.(*Pool).Get
