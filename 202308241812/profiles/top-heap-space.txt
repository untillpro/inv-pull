File: airs-bp
Type: alloc_space
Time: Aug 24, 2023 at 6:15pm (UTC)
Showing nodes accounting for 521MB, 82.70% of 629.95MB total
Dropped 380 nodes (cum <= 3.15MB)
      flat  flat%   sum%        cum   cum%
   67.67MB 10.74% 10.74%    76.67MB 12.17%  encoding/json.(*decodeState).objectInterface
   63.02MB 10.00% 20.75%    85.02MB 13.50%  github.com/untillpro/dynobuffers.glob..func1
   30.58MB  4.85% 25.60%    30.58MB  4.85%  io.ReadAll
   30.50MB  4.84% 30.44%    30.50MB  4.84%  github.com/google/flatbuffers/go.(*Builder).growByteBuffer (inline)
   29.53MB  4.69% 35.13%    30.03MB  4.77%  github.com/alecthomas/participle/v2.newTagLexer
   26.01MB  4.13% 39.26%    28.03MB  4.45%  github.com/alecthomas/participle/v2/lexer.Upgrade
      22MB  3.49% 42.75%       22MB  3.49%  github.com/google/flatbuffers/go.NewBuilder (inline)
   18.03MB  2.86% 45.62%    18.03MB  2.86%  github.com/untillpro/dynobuffers.(*Buffer).prepareModifiedFields (inline)
   11.50MB  1.83% 47.44%    11.50MB  1.83%  github.com/alecthomas/participle/v2.(*parseContext).Branch (inline)
      11MB  1.75% 49.19%       11MB  1.75%  github.com/alecthomas/participle/v2.(*parseContext).Defer (inline)
   10.50MB  1.67% 50.85%    10.50MB  1.67%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
   10.50MB  1.67% 52.52%    10.50MB  1.67%  github.com/gocql/gocql.newFramer (inline)
      10MB  1.59% 54.11%       10MB  1.59%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals.func1
    8.51MB  1.35% 55.46%     8.51MB  1.35%  bytes.growSlice
       8MB  1.27% 56.73%        8MB  1.27%  encoding/base64.(*Encoding).DecodeString
       8MB  1.27% 58.00%        9MB  1.43%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
    7.50MB  1.19% 59.19%     7.50MB  1.19%  reflect.mapassign_faststr
    7.50MB  1.19% 60.38%    42.51MB  6.75%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
    7.50MB  1.19% 61.57%     7.50MB  1.19%  github.com/voedger/voedger/pkg/parser.iterate
       7MB  1.11% 62.68%    27.01MB  4.29%  github.com/voedger/voedger/pkg/istructsmem.newValue
       7MB  1.11% 63.80%        7MB  1.11%  encoding/json.unquote (inline)
    6.50MB  1.03% 64.83%    40.51MB  6.43%  github.com/voedger/voedger/pkg/istructsmem.newKey
    6.50MB  1.03% 65.86%    88.17MB 14.00%  encoding/json.Unmarshal
    5.50MB  0.87% 66.73%     5.50MB  0.87%  time.NewTimer
       5MB  0.79% 67.53%        5MB  0.79%  net/textproto.readMIMEHeader
       5MB  0.79% 68.32%        5MB  0.79%  github.com/gocql/gocql.(*Session).NewBatch
       5MB  0.79% 69.11%    19.01MB  3.02%  github.com/gocql/gocql.(*Conn).executeBatch
    4.50MB  0.71% 69.83%     4.50MB  0.71%  github.com/google/flatbuffers/go.(*Builder).StartObject (inline)
    4.50MB  0.71% 70.54%     4.50MB  0.71%  github.com/gocql/gocql.(*writeCoalescer).writeContext
    4.50MB  0.71% 71.26%    37.01MB  5.87%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
       4MB  0.64% 71.89%     5.51MB  0.87%  github.com/gocql/gocql.(*framer).writeBytes (inline)
       4MB  0.64% 72.53%        4MB  0.64%  net/textproto.MIMEHeader.Set (inline)
       4MB  0.64% 73.16%       32MB  5.08%  github.com/alecthomas/participle/v2.(*sequence).Parse
       4MB  0.64% 73.80%    24.01MB  3.81%  github.com/gocql/gocql.(*Conn).exec
       4MB  0.64% 74.43%    12.51MB  1.99%  bytes.(*Buffer).grow
    3.50MB  0.56% 74.99%     3.50MB  0.56%  strings.(*Builder).grow (inline)
    3.50MB  0.56% 75.54%    19.52MB  3.10%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
    3.50MB  0.56% 76.10%     3.50MB  0.56%  net/http.(*Request).WithContext (inline)
    3.50MB  0.56% 76.66%    17.01MB  2.70%  github.com/gocql/gocql.(*Conn).executeQuery
       3MB  0.48% 77.13%        9MB  1.43%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
       3MB  0.48% 77.61%    11.50MB  1.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
       3MB  0.48% 78.08%    90.17MB 14.31%  encoding/json.(*decodeState).object
    2.50MB   0.4% 78.48%    44.50MB  7.06%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
    2.50MB   0.4% 78.88%     5.50MB  0.87%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeViewClustKey
    2.06MB  0.33% 79.21%     3.56MB  0.56%  github.com/alecthomas/participle/v2.validate.func1
       2MB  0.32% 79.52%        9MB  1.43%  net/http.(*conn).readRequest
       2MB  0.32% 79.84%    30.51MB  4.84%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
       2MB  0.32% 80.16%       17MB  2.70%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
    1.50MB  0.24% 80.40%    33.01MB  5.24%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
    1.50MB  0.24% 80.63%       46MB  7.30%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
       1MB  0.16% 80.79%        7MB  1.11%  net/http.readRequest
       1MB  0.16% 80.95%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseCapture
       1MB  0.16% 81.11%    49.51MB  7.86%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
       1MB  0.16% 81.27%        4MB  0.64%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
       1MB  0.16% 81.43%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseSequence
       1MB  0.16% 81.59%     3.56MB  0.56%  github.com/alecthomas/participle/v2.visit
       1MB  0.16% 81.75%     5.51MB  0.87%  github.com/voedger/voedger/pkg/istructsmem.storeRow
    0.54MB 0.086% 81.83%    45.58MB  7.24%  github.com/voedger/voedger/pkg/apps.Parse
    0.50MB 0.079% 81.91%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseDisjunction
    0.50MB 0.079% 81.99%    30.51MB  4.84%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
    0.50MB 0.079% 82.07%       31MB  4.92%  github.com/alecthomas/participle/v2.(*capture).Parse
    0.50MB 0.079% 82.15%       19MB  3.02%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
    0.50MB 0.079% 82.23%    33.51MB  5.32%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
    0.50MB 0.079% 82.31%        5MB  0.79%  github.com/voedger/voedger/pkg/processors/command.(*opSendResponse).DoSync
    0.50MB 0.079% 82.39%    22.51MB  3.57%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
    0.50MB 0.079% 82.47%     4.50MB  0.71%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
    0.50MB 0.079% 82.55%    26.51MB  4.21%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
    0.50MB 0.079% 82.63%    31.08MB  4.93%  github.com/voedger/voedger/pkg/router.createRequest
    0.50MB 0.079% 82.70%       19MB  3.02%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0% 82.70%     9.51MB  1.51%  bytes.(*Buffer).Write
         0     0% 82.70%    10.50MB  1.67%  encoding/json.(*Decoder).Decode
         0     0% 82.70%    13.02MB  2.07%  encoding/json.(*decodeState).array
         0     0% 82.70%    67.16MB 10.66%  encoding/json.(*decodeState).arrayInterface
         0     0% 82.70%    89.67MB 14.23%  encoding/json.(*decodeState).unmarshal
         0     0% 82.70%    90.17MB 14.31%  encoding/json.(*decodeState).value
         0     0% 82.70%    67.66MB 10.74%  encoding/json.(*decodeState).valueInterface
         0     0% 82.70%    10.50MB  1.67%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0% 82.70%       28MB  4.45%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseFromLexer
         0     0% 82.70%    33.02MB  5.24%  github.com/alecthomas/participle/v2.(*Parser[...]).ParseString
         0     0% 82.70%    34.52MB  5.48%  github.com/alecthomas/participle/v2.(*Parser[...]).parse
         0     0% 82.70%       30MB  4.76%  github.com/alecthomas/participle/v2.(*Parser[...]).parseInto
         0     0% 82.70%       29MB  4.60%  github.com/alecthomas/participle/v2.(*Parser[...]).parseOne
         0     0% 82.70%       31MB  4.92%  github.com/alecthomas/participle/v2.(*disjunction).Parse
         0     0% 82.70%    19.02MB  3.02%  github.com/alecthomas/participle/v2.(*generatorContext).parseGroup
         0     0% 82.70%    13.51MB  2.14%  github.com/alecthomas/participle/v2.(*generatorContext).parseModifier
         0     0% 82.70%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseTerm
         0     0% 82.70%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseTermNoModifiers
         0     0% 82.70%    56.04MB  8.90%  github.com/alecthomas/participle/v2.(*generatorContext).parseType
         0     0% 82.70%    19.02MB  3.02%  github.com/alecthomas/participle/v2.(*generatorContext).subparseGroup
         0     0% 82.70%    31.50MB  5.00%  github.com/alecthomas/participle/v2.(*group).Parse
         0     0% 82.70%       32MB  5.08%  github.com/alecthomas/participle/v2.(*strct).Parse
         0     0% 82.70%        7MB  1.11%  github.com/alecthomas/participle/v2.(*structLexer).Next
         0     0% 82.70%    41.54MB  6.59%  github.com/alecthomas/participle/v2.(*structLexer).Peek
         0     0% 82.70%    18.51MB  2.94%  github.com/alecthomas/participle/v2.Build[...]
         0     0% 82.70%    16.01MB  2.54%  github.com/alecthomas/participle/v2.MustBuild[...] (inline)
         0     0% 82.70%        4MB  0.64%  github.com/alecthomas/participle/v2.lexStruct
         0     0% 82.70%     3.56MB  0.56%  github.com/alecthomas/participle/v2.visit.func1
         0     0% 82.70%        5MB  0.79%  github.com/gocql/gocql.(*Batch).attempt
         0     0% 82.70%    19.01MB  3.02%  github.com/gocql/gocql.(*Batch).execute
         0     0% 82.70%     7.51MB  1.19%  github.com/gocql/gocql.(*Conn).recv
         0     0% 82.70%     7.01MB  1.11%  github.com/gocql/gocql.(*Conn).serve
         0     0% 82.70%    21.51MB  3.41%  github.com/gocql/gocql.(*Query).Exec
         0     0% 82.70%    22.01MB  3.49%  github.com/gocql/gocql.(*Query).Iter
         0     0% 82.70%        4MB  0.64%  github.com/gocql/gocql.(*Query).attempt
         0     0% 82.70%    17.01MB  2.70%  github.com/gocql/gocql.(*Query).execute
         0     0% 82.70%    25.01MB  3.97%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0% 82.70%    25.01MB  3.97%  github.com/gocql/gocql.(*Session).executeBatch
         0     0% 82.70%    22.01MB  3.49%  github.com/gocql/gocql.(*Session).executeQuery
         0     0% 82.70%        4MB  0.64%  github.com/gocql/gocql.(*framer).writeBatchFrame
         0     0% 82.70%     3.50MB  0.56%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0% 82.70%     3.50MB  0.56%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0% 82.70%    45.02MB  7.15%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0% 82.70%    45.02MB  7.15%  github.com/gocql/gocql.(*queryExecutor).do
         0     0% 82.70%    47.02MB  7.46%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0% 82.70%        9MB  1.43%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0% 82.70%        4MB  0.64%  github.com/gocql/gocql.(*writeBatchFrame).buildFrame
         0     0% 82.70%     3.50MB  0.56%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0% 82.70%    24.01MB  3.81%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0% 82.70%    19.51MB  3.10%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0% 82.70%    24.01MB  3.81%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0% 82.70%        5MB  0.79%  github.com/golang-jwt/jwt.DecodeSegment (inline)
         0     0% 82.70%    24.01MB  3.81%  github.com/golang-jwt/jwt.Parse
         0     0% 82.70%     9.50MB  1.51%  github.com/google/flatbuffers/go.(*Builder).EndObject (inline)
         0     0% 82.70%    11.50MB  1.83%  github.com/google/flatbuffers/go.(*Builder).Finish (inline)
         0     0% 82.70%    30.50MB  4.84%  github.com/google/flatbuffers/go.(*Builder).Prep
         0     0% 82.70%     6.50MB  1.03%  github.com/google/flatbuffers/go.(*Builder).PrependInt64
         0     0% 82.70%        8MB  1.27%  github.com/google/flatbuffers/go.(*Builder).PrependVOffsetT
         0     0% 82.70%     9.50MB  1.51%  github.com/google/flatbuffers/go.(*Builder).WriteVtable
         0     0% 82.70%    11.50MB  1.83%  github.com/google/flatbuffers/go.(*Builder).finish
         0     0% 82.70%    50.24MB  7.98%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0% 82.70%    37.10MB  5.89%  github.com/untillpro/airs-bp3/airsbp3.buildVVM
         0     0% 82.70%    32.05MB  5.09%  github.com/untillpro/airs-bp3/apps/untill/airsbp.ProvideAirsBP.func1
         0     0% 82.70%        4MB  0.64%  github.com/untillpro/airs-bp3/packages/air.Provide
         0     0% 82.70%        6MB  0.95%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0% 82.70%     6.50MB  1.03%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0% 82.70%     5.50MB  0.87%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyOrders
         0     0% 82.70%     3.50MB  0.56%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0% 82.70%        5MB  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyWaiters
         0     0% 82.70%        5MB  0.79%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0% 82.70%    30.51MB  4.84%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0% 82.70%    13.01MB  2.07%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0% 82.70%    13.51MB  2.15%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdPbill
         0     0% 82.70%     3.50MB  0.56%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
         0     0% 82.70%     3.50MB  0.56%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0% 82.70%        8MB  1.27%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0% 82.70%        8MB  1.27%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0% 82.70%        5MB  0.79%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0% 82.70%    33.51MB  5.32%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0% 82.70%    33.51MB  5.32%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0% 82.70%       20MB  3.18%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0% 82.70%    25.05MB  3.98%  github.com/untillpro/airs-bp3/packages/untill.Provide (inline)
         0     0% 82.70%     6.51MB  1.03%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0% 82.70%    18.03MB  2.86%  github.com/untillpro/dynobuffers.(*Buffer).Set (inline)
         0     0% 82.70%       35MB  5.56%  github.com/untillpro/dynobuffers.(*Buffer).ToBytes
         0     0% 82.70%       35MB  5.56%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
         0     0% 82.70%       35MB  5.56%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer
         0     0% 82.70%     4.50MB  0.71%  github.com/untillpro/dynobuffers.(*Buffer).encodeBuffer.func1
         0     0% 82.70%    18.03MB  2.86%  github.com/untillpro/dynobuffers.(*Buffer).set
         0     0% 82.70%    85.02MB 13.50%  github.com/untillpro/dynobuffers.NewBuffer
         0     0% 82.70%    10.50MB  1.67%  github.com/untillpro/dynobuffers.encodeFixedSizeValue
         0     0% 82.70%    85.02MB 13.50%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0% 82.70%     3.50MB  0.56%  github.com/untillpro/ibusmem.(*bus).SendRequest2
         0     0% 82.70%     8.50MB  1.35%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0% 82.70%     5.02MB   0.8%  github.com/voedger/voedger/pkg/apps/sys/blobber.Provide.func1
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/apps/sys/registry.Provide.func1
         0     0% 82.70%       11MB  1.75%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0% 82.70%    24.01MB  3.81%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0% 82.70%    37.51MB  5.95%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0% 82.70%     4.51MB  0.72%  github.com/voedger/voedger/pkg/istoragecache.(*implCachingAppStorageProvider).AppStorage
         0     0% 82.70%        5MB  0.79%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).GetNewRawEventBuilder
         0     0% 82.70%    26.51MB  4.21%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0% 82.70%     5.50MB  0.87%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).GetSingleton
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0% 82.70%     9.50MB  1.51%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
         0     0% 82.70%     4.03MB  0.64%  github.com/voedger/voedger/pkg/istructsmem.(*appStructsProviderType).AppStructs
         0     0% 82.70%    40.51MB  6.43%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
         0     0% 82.70%       15MB  2.38%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0% 82.70%       15MB  2.38%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).storeViewRecord
         0     0% 82.70%    26.53MB  4.21%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0% 82.70%        6MB  0.95%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).build
         0     0% 82.70%    33.51MB  5.32%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0% 82.70%     9.50MB  1.51%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0% 82.70%        7MB  1.11%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
         0     0% 82.70%     8.50MB  1.35%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0% 82.70%     8.50MB  1.35%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0% 82.70%    10.50MB  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0% 82.70%     7.50MB  1.19%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0% 82.70%    33.51MB  5.32%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0% 82.70%        6MB  0.95%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).build
         0     0% 82.70%     5.50MB  0.87%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0% 82.70%     7.01MB  1.11%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).storeToBytes
         0     0% 82.70%    13.50MB  2.14%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).Equals
         0     0% 82.70%       14MB  2.22%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).build
         0     0% 82.70%        7MB  1.11%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).storeToBytes
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/istructsmem.(*queryFunction).Exec
         0     0% 82.70%    16.02MB  2.54%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0% 82.70%     3.51MB  0.56%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutFloat64
         0     0% 82.70%     7.01MB  1.11%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutNumber
         0     0% 82.70%    18.02MB  2.86%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0% 82.70%     6.01MB  0.95%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom.func1
         0     0% 82.70%    18.50MB  2.94%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0% 82.70%     6.51MB  1.03%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
         0     0% 82.70%    85.02MB 13.50%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0% 82.70%    66.51MB 10.56%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
         0     0% 82.70%    18.50MB  2.94%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/istructsmem.(*updateRecType).build
         0     0% 82.70%        9MB  1.43%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).Build
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0% 82.70%    13.51MB  2.14%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
         0     0% 82.70%    18.50MB  2.94%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0% 82.70%        5MB  0.79%  github.com/voedger/voedger/pkg/istructsmem.newEventBuilder (inline)
         0     0% 82.70%        5MB  0.79%  github.com/voedger/voedger/pkg/istructsmem.newRawEventBuilder
         0     0% 82.70%    16.02MB  2.54%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0% 82.70%     6.01MB  0.95%  github.com/voedger/voedger/pkg/istructsmem.storeElement
         0     0% 82.70%     7.01MB  1.11%  github.com/voedger/voedger/pkg/istructsmem.storeEvent
         0     0% 82.70%     6.01MB  0.95%  github.com/voedger/voedger/pkg/istructsmem.storeEventArguments
         0     0% 82.70%     7.01MB  1.11%  github.com/voedger/voedger/pkg/istructsmem/internal/utils.SafeWriteBuf
         0     0% 82.70%    33.51MB  5.32%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/itokensjwt.buildGenericPayload
         0     0% 82.70%     8.50MB  1.35%  github.com/voedger/voedger/pkg/parser.(*SchemaAST).Iterate
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.(*buildContext).addFieldRefToDef
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/parser.(*buildContext).addTableItems
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/parser.(*buildContext).build
         0     0% 82.70%     5.50MB  0.87%  github.com/voedger/voedger/pkg/parser.(*buildContext).fillTable
         0     0% 82.70%     5.50MB  0.87%  github.com/voedger/voedger/pkg/parser.(*buildContext).table
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/parser.(*buildContext).tables
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/parser.(*buildContext).tables.func1
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.BuildAppDefs (inline)
         0     0% 82.70%    47.03MB  7.47%  github.com/voedger/voedger/pkg/parser.ParseFile
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.buildAppDefs
         0     0% 82.70%     7.50MB  1.19%  github.com/voedger/voedger/pkg/parser.iterate.func1
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/parser.iterateStmt[...]
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/parser.iterateStmt[...].func1
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.lookup[...]
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.lookup[...].func1
         0     0% 82.70%    50.54MB  8.02%  github.com/voedger/voedger/pkg/parser.parseImpl
         0     0% 82.70%        4MB  0.63%  github.com/voedger/voedger/pkg/parser.resolveTable
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/parser.resolve[...]
         0     0% 82.70%    57.01MB  9.05%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0% 82.70%   388.36MB 61.65%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0% 82.70%   381.86MB 60.62%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0% 82.70%       17MB  2.70%  github.com/voedger/voedger/pkg/pipeline.p_flush
         0     0% 82.70%    76.51MB 12.15%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0% 82.70%   386.85MB 61.41%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0% 82.70%    40.01MB  6.35%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0% 82.70%        5MB  0.79%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).getRawEventBuilder
         0     0% 82.70%     5.51MB  0.87%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0% 82.70%     7.50MB  1.19%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0% 82.70%    26.53MB  4.21%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0% 82.70%    22.51MB  3.57%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0% 82.70%       10MB  1.59%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0% 82.70%    76.67MB 12.17%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func14
         0     0% 82.70%     9.50MB  1.51%  github.com/voedger/voedger/pkg/processors/query.newQueryProcessorPipeline.func3
         0     0% 82.70%    20.50MB  3.25%  github.com/voedger/voedger/pkg/processors/query.operator.func1
         0     0% 82.70%    56.01MB  8.89%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0% 82.70%       17MB  2.70%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).Flush
         0     0% 82.70%       17MB  2.70%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).flush
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).savePosition
         0     0% 82.70%    43.51MB  6.91%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0% 82.70%       34MB  5.40%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0% 82.70%    42.58MB  6.76%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0% 82.70%    38.58MB  6.12%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0% 82.70%        6MB  0.95%  github.com/voedger/voedger/pkg/state.(*bundleImpl).get
         0     0% 82.70%     7.50MB  1.19%  github.com/voedger/voedger/pkg/state.(*bundleImpl).put
         0     0% 82.70%     7.50MB  1.19%  github.com/voedger/voedger/pkg/state.(*bundledHostState).ApplyIntents
         0     0% 82.70%       23MB  3.65%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0% 82.70%    12.50MB  1.98%  github.com/voedger/voedger/pkg/state.(*bundledHostState).FlushBundles
         0     0% 82.70%       34MB  5.40%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0% 82.70%    33.01MB  5.24%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0% 82.70%    33.51MB  5.32%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0% 82.70%       13MB  2.06%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0% 82.70%       17MB  2.70%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0% 82.70%    19.52MB  3.10%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0% 82.70%    19.52MB  3.10%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0% 82.70%     3.51MB  0.56%  github.com/voedger/voedger/pkg/state.(*recordsValueBuilder).PutFloat64
         0     0% 82.70%    13.50MB  2.14%  github.com/voedger/voedger/pkg/state.(*viewRecordsKeyBuilder).Equals
         0     0% 82.70%       14MB  2.22%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0% 82.70%        9MB  1.43%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).Build (inline)
         0     0% 82.70%        9MB  1.43%  github.com/voedger/voedger/pkg/state.(*viewRecordsValueBuilder).BuildValue
         0     0% 82.70%    16.52MB  2.62%  github.com/voedger/voedger/pkg/sys.Provide
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/sys/authnz.Provide (inline)
         0     0% 82.70%        4MB  0.64%  github.com/voedger/voedger/pkg/sys/authnz/workspace.Provide
         0     0% 82.70%     4.50MB  0.71%  github.com/voedger/voedger/pkg/sys/authnz/workspace.qcwbnQryExec
         0     0% 82.70%       12MB  1.91%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0% 82.70%     4.01MB  0.64%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0% 82.70%    48.10MB  7.64%  github.com/voedger/voedger/pkg/vvm.ProvideCluster
         0     0% 82.70%    39.60MB  6.29%  github.com/voedger/voedger/pkg/vvm.ProvideVVM
         0     0% 82.70%    42.57MB  6.76%  github.com/voedger/voedger/pkg/vvm.VVMAppsBuilder.Build
         0     0% 82.70%     6.50MB  1.03%  github.com/voedger/voedger/pkg/vvm.buildSchemasASTs
         0     0% 82.70%     3.52MB  0.56%  github.com/voedger/voedger/pkg/vvm.provideAppsWSAmounts
         0     0% 82.70%     3.50MB  0.56%  github.com/voedger/voedger/pkg/vvm.provideIBus.func1
         0     0% 82.70%    11.50MB  1.83%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0% 82.70%    41.07MB  6.52%  github.com/voedger/voedger/pkg/vvm.provideVVMApps (inline)
         0     0% 82.70%    59.24MB  9.40%  net/http.(*conn).serve
         0     0% 82.70%    43.74MB  6.94%  net/http.HandlerFunc.ServeHTTP
         0     0% 82.70%        4MB  0.64%  net/http.Header.Set (inline)
         0     0% 82.70%    50.24MB  7.98%  net/http.serverHandler.ServeHTTP
         0     0% 82.70%        5MB  0.79%  net/textproto.(*Reader).ReadMIMEHeader (inline)
         0     0% 82.70%     7.50MB  1.19%  reflect.Value.SetMapIndex
         0     0% 82.70%     3.50MB  0.56%  strings.(*Builder).Grow (inline)
         0     0% 82.70%    86.02MB 13.65%  sync.(*Pool).Get
