File: airs-bp
Type: cpu
Time: Aug 26, 2023 at 7:07pm (UTC)
Duration: 10s, Total samples = 1.20s (12.00%)
Showing nodes accounting for 1.20s, 100% of 1.20s total
      flat  flat%   sum%        cum   cum%
     0.12s 10.00% 10.00%      0.12s 10.00%  runtime.futex
     0.11s  9.17% 19.17%      0.11s  9.17%  runtime/internal/syscall.Syscall6
     0.06s  5.00% 24.17%      0.07s  5.83%  runtime.mapaccess2_faststr
     0.05s  4.17% 28.33%      0.05s  4.17%  runtime.nanotime (inline)
     0.05s  4.17% 32.50%      0.05s  4.17%  runtime.nextFreeFast (inline)
     0.04s  3.33% 35.83%      0.21s 17.50%  runtime.mallocgc
     0.03s  2.50% 38.33%      0.03s  2.50%  runtime.memclrNoHeapPointers
     0.02s  1.67% 40.00%      0.03s  2.50%  encoding/json.checkValid
     0.02s  1.67% 41.67%      0.22s 18.33%  runtime.findRunnable
     0.02s  1.67% 43.33%      0.04s  3.33%  runtime.getitab
     0.02s  1.67% 45.00%      0.06s  5.00%  runtime.goready
     0.02s  1.67% 46.67%      0.02s  1.67%  runtime.heapBits.nextFast (inline)
     0.02s  1.67% 48.33%      0.05s  4.17%  runtime.heapBitsSetType
     0.02s  1.67% 50.00%      0.02s  1.67%  runtime.memmove
     0.02s  1.67% 51.67%      0.02s  1.67%  runtime.write1
     0.02s  1.67% 53.33%      0.02s  1.67%  runtime.writeHeapBits.flush
     0.01s  0.83% 54.17%      0.01s  0.83%  aeshashbody
     0.01s  0.83% 55.00%      0.01s  0.83%  encoding/json.(*decodeState).rescanLiteral
     0.01s  0.83% 55.83%      0.01s  0.83%  encoding/json.(*decodeState).scanWhile
     0.01s  0.83% 56.67%      0.01s  0.83%  encoding/json.stateInString
     0.01s  0.83% 57.50%      0.02s  1.67%  github.com/VictoriaMetrics/fastcache.(*Cache).Set
     0.01s  0.83% 58.33%      0.02s  1.67%  github.com/VictoriaMetrics/fastcache.(*bucket).Get
     0.01s  0.83% 59.17%      0.06s  5.00%  github.com/gocql/gocql.(*Conn).executeBatch
     0.01s  0.83% 60.00%      0.01s  0.83%  github.com/gocql/gocql.Marshal
     0.01s  0.83% 60.83%      0.01s  0.83%  github.com/google/flatbuffers/go.(*Table).Offset
     0.01s  0.83% 61.67%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).ToBytesNilled
     0.01s  0.83% 62.50%      0.06s  5.00%  github.com/voedger/voedger/pkg/appdef.(*fields).Field (partial-inline)
     0.01s  0.83% 63.33%      0.01s  0.83%  github.com/voedger/voedger/pkg/iauthnzimpl.ACL.IsAllowed
     0.01s  0.83% 64.17%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).putRecordsBatch
     0.01s  0.83% 65.00%      0.06s  5.00%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).KeyBuilder
     0.01s  0.83% 65.83%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Elements
     0.01s  0.83% 66.67%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).validDefs
     0.01s  0.83% 67.50%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).putValue
     0.01s  0.83% 68.33%      0.08s  6.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQName
     0.01s  0.83% 69.17%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers.func2
     0.01s  0.83% 70.00%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.FillElementFromJSON
     0.01s  0.83% 70.83%      0.01s  0.83%  io.LimitReader (inline)
     0.01s  0.83% 71.67%      0.01s  0.83%  net.wrapSyscallError (inline)
     0.01s  0.83% 72.50%      0.02s  1.67%  net/http.(*connReader).Read
     0.01s  0.83% 73.33%      0.01s  0.83%  reflect.(*rtype).Kind (inline)
     0.01s  0.83% 74.17%      0.01s  0.83%  runtime.(*gcWork).tryGetFast (inline)
     0.01s  0.83% 75.00%      0.02s  1.67%  runtime.(*itabTableType).find
     0.01s  0.83% 75.83%      0.04s  3.33%  runtime.(*mcache).refill
     0.01s  0.83% 76.67%      0.01s  0.83%  runtime.(*mheap).setSpans
     0.01s  0.83% 77.50%      0.01s  0.83%  runtime.(*spanSet).pop
     0.01s  0.83% 78.33%      0.01s  0.83%  runtime.(*spanSet).push
     0.01s  0.83% 79.17%      0.01s  0.83%  runtime.(*sweepLocked).sweep
     0.01s  0.83% 80.00%      0.01s  0.83%  runtime.(*waitq).dequeue (inline)
     0.01s  0.83% 80.83%      0.01s  0.83%  runtime.acquireSudog
     0.01s  0.83% 81.67%      0.01s  0.83%  runtime.add (inline)
     0.01s  0.83% 82.50%      0.01s  0.83%  runtime.checkRunqsNoP
     0.01s  0.83% 83.33%      0.01s  0.83%  runtime.exitsyscall
     0.01s  0.83% 84.17%      0.01s  0.83%  runtime.findObject
     0.01s  0.83% 85.00%      0.06s  5.00%  runtime.futexsleep
     0.01s  0.83% 85.83%      0.02s  1.67%  runtime.hashGrow
     0.01s  0.83% 86.67%      0.01s  0.83%  runtime.itabHashFunc (inline)
     0.01s  0.83% 87.50%      0.01s  0.83%  runtime.lock2
     0.01s  0.83% 88.33%      0.05s  4.17%  runtime.makeslice
     0.01s  0.83% 89.17%      0.01s  0.83%  runtime.mapaccess1_fast64
     0.01s  0.83% 90.00%      0.03s  2.50%  runtime.mapassign_faststr
     0.01s  0.83% 90.83%      0.07s  5.83%  runtime.netpoll
     0.01s  0.83% 91.67%      0.01s  0.83%  runtime.netpollblock
     0.01s  0.83% 92.50%      0.01s  0.83%  runtime.read
     0.01s  0.83% 93.33%      0.04s  3.33%  runtime.scanobject
     0.01s  0.83% 94.17%      0.26s 21.67%  runtime.schedule
     0.01s  0.83% 95.00%      0.06s  5.00%  runtime.selectgo
     0.01s  0.83% 95.83%      0.02s  1.67%  runtime.sellock
     0.01s  0.83% 96.67%      0.01s  0.83%  runtime.stealWork
     0.01s  0.83% 97.50%      0.01s  0.83%  runtime.typedmemmove
     0.01s  0.83% 98.33%      0.01s  0.83%  runtime.writeHeapBits.write
     0.01s  0.83% 99.17%      0.01s  0.83%  runtime/internal/atomic.(*Uint8).Load (inline)
     0.01s  0.83%   100%      0.01s  0.83%  sync/atomic.(*Int32).Add (inline)
         0     0%   100%      0.02s  1.67%  bufio.(*Reader).Peek
         0     0%   100%      0.05s  4.17%  bufio.(*Reader).Read
         0     0%   100%      0.02s  1.67%  bufio.(*Reader).fill
         0     0%   100%      0.02s  1.67%  bufio.(*Writer).Flush
         0     0%   100%      0.01s  0.83%  bufio.(*Writer).Write
         0     0%   100%      0.01s  0.83%  encoding/json.(*Decoder).Decode
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).arrayInterface
         0     0%   100%      0.08s  6.67%  encoding/json.(*decodeState).object
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).objectInterface
         0     0%   100%      0.09s  7.50%  encoding/json.(*decodeState).unmarshal
         0     0%   100%      0.08s  6.67%  encoding/json.(*decodeState).value
         0     0%   100%      0.06s  5.00%  encoding/json.(*decodeState).valueInterface
         0     0%   100%      0.11s  9.17%  encoding/json.Unmarshal
         0     0%   100%      0.01s  0.83%  encoding/json.unquote (inline)
         0     0%   100%      0.02s  1.67%  github.com/VictoriaMetrics/fastcache.(*Cache).HasGet
         0     0%   100%      0.01s  0.83%  github.com/VictoriaMetrics/fastcache.(*bucket).Set
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*Batch).attempt
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Batch).execute
         0     0%   100%      0.06s  5.00%  github.com/gocql/gocql.(*Conn).exec
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Conn).executeQuery
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*Conn).prepareStatement
         0     0%   100%      0.05s  4.17%  github.com/gocql/gocql.(*Conn).recv
         0     0%   100%      0.05s  4.17%  github.com/gocql/gocql.(*Conn).serve
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*HostInfo).ConnectAddress
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Query).Exec
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Query).Iter
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Query).execute
         0     0%   100%      0.07s  5.83%  github.com/gocql/gocql.(*Session).ExecuteBatch
         0     0%   100%      0.07s  5.83%  github.com/gocql/gocql.(*Session).executeBatch
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*Session).executeQuery
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*framer).writeExecuteFrame
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*framer).writeLong (inline)
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*framer).writeQueryParams
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*preparedLRU).keyFor (inline)
         0     0%   100%      0.10s  8.33%  github.com/gocql/gocql.(*queryExecutor).attemptQuery
         0     0%   100%      0.10s  8.33%  github.com/gocql/gocql.(*queryExecutor).do
         0     0%   100%      0.10s  8.33%  github.com/gocql/gocql.(*queryExecutor).executeQuery
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*queryMetrics).attempt
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*queryMetrics).hostMetricsLocked
         0     0%   100%      0.03s  2.50%  github.com/gocql/gocql.(*writeCoalescer).flush
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*writeCoalescer).writeContext
         0     0%   100%      0.05s  4.17%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.(*writeCoalescer).writeFlusher.func1
         0     0%   100%      0.05s  4.17%  github.com/gocql/gocql.(*writeCoalescer).writeFlusherImpl
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.(*writeExecuteFrame).buildFrame
         0     0%   100%      0.02s  1.67%  github.com/gocql/gocql.appendLong (inline)
         0     0%   100%      0.01s  0.83%  github.com/gocql/gocql.marshalQueryValue
         0     0%   100%      0.05s  4.17%  github.com/gocql/gocql.readHeader
         0     0%   100%      0.02s  1.67%  github.com/golang-jwt/jwt.(*Parser).Parse (inline)
         0     0%   100%      0.02s  1.67%  github.com/golang-jwt/jwt.(*Parser).ParseUnverified
         0     0%   100%      0.02s  1.67%  github.com/golang-jwt/jwt.(*Parser).ParseWithClaims
         0     0%   100%      0.02s  1.67%  github.com/golang-jwt/jwt.Parse
         0     0%   100%      0.04s  3.33%  github.com/google/flatbuffers/go.NewBuilder (inline)
         0     0%   100%      0.02s  1.67%  github.com/gorilla/mux.(*Router).ServeHTTP
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*articleService).isPromoArticle
         0     0%   100%      0.06s  5.00%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).do.func3
         0     0%   100%      0.02s  1.67%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateDailyPayments
         0     0%   100%      0.02s  1.67%  github.com/untillpro/airs-bp3/packages/air/dashboard.(*dashboardProjectorLogic).updateHourlySales
         0     0%   100%      0.07s  5.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/dashboard.glob..func1.2
         0     0%   100%      0.02s  1.67%  github.com/untillpro/airs-bp3/packages/air/edit.execCmdOrders
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1
         0     0%   100%      0.01s  0.83%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.ProvideTableBusinessValidator.func1.1
         0     0%   100%      0.04s  3.33%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3
         0     0%   100%      0.04s  3.33%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.1
         0     0%   100%      0.03s  2.50%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func3.2
         0     0%   100%      0.04s  3.33%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4
         0     0%   100%      0.04s  3.33%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.1
         0     0%   100%      0.02s  1.67%  github.com/untillpro/airs-bp3/packages/air/tablesoverview.glob..func4.2
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).GetInt64
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).HasValue (inline)
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).IterateFields
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).Reset
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).getByField
         0     0%   100%      0.02s  1.67%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetT
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).getFieldUOffsetTByOrder
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*Buffer).releaseFields
         0     0%   100%      0.01s  0.83%  github.com/untillpro/dynobuffers.(*modifiedField).Release
         0     0%   100%      0.09s  7.50%  github.com/untillpro/dynobuffers.NewBuffer
         0     0%   100%      0.09s  7.50%  github.com/untillpro/dynobuffers.getBuffer (inline)
         0     0%   100%      0.09s  7.50%  github.com/untillpro/dynobuffers.glob..func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/appdef.(*appDef).View
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/appdef.(*appDef).defByKind
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/appdef.(*fields).Fields
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthenticator).Authenticate
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/iauthnzimpl.(*implIAuthorizer).Authorize
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/in10nmem.(*N10nBroker).WatchChannel
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Get
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).Put
         0     0%   100%      0.07s  5.83%  github.com/voedger/voedger/pkg/istoragecache.(*cachedAppStorage).PutBatch
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).Put
         0     0%   100%      0.07s  5.83%  github.com/voedger/voedger/pkg/istorageimpl/istoragecas.(*appStorageType).PutBatch
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutPlog
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).PutWlog
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*appEventsType).ReadPLog
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Apply2
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).Get
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*appRecordsType).getRecord
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).Get
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).NewValueBuilder
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*appViewRecords).PutBatch
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*commandFunction).Exec
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).Update
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/istructsmem.(*cudType).enumRecs
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).Build
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).ElementBuilder
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).EnumElements (inline)
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).build.func1
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).forEach
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*elementType).regenerateIDs.func2
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).BuildRawEvent
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).CUDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*eventType).regenerateIDs
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutRecordID
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*keyType).PutString
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*recordType).copyFrom (inline)
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsInt64
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).AsRecordID
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).HasValue
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).ModifiedFields
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutChars
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutRecordID
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).PutString
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).RecordIDs.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).build
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).copyFrom
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).fieldDef (inline)
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).loadFromBytes
         0     0%   100%      0.09s  7.50%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setDef
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*rowType).setQNameID
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validDocument (inline)
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElement
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validElementContainers
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRecord
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validator).validRow
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUD
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUDRefRawIDs
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validCUDRefRawIDs.func1
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEvent
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventCUDs
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validEventObjects
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validKey.func2
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validObject
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*validators).validRecord
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.(*valueType).valueDef
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/istructsmem.CheckRefIntegrity.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.loadRow
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/istructsmem.newKey
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/istructsmem.newUpdateRec
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/istructsmem.newValue
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/itokens-payloads.(*implIAppTokens).ValidateToken
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/itokensjwt.(*JWTSigner).ValidateToken
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/itokensjwt.buildGenericPayload
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doAsync
         0     0%   100%      0.54s 45.00%  github.com/voedger/voedger/pkg/pipeline.(*WiredOperator).doSync
         0     0%   100%      0.52s 43.33%  github.com/voedger/voedger/pkg/pipeline.(*implISyncOperatorSimple).DoSync
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/pipeline.(*serviceOperator).DoSync.func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/pipeline.AsyncPipeline.SendAsync
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/pipeline.forkOperator.DoSync
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/pipeline.puller_async
         0     0%   100%      0.59s 49.17%  github.com/voedger/voedger/pkg/pipeline.puller_sync
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authenticate
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).authorizeRequest
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).putPLog
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).validate.func2
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/processors/command.(*cmdProc).writeCUDs
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/processors/command.applyPLogEvent
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/processors/command.buildRawEvent
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/processors/command.execCommand
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/processors/command.getArgsObject
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/processors/command.putWLog
         0     0%   100%      0.09s  7.50%  github.com/voedger/voedger/pkg/processors/command.unmarshalRequestBody
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).Run
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).handleEvent
         0     0%   100%      0.05s  4.17%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).keepReading.func1
         0     0%   100%      0.03s  2.50%  github.com/voedger/voedger/pkg/projectors.(*asyncActualizer).readPlogToTheEnd2
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/projectors.(*asyncProjector).DoAsync
         0     0%   100%      0.08s  6.67%  github.com/voedger/voedger/pkg/projectors.newSyncBranch.func1
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/projectors.syncActualizerFactory.func3
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/router.corsHandler.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/router.requestHandler.func1
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/router.writeResponse
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*bundledHostState).CanExist
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/state.(*hostState).ApplyIntents
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/state.(*hostState).CanExist
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/state.(*hostState).KeyBuilder
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*hostState).MustExist
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*hostState).NewValue
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/state.(*hostState).UpdateValue
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/state.(*recordsStorage).Get
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/state.(*recordsStorage).ProvideValueBuilderForUpdate
         0     0%   100%      0.04s  3.33%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ApplyBatch
         0     0%   100%      0.02s  1.67%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).Get
         0     0%   100%      0.06s  5.00%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).NewKeyBuilder
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/state.(*viewRecordsStorage).ProvideValueBuilder
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/builtin.provideRefIntegrityValidator.func2
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/sys/journal.glob..func1
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/utils.Marshal
         0     0%   100%      0.01s  0.83%  github.com/voedger/voedger/pkg/vvm.provideSubjectGetterFunc.func1
         0     0%   100%      0.06s  5.00%  internal/poll.(*FD).Read
         0     0%   100%      0.01s  0.83%  internal/poll.(*FD).SetReadDeadline (inline)
         0     0%   100%      0.01s  0.83%  internal/poll.(*FD).Write
         0     0%   100%      0.02s  1.67%  internal/poll.(*FD).Writev
         0     0%   100%      0.01s  0.83%  internal/poll.(*pollDesc).wait
         0     0%   100%      0.01s  0.83%  internal/poll.(*pollDesc).waitRead (inline)
         0     0%   100%      0.06s  5.00%  internal/poll.ignoringEINTRIO (inline)
         0     0%   100%      0.01s  0.83%  internal/poll.runtime_pollSetDeadline
         0     0%   100%      0.01s  0.83%  internal/poll.runtime_pollWait
         0     0%   100%      0.01s  0.83%  internal/poll.setDeadlineImpl
         0     0%   100%      0.02s  1.67%  internal/poll.writev
         0     0%   100%      0.05s  4.17%  io.ReadAtLeast
         0     0%   100%      0.05s  4.17%  io.ReadFull (inline)
         0     0%   100%      0.03s  2.50%  net.(*Buffers).WriteTo
         0     0%   100%      0.06s  5.00%  net.(*conn).Read
         0     0%   100%      0.01s  0.83%  net.(*conn).SetReadDeadline
         0     0%   100%      0.01s  0.83%  net.(*conn).Write
         0     0%   100%      0.03s  2.50%  net.(*conn).writeBuffers
         0     0%   100%      0.06s  5.00%  net.(*netFD).Read
         0     0%   100%      0.01s  0.83%  net.(*netFD).SetReadDeadline (inline)
         0     0%   100%      0.01s  0.83%  net.(*netFD).Write
         0     0%   100%      0.03s  2.50%  net.(*netFD).writeBuffers
         0     0%   100%      0.01s  0.83%  net/http.(*chunkWriter).Write
         0     0%   100%      0.01s  0.83%  net/http.(*chunkWriter).flush
         0     0%   100%      0.01s  0.83%  net/http.(*chunkWriter).writeHeader
         0     0%   100%      0.01s  0.83%  net/http.(*conn).readRequest
         0     0%   100%      0.06s  5.00%  net/http.(*conn).serve
         0     0%   100%      0.01s  0.83%  net/http.(*connReader).abortPendingRead
         0     0%   100%      0.02s  1.67%  net/http.(*response).Flush
         0     0%   100%      0.02s  1.67%  net/http.(*response).FlushError
         0     0%   100%      0.01s  0.83%  net/http.(*response).finishRequest
         0     0%   100%      0.02s  1.67%  net/http.HandlerFunc.ServeHTTP
         0     0%   100%      0.01s  0.83%  net/http.checkConnErrorWriter.Write
         0     0%   100%      0.01s  0.83%  net/http.extraHeader.Write
         0     0%   100%      0.01s  0.83%  net/http.readRequest
         0     0%   100%      0.01s  0.83%  net/http.readTransfer
         0     0%   100%      0.02s  1.67%  net/http.serverHandler.ServeHTTP
         0     0%   100%      0.01s  0.83%  reflect.New
         0     0%   100%      0.01s  0.83%  reflect.Value.Convert
         0     0%   100%      0.01s  0.83%  reflect.ValueOf (inline)
         0     0%   100%      0.01s  0.83%  reflect.cvtBytesString
         0     0%   100%      0.01s  0.83%  reflect.makeString
         0     0%   100%      0.01s  0.83%  reflect.unpackEface (inline)
         0     0%   100%      0.01s  0.83%  reflect.unsafe_New
         0     0%   100%      0.04s  3.33%  runtime.(*mcache).nextFree
         0     0%   100%      0.02s  1.67%  runtime.(*mcentral).cacheSpan
         0     0%   100%      0.01s  0.83%  runtime.(*mcentral).grow
         0     0%   100%      0.01s  0.83%  runtime.(*mcentral).uncacheSpan
         0     0%   100%      0.01s  0.83%  runtime.(*mheap).alloc
         0     0%   100%      0.01s  0.83%  runtime.(*mheap).alloc.func1
         0     0%   100%      0.01s  0.83%  runtime.(*mheap).allocSpan
         0     0%   100%      0.01s  0.83%  runtime.(*mheap).initSpan
         0     0%   100%      0.01s  0.83%  runtime.addtimer
         0     0%   100%      0.02s  1.67%  runtime.assertE2I
         0     0%   100%      0.01s  0.83%  runtime.assertE2I2
         0     0%   100%      0.01s  0.83%  runtime.assertI2I
         0     0%   100%      0.01s  0.83%  runtime.bgsweep
         0     0%   100%      0.05s  4.17%  runtime.chansend
         0     0%   100%      0.05s  4.17%  runtime.chansend1
         0     0%   100%      0.02s  1.67%  runtime.checkTimers
         0     0%   100%      0.01s  0.83%  runtime.concatstring3
         0     0%   100%      0.01s  0.83%  runtime.concatstrings
         0     0%   100%      0.01s  0.83%  runtime.convTslice
         0     0%   100%      0.01s  0.83%  runtime.entersyscall
         0     0%   100%      0.01s  0.83%  runtime.entersyscall_sysmon
         0     0%   100%      0.01s  0.83%  runtime.evacuate_fast64
         0     0%   100%      0.07s  5.83%  runtime.futexwakeup
         0     0%   100%      0.05s  4.17%  runtime.gcBgMarkWorker
         0     0%   100%      0.05s  4.17%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.05s  4.17%  runtime.gcDrain
         0     0%   100%      0.02s  1.67%  runtime.goexit0
         0     0%   100%      0.04s  3.33%  runtime.goready.func1
         0     0%   100%      0.01s  0.83%  runtime.growWork_fast64
         0     0%   100%      0.02s  1.67%  runtime.growslice
         0     0%   100%      0.01s  0.83%  runtime.lock (inline)
         0     0%   100%      0.01s  0.83%  runtime.lockWithRank (inline)
         0     0%   100%      0.06s  5.00%  runtime.mPark (inline)
         0     0%   100%      0.01s  0.83%  runtime.makeBucketArray
         0     0%   100%      0.01s  0.83%  runtime.makechan
         0     0%   100%      0.01s  0.83%  runtime.mapassign_fast64
         0     0%   100%      0.01s  0.83%  runtime.mapiternext
         0     0%   100%      0.26s 21.67%  runtime.mcall
         0     0%   100%      0.01s  0.83%  runtime.modtimer
         0     0%   100%      0.02s  1.67%  runtime.netpollBreak
         0     0%   100%      0.01s  0.83%  runtime.netpollgoready (inline)
         0     0%   100%      0.01s  0.83%  runtime.newarray
         0     0%   100%      0.10s  8.33%  runtime.newobject
         0     0%   100%      0.06s  5.00%  runtime.notesleep
         0     0%   100%      0.07s  5.83%  runtime.notewakeup
         0     0%   100%      0.24s 20.00%  runtime.park_m
         0     0%   100%      0.01s  0.83%  runtime.pidleget
         0     0%   100%      0.01s  0.83%  runtime.pidlegetSpinning
         0     0%   100%      0.01s  0.83%  runtime.rawstring (inline)
         0     0%   100%      0.01s  0.83%  runtime.rawstringtmp
         0     0%   100%      0.04s  3.33%  runtime.ready
         0     0%   100%      0.01s  0.83%  runtime.reentersyscall
         0     0%   100%      0.03s  2.50%  runtime.resetspinning
         0     0%   100%      0.01s  0.83%  runtime.resettimer (inline)
         0     0%   100%      0.06s  5.00%  runtime.send
         0     0%   100%      0.01s  0.83%  runtime.sendDirect
         0     0%   100%      0.01s  0.83%  runtime.slicebytetostring
         0     0%   100%      0.06s  5.00%  runtime.startm
         0     0%   100%      0.06s  5.00%  runtime.stopm
         0     0%   100%      0.01s  0.83%  runtime.sweepone
         0     0%   100%      0.11s  9.17%  runtime.systemstack
         0     0%   100%      0.02s  1.67%  runtime.wakeNetPoller
         0     0%   100%      0.07s  5.83%  runtime.wakep
         0     0%   100%      0.02s  1.67%  runtime.write
         0     0%   100%      0.01s  0.83%  runtime/internal/atomic.(*Bool).Load (inline)
         0     0%   100%      0.05s  4.17%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.09s  7.50%  sync.(*Pool).Get
         0     0%   100%      0.01s  0.83%  sync.(*RWMutex).RLock (inline)
         0     0%   100%      0.06s  5.00%  syscall.RawSyscall6
         0     0%   100%      0.05s  4.17%  syscall.Read (inline)
         0     0%   100%      0.08s  6.67%  syscall.Syscall
         0     0%   100%      0.01s  0.83%  syscall.Write (inline)
         0     0%   100%      0.05s  4.17%  syscall.read
         0     0%   100%      0.01s  0.83%  syscall.write
         0     0%   100%      0.01s  0.83%  time.(*Timer).Reset
         0     0%   100%      0.02s  1.67%  time.NewTimer
         0     0%   100%      0.01s  0.83%  time.resetTimer
         0     0%   100%      0.01s  0.83%  time.startTimer
